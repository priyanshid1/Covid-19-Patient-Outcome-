{"ast":null,"code":"var _excluded = [\"row\", \"col\"];\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) {\n  _checkPrivateRedeclaration(obj, privateMap);\n  privateMap.set(obj, value);\n}\nfunction _checkPrivateRedeclaration(obj, privateCollection) {\n  if (privateCollection.has(obj)) {\n    throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n  }\n}\nfunction _classPrivateFieldGet(receiver, privateMap) {\n  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\");\n  return _classApplyDescriptorGet(receiver, descriptor);\n}\nfunction _classApplyDescriptorGet(receiver, descriptor) {\n  if (descriptor.get) {\n    return descriptor.get.call(receiver);\n  }\n  return descriptor.value;\n}\nfunction _classPrivateFieldSet(receiver, privateMap, value) {\n  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\");\n  _classApplyDescriptorSet(receiver, descriptor, value);\n  return value;\n}\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n  }\n  return privateMap.get(receiver);\n}\nfunction _classApplyDescriptorSet(receiver, descriptor, value) {\n  if (descriptor.set) {\n    descriptor.set.call(receiver, value);\n  } else {\n    if (!descriptor.writable) {\n      throw new TypeError(\"attempted to set read only private field\");\n    }\n    descriptor.value = value;\n  }\n}\nimport { extend, isObject } from \"../../../helpers/object.mjs\";\nimport { arrayEach } from \"../../../helpers/array.mjs\";\nimport { normalizeSettings } from \"./settingsNormalizer.mjs\";\n/**\n * List of properties which are configurable. That properties can be changed using public API.\n *\n * @type {string[]}\n */\n\nexport var HEADER_CONFIGURABLE_PROPS = ['label', 'collapsible'];\n/**\n * The class manages and normalizes settings passed by the developer\n * into the nested headers plugin. The SourceSettings class is a\n * source of truth for tree builder (HeaderTree) module.\n *\n * @private\n * @class SourceSettings\n */\n\nvar _data = /*#__PURE__*/new WeakMap();\nvar _dataLength = /*#__PURE__*/new WeakMap();\nvar _columnsLimit = /*#__PURE__*/new WeakMap();\nvar SourceSettings = /*#__PURE__*/function () {\n  function SourceSettings() {\n    _classCallCheck(this, SourceSettings);\n    _classPrivateFieldInitSpec(this, _data, {\n      writable: true,\n      value: []\n    });\n    _classPrivateFieldInitSpec(this, _dataLength, {\n      writable: true,\n      value: 0\n    });\n    _classPrivateFieldInitSpec(this, _columnsLimit, {\n      writable: true,\n      value: Infinity\n    });\n  }\n  _createClass(SourceSettings, [{\n    key: \"setColumnsLimit\",\n    value:\n    /**\n     * Sets columns limit to the source settings will be trimmed. All headers which\n     * overlap the column limit will be reduced to keep the structure solid.\n     *\n     * @param {number} columnsCount The number of columns to limit to.\n     */\n    function setColumnsLimit(columnsCount) {\n      _classPrivateFieldSet(this, _columnsLimit, columnsCount);\n    }\n    /**\n     * Sets a new nested header configuration.\n     *\n     * @param {Array[]} [nestedHeadersSettings=[]] The user-defined nested headers settings.\n     */\n  }, {\n    key: \"setData\",\n    value: function setData() {\n      var nestedHeadersSettings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      _classPrivateFieldSet(this, _data, normalizeSettings(nestedHeadersSettings, _classPrivateFieldGet(this, _columnsLimit)));\n      _classPrivateFieldSet(this, _dataLength, _classPrivateFieldGet(this, _data).length);\n    }\n    /**\n     * Gets normalized source settings.\n     *\n     * @returns {Array[]}\n     */\n  }, {\n    key: \"getData\",\n    value: function getData() {\n      return _classPrivateFieldGet(this, _data);\n    }\n    /**\n     * Merges settings with current source settings.\n     *\n     * @param {object[]} additionalSettings An array of objects with `row`, `col` and additional\n     *                                      properties to merge with current source settings.\n     */\n  }, {\n    key: \"mergeWith\",\n    value: function mergeWith(additionalSettings) {\n      var _this = this;\n      arrayEach(additionalSettings, function (_ref) {\n        var row = _ref.row,\n          col = _ref.col,\n          rest = _objectWithoutProperties(_ref, _excluded);\n        var headerSettings = _this.getHeaderSettings(row, col);\n        if (headerSettings !== null) {\n          extend(headerSettings, rest, HEADER_CONFIGURABLE_PROPS);\n        }\n      });\n    }\n    /**\n     * Maps the current state with a callback. For each source settings the callback function\n     * is called. If the function returns value that value is merged with the source settings.\n     *\n     * @param {Function} callback A function that is called for every header settings.\n     *                            Each time the callback is called, the returned value extends\n     *                            header settings.\n     */\n  }, {\n    key: \"map\",\n    value: function map(callback) {\n      arrayEach(_classPrivateFieldGet(this, _data), function (header) {\n        arrayEach(header, function (headerSettings) {\n          var propsToExtend = callback(_objectSpread({}, headerSettings));\n          if (isObject(propsToExtend)) {\n            extend(headerSettings, propsToExtend, HEADER_CONFIGURABLE_PROPS);\n          }\n        });\n      });\n    }\n    /**\n     * Gets source column header settings for a specified header. The returned\n     * object contains information about the header label, its colspan length,\n     * or if it is hidden in the header renderers.\n     *\n     * @param {number} headerLevel Header level (0 = most distant to the table).\n     * @param {number} columnIndex A visual column index.\n     * @returns {object|null}\n     */\n  }, {\n    key: \"getHeaderSettings\",\n    value: function getHeaderSettings(headerLevel, columnIndex) {\n      var _headersSettings$colu;\n      if (headerLevel >= _classPrivateFieldGet(this, _dataLength) || headerLevel < 0) {\n        return null;\n      }\n      var headersSettings = _classPrivateFieldGet(this, _data)[headerLevel];\n      if (columnIndex >= headersSettings.length) {\n        return null;\n      }\n      return (_headersSettings$colu = headersSettings[columnIndex]) !== null && _headersSettings$colu !== void 0 ? _headersSettings$colu : null;\n    }\n    /**\n     * Gets source of column headers settings for specified headers. If the retrieved column\n     * settings overlap the range \"box\" determined by \"columnIndex\" and \"columnsLength\"\n     * the exception will be thrown.\n     *\n     * @param {number} headerLevel Header level (0 = most distant to the table).\n     * @param {number} columnIndex A visual column index from which the settings will be extracted.\n     * @param {number} [columnsLength=1] The number of columns involved in the extraction of settings.\n     * @returns {object}\n     */\n  }, {\n    key: \"getHeadersSettings\",\n    value: function getHeadersSettings(headerLevel, columnIndex) {\n      var columnsLength = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      var headersSettingsChunks = [];\n      if (headerLevel >= _classPrivateFieldGet(this, _dataLength) || headerLevel < 0) {\n        return headersSettingsChunks;\n      }\n      var headersSettings = _classPrivateFieldGet(this, _data)[headerLevel];\n      var currentLength = 0;\n      for (var i = columnIndex; i < headersSettings.length; i++) {\n        var headerSettings = headersSettings[i];\n        if (headerSettings.isPlaceholder) {\n          throw new Error('The first column settings cannot overlap the other header layers');\n        }\n        currentLength += headerSettings.colspan;\n        headersSettingsChunks.push(headerSettings);\n        if (headerSettings.colspan > 1) {\n          i += headerSettings.colspan - 1;\n        } // We met the current sum of the child colspans\n\n        if (currentLength === columnsLength) {\n          break;\n        } // We exceeds the current sum of the child colspans, the last columns colspan overlaps the \"columnsLength\" length.\n\n        if (currentLength > columnsLength) {\n          throw new Error('The last column settings cannot overlap the other header layers');\n        }\n      }\n      return headersSettingsChunks;\n    }\n    /**\n     * Gets a total number of headers levels.\n     *\n     * @returns {number}\n     */\n  }, {\n    key: \"getLayersCount\",\n    value: function getLayersCount() {\n      return _classPrivateFieldGet(this, _dataLength);\n    }\n    /**\n     * Gets a total number of columns count.\n     *\n     * @returns {number}\n     */\n  }, {\n    key: \"getColumnsCount\",\n    value: function getColumnsCount() {\n      return _classPrivateFieldGet(this, _dataLength) > 0 ? _classPrivateFieldGet(this, _data)[0].length : 0;\n    }\n    /**\n     * Clears the data.\n     */\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      _classPrivateFieldSet(this, _data, []);\n      _classPrivateFieldSet(this, _dataLength, 0);\n    }\n  }]);\n  return SourceSettings;\n}();\nexport { SourceSettings as default };","map":{"version":3,"names":["_excluded","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call","sourceKeys","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","_classPrivateFieldInitSpec","privateMap","_checkPrivateRedeclaration","set","privateCollection","has","_classPrivateFieldGet","receiver","_classExtractFieldDescriptor","_classApplyDescriptorGet","get","_classPrivateFieldSet","_classApplyDescriptorSet","action","extend","isObject","arrayEach","normalizeSettings","HEADER_CONFIGURABLE_PROPS","_data","WeakMap","_dataLength","_columnsLimit","SourceSettings","Infinity","setColumnsLimit","columnsCount","setData","nestedHeadersSettings","undefined","getData","mergeWith","additionalSettings","_this","_ref","row","col","rest","headerSettings","getHeaderSettings","map","callback","header","propsToExtend","headerLevel","columnIndex","_headersSettings$colu","headersSettings","getHeadersSettings","columnsLength","headersSettingsChunks","currentLength","isPlaceholder","Error","colspan","getLayersCount","getColumnsCount","clear","default"],"sources":["/Users/priyadeliwala/Desktop/sales-dashboard/node_modules/handsontable/plugins/nestedHeaders/stateManager/sourceSettings.mjs"],"sourcesContent":["import \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nvar _excluded = [\"row\", \"col\"];\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.weak-map.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\n\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\n\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\n\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\n\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\n\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\n\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError(\"attempted to set read only private field\"); } descriptor.value = value; } }\n\nimport { extend, isObject } from \"../../../helpers/object.mjs\";\nimport { arrayEach } from \"../../../helpers/array.mjs\";\nimport { normalizeSettings } from \"./settingsNormalizer.mjs\";\n/**\n * List of properties which are configurable. That properties can be changed using public API.\n *\n * @type {string[]}\n */\n\nexport var HEADER_CONFIGURABLE_PROPS = ['label', 'collapsible'];\n/**\n * The class manages and normalizes settings passed by the developer\n * into the nested headers plugin. The SourceSettings class is a\n * source of truth for tree builder (HeaderTree) module.\n *\n * @private\n * @class SourceSettings\n */\n\nvar _data = /*#__PURE__*/new WeakMap();\n\nvar _dataLength = /*#__PURE__*/new WeakMap();\n\nvar _columnsLimit = /*#__PURE__*/new WeakMap();\n\nvar SourceSettings = /*#__PURE__*/function () {\n  function SourceSettings() {\n    _classCallCheck(this, SourceSettings);\n\n    _classPrivateFieldInitSpec(this, _data, {\n      writable: true,\n      value: []\n    });\n\n    _classPrivateFieldInitSpec(this, _dataLength, {\n      writable: true,\n      value: 0\n    });\n\n    _classPrivateFieldInitSpec(this, _columnsLimit, {\n      writable: true,\n      value: Infinity\n    });\n  }\n\n  _createClass(SourceSettings, [{\n    key: \"setColumnsLimit\",\n    value:\n    /**\n     * Sets columns limit to the source settings will be trimmed. All headers which\n     * overlap the column limit will be reduced to keep the structure solid.\n     *\n     * @param {number} columnsCount The number of columns to limit to.\n     */\n    function setColumnsLimit(columnsCount) {\n      _classPrivateFieldSet(this, _columnsLimit, columnsCount);\n    }\n    /**\n     * Sets a new nested header configuration.\n     *\n     * @param {Array[]} [nestedHeadersSettings=[]] The user-defined nested headers settings.\n     */\n\n  }, {\n    key: \"setData\",\n    value: function setData() {\n      var nestedHeadersSettings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      _classPrivateFieldSet(this, _data, normalizeSettings(nestedHeadersSettings, _classPrivateFieldGet(this, _columnsLimit)));\n\n      _classPrivateFieldSet(this, _dataLength, _classPrivateFieldGet(this, _data).length);\n    }\n    /**\n     * Gets normalized source settings.\n     *\n     * @returns {Array[]}\n     */\n\n  }, {\n    key: \"getData\",\n    value: function getData() {\n      return _classPrivateFieldGet(this, _data);\n    }\n    /**\n     * Merges settings with current source settings.\n     *\n     * @param {object[]} additionalSettings An array of objects with `row`, `col` and additional\n     *                                      properties to merge with current source settings.\n     */\n\n  }, {\n    key: \"mergeWith\",\n    value: function mergeWith(additionalSettings) {\n      var _this = this;\n\n      arrayEach(additionalSettings, function (_ref) {\n        var row = _ref.row,\n            col = _ref.col,\n            rest = _objectWithoutProperties(_ref, _excluded);\n\n        var headerSettings = _this.getHeaderSettings(row, col);\n\n        if (headerSettings !== null) {\n          extend(headerSettings, rest, HEADER_CONFIGURABLE_PROPS);\n        }\n      });\n    }\n    /**\n     * Maps the current state with a callback. For each source settings the callback function\n     * is called. If the function returns value that value is merged with the source settings.\n     *\n     * @param {Function} callback A function that is called for every header settings.\n     *                            Each time the callback is called, the returned value extends\n     *                            header settings.\n     */\n\n  }, {\n    key: \"map\",\n    value: function map(callback) {\n      arrayEach(_classPrivateFieldGet(this, _data), function (header) {\n        arrayEach(header, function (headerSettings) {\n          var propsToExtend = callback(_objectSpread({}, headerSettings));\n\n          if (isObject(propsToExtend)) {\n            extend(headerSettings, propsToExtend, HEADER_CONFIGURABLE_PROPS);\n          }\n        });\n      });\n    }\n    /**\n     * Gets source column header settings for a specified header. The returned\n     * object contains information about the header label, its colspan length,\n     * or if it is hidden in the header renderers.\n     *\n     * @param {number} headerLevel Header level (0 = most distant to the table).\n     * @param {number} columnIndex A visual column index.\n     * @returns {object|null}\n     */\n\n  }, {\n    key: \"getHeaderSettings\",\n    value: function getHeaderSettings(headerLevel, columnIndex) {\n      var _headersSettings$colu;\n\n      if (headerLevel >= _classPrivateFieldGet(this, _dataLength) || headerLevel < 0) {\n        return null;\n      }\n\n      var headersSettings = _classPrivateFieldGet(this, _data)[headerLevel];\n\n      if (columnIndex >= headersSettings.length) {\n        return null;\n      }\n\n      return (_headersSettings$colu = headersSettings[columnIndex]) !== null && _headersSettings$colu !== void 0 ? _headersSettings$colu : null;\n    }\n    /**\n     * Gets source of column headers settings for specified headers. If the retrieved column\n     * settings overlap the range \"box\" determined by \"columnIndex\" and \"columnsLength\"\n     * the exception will be thrown.\n     *\n     * @param {number} headerLevel Header level (0 = most distant to the table).\n     * @param {number} columnIndex A visual column index from which the settings will be extracted.\n     * @param {number} [columnsLength=1] The number of columns involved in the extraction of settings.\n     * @returns {object}\n     */\n\n  }, {\n    key: \"getHeadersSettings\",\n    value: function getHeadersSettings(headerLevel, columnIndex) {\n      var columnsLength = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      var headersSettingsChunks = [];\n\n      if (headerLevel >= _classPrivateFieldGet(this, _dataLength) || headerLevel < 0) {\n        return headersSettingsChunks;\n      }\n\n      var headersSettings = _classPrivateFieldGet(this, _data)[headerLevel];\n\n      var currentLength = 0;\n\n      for (var i = columnIndex; i < headersSettings.length; i++) {\n        var headerSettings = headersSettings[i];\n\n        if (headerSettings.isPlaceholder) {\n          throw new Error('The first column settings cannot overlap the other header layers');\n        }\n\n        currentLength += headerSettings.colspan;\n        headersSettingsChunks.push(headerSettings);\n\n        if (headerSettings.colspan > 1) {\n          i += headerSettings.colspan - 1;\n        } // We met the current sum of the child colspans\n\n\n        if (currentLength === columnsLength) {\n          break;\n        } // We exceeds the current sum of the child colspans, the last columns colspan overlaps the \"columnsLength\" length.\n\n\n        if (currentLength > columnsLength) {\n          throw new Error('The last column settings cannot overlap the other header layers');\n        }\n      }\n\n      return headersSettingsChunks;\n    }\n    /**\n     * Gets a total number of headers levels.\n     *\n     * @returns {number}\n     */\n\n  }, {\n    key: \"getLayersCount\",\n    value: function getLayersCount() {\n      return _classPrivateFieldGet(this, _dataLength);\n    }\n    /**\n     * Gets a total number of columns count.\n     *\n     * @returns {number}\n     */\n\n  }, {\n    key: \"getColumnsCount\",\n    value: function getColumnsCount() {\n      return _classPrivateFieldGet(this, _dataLength) > 0 ? _classPrivateFieldGet(this, _data)[0].length : 0;\n    }\n    /**\n     * Clears the data.\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      _classPrivateFieldSet(this, _data, []);\n\n      _classPrivateFieldSet(this, _dataLength, 0);\n    }\n  }]);\n\n  return SourceSettings;\n}();\n\nexport { SourceSettings as default };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
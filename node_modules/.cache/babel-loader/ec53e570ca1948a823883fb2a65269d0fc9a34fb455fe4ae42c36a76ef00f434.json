{"ast":null,"code":"import { arrayEach, arrayMap } from \"../../helpers/array.mjs\";\nimport { hasClass } from \"../../helpers/dom/element.mjs\";\nimport { KEY as SEPARATOR } from \"./predefinedItems/separator.mjs\";\n/**\n * @param {CellRange[]} selRanges An array of the cell ranges.\n * @returns {object[]}\n */\n\nexport function normalizeSelection(selRanges) {\n  return arrayMap(selRanges, function (range) {\n    return {\n      start: range.getTopLeftCorner(),\n      end: range.getBottomRightCorner()\n    };\n  });\n}\n/**\n * @param {HTMLElement} cell The HTML cell element to check.\n * @returns {boolean}\n */\n\nexport function isSeparator(cell) {\n  return hasClass(cell, 'htSeparator');\n}\n/**\n * @param {HTMLElement} cell The HTML cell element to check.\n * @returns {boolean}\n */\n\nexport function hasSubMenu(cell) {\n  return hasClass(cell, 'htSubmenu');\n}\n/**\n * @param {HTMLElement} cell The HTML cell element to check.\n * @returns {boolean}\n */\n\nexport function isDisabled(cell) {\n  return hasClass(cell, 'htDisabled');\n}\n/**\n * @param {HTMLElement} cell The HTML cell element to check.\n * @returns {boolean}\n */\n\nexport function isSelectionDisabled(cell) {\n  return hasClass(cell, 'htSelectionDisabled');\n}\n/**\n * @param {Core} hot The Handsontable instance.\n * @returns {Array[]|null}\n */\n\nexport function getValidSelection(hot) {\n  var selected = hot.getSelected();\n  if (!selected) {\n    return null;\n  }\n  if (selected[0] < 0) {\n    return null;\n  }\n  return selected;\n}\n/**\n * @param {string} className The full element class name to process.\n * @param {string} alignment The slignment class name to compare with.\n * @returns {string}\n */\n\nexport function prepareVerticalAlignClass(className, alignment) {\n  if (className.indexOf(alignment) !== -1) {\n    return className;\n  }\n  var replacedClassName = className.replace('htTop', '').replace('htMiddle', '').replace('htBottom', '').replace('  ', '');\n  return \"\".concat(replacedClassName, \" \").concat(alignment);\n}\n/**\n * @param {string} className The full element class name to process.\n * @param {string} alignment The slignment class name to compare with.\n * @returns {string}\n */\n\nexport function prepareHorizontalAlignClass(className, alignment) {\n  if (className.indexOf(alignment) !== -1) {\n    return className;\n  }\n  var replacedClassName = className.replace('htLeft', '').replace('htCenter', '').replace('htRight', '').replace('htJustify', '').replace('  ', '');\n  return \"\".concat(replacedClassName, \" \").concat(alignment);\n}\n/**\n * @param {CellRange[]} ranges An array of the cell ranges.\n * @param {Function} callback The callback function.\n * @returns {object}\n */\n\nexport function getAlignmentClasses(ranges, callback) {\n  var classes = {};\n  arrayEach(ranges, function (range) {\n    range.forAll(function (row, col) {\n      // Alignment classes should only collected within cell ranges. We skip header coordinates.\n      if (row >= 0 && col >= 0) {\n        if (!classes[row]) {\n          classes[row] = [];\n        }\n        classes[row][col] = callback(row, col);\n      }\n    });\n  });\n  return classes;\n}\n/**\n * @param {CellRange[]} ranges An array of the cell ranges.\n * @param {string} type The type of the alignment axis ('horizontal' or 'vertical').\n * @param {string} alignment CSS class name to add.\n * @param {Function} cellDescriptor The function which fetches the cell meta object based in passed coordinates.\n * @param {Function} propertySetter The function which contains logic for added/removed alignment.\n */\n\nexport function align(ranges, type, alignment, cellDescriptor, propertySetter) {\n  arrayEach(ranges, function (range) {\n    range.forAll(function (row, col) {\n      // Alignment classes should only collected within cell ranges. We skip header coordinates.\n      if (row >= 0 && col >= 0) {\n        applyAlignClassName(row, col, type, alignment, cellDescriptor, propertySetter);\n      }\n    });\n  });\n}\n/**\n * @param {number} row The visual row index.\n * @param {number} col The visual column index.\n * @param {string} type The type of the alignment axis ('horizontal' or 'vertical').\n * @param {string} alignment CSS class name to add.\n * @param {Function} cellDescriptor The function which fetches the cell meta object based in passed coordinates.\n * @param {Function} propertySetter The function which contains logic for added/removed alignment.\n */\n\nfunction applyAlignClassName(row, col, type, alignment, cellDescriptor, propertySetter) {\n  var cellMeta = cellDescriptor(row, col);\n  var className = alignment;\n  if (cellMeta.className) {\n    if (type === 'vertical') {\n      className = prepareVerticalAlignClass(cellMeta.className, alignment);\n    } else {\n      className = prepareHorizontalAlignClass(cellMeta.className, alignment);\n    }\n  }\n  propertySetter(row, col, 'className', className);\n}\n/**\n * @param {CellRange[]} ranges An array of the cell ranges.\n * @param {Function} comparator The comparator function.\n * @returns {boolean}\n */\n\nexport function checkSelectionConsistency(ranges, comparator) {\n  var result = false;\n  if (Array.isArray(ranges)) {\n    arrayEach(ranges, function (range) {\n      range.forAll(function (row, col) {\n        // Selection consistency should only check within cell ranges. We skip header coordinates.\n        if (row >= 0 && col >= 0 && comparator(row, col)) {\n          result = true;\n          return false;\n        }\n      });\n      return result;\n    });\n  }\n  return result;\n}\n/**\n * @param {string} label The label text.\n * @returns {string}\n */\n\nexport function markLabelAsSelected(label) {\n  // workaround for https://github.com/handsontable/handsontable/issues/1946\n  return \"<span class=\\\"selected\\\">\".concat(String.fromCharCode(10003), \"</span>\").concat(label);\n}\n/**\n * @param {object} item The object which describes the context menu item properties.\n * @param {Core} instance The Handsontable instance.\n * @returns {boolean}\n */\n\nexport function isItemHidden(item, instance) {\n  return !item.hidden || !(typeof item.hidden === 'function' && item.hidden.call(instance));\n}\n/**\n * @param {object[]} items The context menu items collection.\n * @param {string} separator The string which identifies the context menu separator item.\n * @returns {object[]}\n */\n\nfunction shiftSeparators(items, separator) {\n  var result = items.slice(0);\n  for (var i = 0; i < result.length;) {\n    if (result[i].name === separator) {\n      result.shift();\n    } else {\n      break;\n    }\n  }\n  return result;\n}\n/**\n * @param {object[]} items The context menu items collection.\n * @param {string} separator The string which identifies the context menu separator item.\n * @returns {object[]}\n */\n\nfunction popSeparators(items, separator) {\n  var result = items.slice(0);\n  result.reverse();\n  result = shiftSeparators(result, separator);\n  result.reverse();\n  return result;\n}\n/**\n * Removes duplicated menu separators from the context menu items collection.\n *\n * @param {object[]} items The context menu items collection.\n * @returns {object[]}\n */\n\nfunction removeDuplicatedSeparators(items) {\n  var result = [];\n  arrayEach(items, function (value, index) {\n    if (index > 0) {\n      if (result[result.length - 1].name !== value.name) {\n        result.push(value);\n      }\n    } else {\n      result.push(value);\n    }\n  });\n  return result;\n}\n/**\n * Removes menu separators from the context menu items collection.\n *\n * @param {object[]} items The context menu items collection.\n * @param {string} separator The string which identifies the context menu separator item.\n * @returns {object[]}\n */\n\nexport function filterSeparators(items) {\n  var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : SEPARATOR;\n  var result = items.slice(0);\n  result = shiftSeparators(result, separator);\n  result = popSeparators(result, separator);\n  result = removeDuplicatedSeparators(result);\n  return result;\n}","map":{"version":3,"names":["arrayEach","arrayMap","hasClass","KEY","SEPARATOR","normalizeSelection","selRanges","range","start","getTopLeftCorner","end","getBottomRightCorner","isSeparator","cell","hasSubMenu","isDisabled","isSelectionDisabled","getValidSelection","hot","selected","getSelected","prepareVerticalAlignClass","className","alignment","indexOf","replacedClassName","replace","concat","prepareHorizontalAlignClass","getAlignmentClasses","ranges","callback","classes","forAll","row","col","align","type","cellDescriptor","propertySetter","applyAlignClassName","cellMeta","checkSelectionConsistency","comparator","result","Array","isArray","markLabelAsSelected","label","String","fromCharCode","isItemHidden","item","instance","hidden","call","shiftSeparators","items","separator","slice","i","length","name","shift","popSeparators","reverse","removeDuplicatedSeparators","value","index","push","filterSeparators","arguments","undefined"],"sources":["/Users/priyadeliwala/Desktop/sales-dashboard/node_modules/handsontable/plugins/contextMenu/utils.mjs"],"sourcesContent":["import \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.reverse.js\";\nimport { arrayEach, arrayMap } from \"../../helpers/array.mjs\";\nimport { hasClass } from \"../../helpers/dom/element.mjs\";\nimport { KEY as SEPARATOR } from \"./predefinedItems/separator.mjs\";\n/**\n * @param {CellRange[]} selRanges An array of the cell ranges.\n * @returns {object[]}\n */\n\nexport function normalizeSelection(selRanges) {\n  return arrayMap(selRanges, function (range) {\n    return {\n      start: range.getTopLeftCorner(),\n      end: range.getBottomRightCorner()\n    };\n  });\n}\n/**\n * @param {HTMLElement} cell The HTML cell element to check.\n * @returns {boolean}\n */\n\nexport function isSeparator(cell) {\n  return hasClass(cell, 'htSeparator');\n}\n/**\n * @param {HTMLElement} cell The HTML cell element to check.\n * @returns {boolean}\n */\n\nexport function hasSubMenu(cell) {\n  return hasClass(cell, 'htSubmenu');\n}\n/**\n * @param {HTMLElement} cell The HTML cell element to check.\n * @returns {boolean}\n */\n\nexport function isDisabled(cell) {\n  return hasClass(cell, 'htDisabled');\n}\n/**\n * @param {HTMLElement} cell The HTML cell element to check.\n * @returns {boolean}\n */\n\nexport function isSelectionDisabled(cell) {\n  return hasClass(cell, 'htSelectionDisabled');\n}\n/**\n * @param {Core} hot The Handsontable instance.\n * @returns {Array[]|null}\n */\n\nexport function getValidSelection(hot) {\n  var selected = hot.getSelected();\n\n  if (!selected) {\n    return null;\n  }\n\n  if (selected[0] < 0) {\n    return null;\n  }\n\n  return selected;\n}\n/**\n * @param {string} className The full element class name to process.\n * @param {string} alignment The slignment class name to compare with.\n * @returns {string}\n */\n\nexport function prepareVerticalAlignClass(className, alignment) {\n  if (className.indexOf(alignment) !== -1) {\n    return className;\n  }\n\n  var replacedClassName = className.replace('htTop', '').replace('htMiddle', '').replace('htBottom', '').replace('  ', '');\n  return \"\".concat(replacedClassName, \" \").concat(alignment);\n}\n/**\n * @param {string} className The full element class name to process.\n * @param {string} alignment The slignment class name to compare with.\n * @returns {string}\n */\n\nexport function prepareHorizontalAlignClass(className, alignment) {\n  if (className.indexOf(alignment) !== -1) {\n    return className;\n  }\n\n  var replacedClassName = className.replace('htLeft', '').replace('htCenter', '').replace('htRight', '').replace('htJustify', '').replace('  ', '');\n  return \"\".concat(replacedClassName, \" \").concat(alignment);\n}\n/**\n * @param {CellRange[]} ranges An array of the cell ranges.\n * @param {Function} callback The callback function.\n * @returns {object}\n */\n\nexport function getAlignmentClasses(ranges, callback) {\n  var classes = {};\n  arrayEach(ranges, function (range) {\n    range.forAll(function (row, col) {\n      // Alignment classes should only collected within cell ranges. We skip header coordinates.\n      if (row >= 0 && col >= 0) {\n        if (!classes[row]) {\n          classes[row] = [];\n        }\n\n        classes[row][col] = callback(row, col);\n      }\n    });\n  });\n  return classes;\n}\n/**\n * @param {CellRange[]} ranges An array of the cell ranges.\n * @param {string} type The type of the alignment axis ('horizontal' or 'vertical').\n * @param {string} alignment CSS class name to add.\n * @param {Function} cellDescriptor The function which fetches the cell meta object based in passed coordinates.\n * @param {Function} propertySetter The function which contains logic for added/removed alignment.\n */\n\nexport function align(ranges, type, alignment, cellDescriptor, propertySetter) {\n  arrayEach(ranges, function (range) {\n    range.forAll(function (row, col) {\n      // Alignment classes should only collected within cell ranges. We skip header coordinates.\n      if (row >= 0 && col >= 0) {\n        applyAlignClassName(row, col, type, alignment, cellDescriptor, propertySetter);\n      }\n    });\n  });\n}\n/**\n * @param {number} row The visual row index.\n * @param {number} col The visual column index.\n * @param {string} type The type of the alignment axis ('horizontal' or 'vertical').\n * @param {string} alignment CSS class name to add.\n * @param {Function} cellDescriptor The function which fetches the cell meta object based in passed coordinates.\n * @param {Function} propertySetter The function which contains logic for added/removed alignment.\n */\n\nfunction applyAlignClassName(row, col, type, alignment, cellDescriptor, propertySetter) {\n  var cellMeta = cellDescriptor(row, col);\n  var className = alignment;\n\n  if (cellMeta.className) {\n    if (type === 'vertical') {\n      className = prepareVerticalAlignClass(cellMeta.className, alignment);\n    } else {\n      className = prepareHorizontalAlignClass(cellMeta.className, alignment);\n    }\n  }\n\n  propertySetter(row, col, 'className', className);\n}\n/**\n * @param {CellRange[]} ranges An array of the cell ranges.\n * @param {Function} comparator The comparator function.\n * @returns {boolean}\n */\n\n\nexport function checkSelectionConsistency(ranges, comparator) {\n  var result = false;\n\n  if (Array.isArray(ranges)) {\n    arrayEach(ranges, function (range) {\n      range.forAll(function (row, col) {\n        // Selection consistency should only check within cell ranges. We skip header coordinates.\n        if (row >= 0 && col >= 0 && comparator(row, col)) {\n          result = true;\n          return false;\n        }\n      });\n      return result;\n    });\n  }\n\n  return result;\n}\n/**\n * @param {string} label The label text.\n * @returns {string}\n */\n\nexport function markLabelAsSelected(label) {\n  // workaround for https://github.com/handsontable/handsontable/issues/1946\n  return \"<span class=\\\"selected\\\">\".concat(String.fromCharCode(10003), \"</span>\").concat(label);\n}\n/**\n * @param {object} item The object which describes the context menu item properties.\n * @param {Core} instance The Handsontable instance.\n * @returns {boolean}\n */\n\nexport function isItemHidden(item, instance) {\n  return !item.hidden || !(typeof item.hidden === 'function' && item.hidden.call(instance));\n}\n/**\n * @param {object[]} items The context menu items collection.\n * @param {string} separator The string which identifies the context menu separator item.\n * @returns {object[]}\n */\n\nfunction shiftSeparators(items, separator) {\n  var result = items.slice(0);\n\n  for (var i = 0; i < result.length;) {\n    if (result[i].name === separator) {\n      result.shift();\n    } else {\n      break;\n    }\n  }\n\n  return result;\n}\n/**\n * @param {object[]} items The context menu items collection.\n * @param {string} separator The string which identifies the context menu separator item.\n * @returns {object[]}\n */\n\n\nfunction popSeparators(items, separator) {\n  var result = items.slice(0);\n  result.reverse();\n  result = shiftSeparators(result, separator);\n  result.reverse();\n  return result;\n}\n/**\n * Removes duplicated menu separators from the context menu items collection.\n *\n * @param {object[]} items The context menu items collection.\n * @returns {object[]}\n */\n\n\nfunction removeDuplicatedSeparators(items) {\n  var result = [];\n  arrayEach(items, function (value, index) {\n    if (index > 0) {\n      if (result[result.length - 1].name !== value.name) {\n        result.push(value);\n      }\n    } else {\n      result.push(value);\n    }\n  });\n  return result;\n}\n/**\n * Removes menu separators from the context menu items collection.\n *\n * @param {object[]} items The context menu items collection.\n * @param {string} separator The string which identifies the context menu separator item.\n * @returns {object[]}\n */\n\n\nexport function filterSeparators(items) {\n  var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : SEPARATOR;\n  var result = items.slice(0);\n  result = shiftSeparators(result, separator);\n  result = popSeparators(result, separator);\n  result = removeDuplicatedSeparators(result);\n  return result;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
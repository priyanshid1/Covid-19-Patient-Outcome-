{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) {\n  _checkPrivateRedeclaration(obj, privateMap);\n  privateMap.set(obj, value);\n}\nfunction _checkPrivateRedeclaration(obj, privateCollection) {\n  if (privateCollection.has(obj)) {\n    throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n  }\n}\nfunction _classPrivateFieldGet(receiver, privateMap) {\n  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\");\n  return _classApplyDescriptorGet(receiver, descriptor);\n}\nfunction _classApplyDescriptorGet(receiver, descriptor) {\n  if (descriptor.get) {\n    return descriptor.get.call(receiver);\n  }\n  return descriptor.value;\n}\nfunction _classPrivateFieldSet(receiver, privateMap, value) {\n  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\");\n  _classApplyDescriptorSet(receiver, descriptor, value);\n  return value;\n}\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n  }\n  return privateMap.get(receiver);\n}\nfunction _classApplyDescriptorSet(receiver, descriptor, value) {\n  if (descriptor.set) {\n    descriptor.set.call(receiver, value);\n  } else {\n    if (!descriptor.writable) {\n      throw new TypeError(\"attempted to set read only private field\");\n    }\n    descriptor.value = value;\n  }\n}\nimport { BasePlugin } from \"../base/index.mjs\";\nimport { addClass } from \"../../helpers/dom/element.mjs\";\nimport { rangeEach } from \"../../helpers/number.mjs\";\nimport { arrayEach, arrayMap, arrayReduce } from \"../../helpers/array.mjs\";\nimport { isObject } from \"../../helpers/object.mjs\";\nimport { isUndefined } from \"../../helpers/mixed.mjs\";\nimport { SEPARATOR } from \"../contextMenu/predefinedItems.mjs\";\nimport Hooks from \"../../pluginHooks.mjs\";\nimport hideRowItem from \"./contextMenuItem/hideRow.mjs\";\nimport showRowItem from \"./contextMenuItem/showRow.mjs\";\nimport { HidingMap } from \"../../translations/index.mjs\";\nHooks.getSingleton().register('beforeHideRows');\nHooks.getSingleton().register('afterHideRows');\nHooks.getSingleton().register('beforeUnhideRows');\nHooks.getSingleton().register('afterUnhideRows');\nexport var PLUGIN_KEY = 'hiddenRows';\nexport var PLUGIN_PRIORITY = 320;\n/**\n * @plugin HiddenRows\n * @class HiddenRows\n *\n * @description\n * The `HiddenRows` plugin lets you [hide specified rows](@/guides/rows/row-hiding.md).\n *\n * \"Hiding a row\" means that the hidden row doesn't get rendered as a DOM element.\n *\n * The `HiddenRows` plugin doesn't modify the source data,\n * and doesn't participate in data transformation\n * (the shape of the data returned by the [`getData*()` methods](@/api/core.md#getdata) stays intact).\n *\n * You can set the following configuration options:\n *\n * | Option | Required | Type | Default | Description |\n * |---|---|---|---|---|\n * | `rows` | No | Array | - | [Hides specified rows by default](@/guides/rows/row-hiding.md#step-1-specify-rows-hidden-by-default) |\n * | `indicators` | No | Boolean | `false` | [Shows UI indicators](@/guides/rows/row-hiding.md#step-2-show-ui-indicators) |\n * | `copyPasteEnabled` | No | Boolean | `true` | [Sets up copy/paste behavior](@/guides/rows/row-hiding.md#step-4-set-up-copy-and-paste-behavior) |\n *\n * @example\n *\n * ```js\n * const container = document.getElementById('example');\n * const hot = new Handsontable(container, {\n *   data: getData(),\n *   hiddenRows: {\n *     copyPasteEnabled: true,\n *     indicators: true,\n *     rows: [1, 2, 5]\n *   }\n * });\n *\n * // access the `HiddenRows` plugin's instance\n * const hiddenRowsPlugin = hot.getPlugin('hiddenRows');\n *\n * // hide a single row\n * hiddenRowsPlugin.hideRow(1);\n *\n * // hide multiple rows\n * hiddenRowsPlugin.hideRow(1, 2, 9);\n *\n * // hide multiple rows as an array\n * hiddenRowsPlugin.hideRows([1, 2, 9]);\n *\n * // unhide a single row\n * hiddenRowsPlugin.showRow(1);\n *\n * // unhide multiple rows\n * hiddenRowsPlugin.showRow(1, 2, 9);\n *\n * // unhide multiple rows as an array\n * hiddenRowsPlugin.showRows([1, 2, 9]);\n *\n * // to see your changes, re-render your Handsontable instance\n * hot.render();\n * ```\n */\n\nvar _settings = /*#__PURE__*/new WeakMap();\nvar _hiddenRowsMap = /*#__PURE__*/new WeakMap();\nexport var HiddenRows = /*#__PURE__*/function (_BasePlugin) {\n  _inherits(HiddenRows, _BasePlugin);\n  var _super = _createSuper(HiddenRows);\n  function HiddenRows() {\n    var _this;\n    _classCallCheck(this, HiddenRows);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _settings, {\n      writable: true,\n      value: {}\n    });\n    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _hiddenRowsMap, {\n      writable: true,\n      value: null\n    });\n    return _this;\n  }\n  _createClass(HiddenRows, [{\n    key: \"isEnabled\",\n    value:\n    /**\n     * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n     * hook and if it returns `true` than the {@link HiddenRows#enablePlugin} method is called.\n     *\n     * @returns {boolean}\n     */\n    function isEnabled() {\n      return !!this.hot.getSettings()[PLUGIN_KEY];\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n      if (this.enabled) {\n        return;\n      }\n      var pluginSettings = this.hot.getSettings()[PLUGIN_KEY];\n      if (isObject(pluginSettings)) {\n        _classPrivateFieldSet(this, _settings, pluginSettings);\n        if (isUndefined(pluginSettings.copyPasteEnabled)) {\n          pluginSettings.copyPasteEnabled = true;\n        }\n      }\n      _classPrivateFieldSet(this, _hiddenRowsMap, new HidingMap());\n      _classPrivateFieldGet(this, _hiddenRowsMap).addLocalHook('init', function () {\n        return _this2.onMapInit();\n      });\n      this.hot.rowIndexMapper.registerMap(this.pluginName, _classPrivateFieldGet(this, _hiddenRowsMap));\n      this.addHook('afterContextMenuDefaultOptions', function () {\n        return _this2.onAfterContextMenuDefaultOptions.apply(_this2, arguments);\n      });\n      this.addHook('afterGetCellMeta', function (row, col, cellProperties) {\n        return _this2.onAfterGetCellMeta(row, col, cellProperties);\n      });\n      this.addHook('modifyRowHeight', function (height, row) {\n        return _this2.onModifyRowHeight(height, row);\n      });\n      this.addHook('afterGetRowHeader', function () {\n        return _this2.onAfterGetRowHeader.apply(_this2, arguments);\n      });\n      this.addHook('modifyCopyableRange', function (ranges) {\n        return _this2.onModifyCopyableRange(ranges);\n      });\n      _get(_getPrototypeOf(HiddenRows.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Updates the plugin state. This method is executed when {@link Core#updateSettings} is invoked.\n     */\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n      _get(_getPrototypeOf(HiddenRows.prototype), \"updatePlugin\", this).call(this);\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      this.hot.rowIndexMapper.unregisterMap(this.pluginName);\n      _classPrivateFieldSet(this, _settings, {});\n      _get(_getPrototypeOf(HiddenRows.prototype), \"disablePlugin\", this).call(this);\n      this.resetCellsMeta();\n    }\n    /**\n     * Shows the rows provided in the array.\n     *\n     * @param {number[]} rows Array of visual row indexes.\n     */\n  }, {\n    key: \"showRows\",\n    value: function showRows(rows) {\n      var _this3 = this;\n      var currentHideConfig = this.getHiddenRows();\n      var isValidConfig = this.isValidConfig(rows);\n      var destinationHideConfig = currentHideConfig;\n      var hidingMapValues = _classPrivateFieldGet(this, _hiddenRowsMap).getValues().slice();\n      var isAnyRowShowed = rows.length > 0;\n      if (isValidConfig && isAnyRowShowed) {\n        var physicalRows = rows.map(function (visualRow) {\n          return _this3.hot.toPhysicalRow(visualRow);\n        }); // Preparing new values for hiding map.\n\n        arrayEach(physicalRows, function (physicalRow) {\n          hidingMapValues[physicalRow] = false;\n        }); // Preparing new hiding config.\n\n        destinationHideConfig = arrayReduce(hidingMapValues, function (hiddenIndexes, isHidden, physicalIndex) {\n          if (isHidden) {\n            hiddenIndexes.push(_this3.hot.toVisualRow(physicalIndex));\n          }\n          return hiddenIndexes;\n        }, []);\n      }\n      var continueHiding = this.hot.runHooks('beforeUnhideRows', currentHideConfig, destinationHideConfig, isValidConfig && isAnyRowShowed);\n      if (continueHiding === false) {\n        return;\n      }\n      if (isValidConfig && isAnyRowShowed) {\n        _classPrivateFieldGet(this, _hiddenRowsMap).setValues(hidingMapValues);\n      }\n      this.hot.runHooks('afterUnhideRows', currentHideConfig, destinationHideConfig, isValidConfig && isAnyRowShowed, isValidConfig && destinationHideConfig.length < currentHideConfig.length);\n    }\n    /**\n     * Shows the row provided as row index (counting from 0).\n     *\n     * @param {...number} row Visual row index.\n     */\n  }, {\n    key: \"showRow\",\n    value: function showRow() {\n      for (var _len2 = arguments.length, row = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        row[_key2] = arguments[_key2];\n      }\n      this.showRows(row);\n    }\n    /**\n     * Hides the rows provided in the array.\n     *\n     * @param {number[]} rows Array of visual row indexes.\n     */\n  }, {\n    key: \"hideRows\",\n    value: function hideRows(rows) {\n      var _this4 = this;\n      var currentHideConfig = this.getHiddenRows();\n      var isConfigValid = this.isValidConfig(rows);\n      var destinationHideConfig = currentHideConfig;\n      if (isConfigValid) {\n        destinationHideConfig = Array.from(new Set(currentHideConfig.concat(rows)));\n      }\n      var continueHiding = this.hot.runHooks('beforeHideRows', currentHideConfig, destinationHideConfig, isConfigValid);\n      if (continueHiding === false) {\n        return;\n      }\n      if (isConfigValid) {\n        this.hot.batchExecution(function () {\n          arrayEach(rows, function (visualRow) {\n            _classPrivateFieldGet(_this4, _hiddenRowsMap).setValueAtIndex(_this4.hot.toPhysicalRow(visualRow), true);\n          });\n        }, true);\n      }\n      this.hot.runHooks('afterHideRows', currentHideConfig, destinationHideConfig, isConfigValid, isConfigValid && destinationHideConfig.length > currentHideConfig.length);\n    }\n    /**\n     * Hides the row provided as row index (counting from 0).\n     *\n     * @param {...number} row Visual row index.\n     */\n  }, {\n    key: \"hideRow\",\n    value: function hideRow() {\n      for (var _len3 = arguments.length, row = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        row[_key3] = arguments[_key3];\n      }\n      this.hideRows(row);\n    }\n    /**\n     * Returns an array of visual indexes of hidden rows.\n     *\n     * @returns {number[]}\n     */\n  }, {\n    key: \"getHiddenRows\",\n    value: function getHiddenRows() {\n      var _this5 = this;\n      return arrayMap(_classPrivateFieldGet(this, _hiddenRowsMap).getHiddenIndexes(), function (physicalRowIndex) {\n        return _this5.hot.toVisualRow(physicalRowIndex);\n      });\n    }\n    /**\n     * Checks if the provided row is hidden.\n     *\n     * @param {number} row Visual row index.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"isHidden\",\n    value: function isHidden(row) {\n      return _classPrivateFieldGet(this, _hiddenRowsMap).getValueAtIndex(this.hot.toPhysicalRow(row)) || false;\n    }\n    /**\n     * Checks whether all of the provided row indexes are within the bounds of the table.\n     *\n     * @param {Array} hiddenRows List of hidden visual row indexes.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"isValidConfig\",\n    value: function isValidConfig(hiddenRows) {\n      var nrOfRows = this.hot.countRows();\n      if (Array.isArray(hiddenRows) && hiddenRows.length > 0) {\n        return hiddenRows.every(function (visualRow) {\n          return Number.isInteger(visualRow) && visualRow >= 0 && visualRow < nrOfRows;\n        });\n      }\n      return false;\n    }\n    /**\n     * Resets all rendered cells meta.\n     *\n     * @private\n     */\n  }, {\n    key: \"resetCellsMeta\",\n    value: function resetCellsMeta() {\n      arrayEach(this.hot.getCellsMeta(), function (meta) {\n        if (meta) {\n          meta.skipRowOnPaste = false;\n        }\n      });\n    }\n    /**\n     * Adds the additional row height for the hidden row indicators.\n     *\n     * @private\n     * @param {number|undefined} height Row height.\n     * @param {number} row Visual row index.\n     * @returns {number}\n     */\n  }, {\n    key: \"onModifyRowHeight\",\n    value: function onModifyRowHeight(height, row) {\n      // Hook is triggered internally only for the visible rows. Conditional will be handled for the API\n      // calls of the `getRowHeight` function on not visible indexes.\n      if (this.isHidden(row)) {\n        return 0;\n      }\n      return height;\n    }\n    /**\n     * Sets the copy-related cell meta.\n     *\n     * @private\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @param {object} cellProperties Object containing the cell properties.\n     */\n  }, {\n    key: \"onAfterGetCellMeta\",\n    value: function onAfterGetCellMeta(row, column, cellProperties) {\n      if (_classPrivateFieldGet(this, _settings).copyPasteEnabled === false && this.isHidden(row)) {\n        // Cell property handled by the `Autofill` and the `CopyPaste` plugins.\n        cellProperties.skipRowOnPaste = true;\n      }\n      if (this.isHidden(row - 1)) {\n        cellProperties.className = cellProperties.className || '';\n        if (cellProperties.className.indexOf('afterHiddenRow') === -1) {\n          cellProperties.className += ' afterHiddenRow';\n        }\n      } else if (cellProperties.className) {\n        var classArr = cellProperties.className.split(' ');\n        if (classArr.length > 0) {\n          var containAfterHiddenRow = classArr.indexOf('afterHiddenRow');\n          if (containAfterHiddenRow > -1) {\n            classArr.splice(containAfterHiddenRow, 1);\n          }\n          cellProperties.className = classArr.join(' ');\n        }\n      }\n    }\n    /**\n     * Modifies the copyable range, accordingly to the provided config.\n     *\n     * @private\n     * @param {Array} ranges An array of objects defining copyable cells.\n     * @returns {Array}\n     */\n  }, {\n    key: \"onModifyCopyableRange\",\n    value: function onModifyCopyableRange(ranges) {\n      var _this6 = this;\n\n      // Ranges shouldn't be modified when `copyPasteEnabled` option is set to `true` (by default).\n      if (_classPrivateFieldGet(this, _settings).copyPasteEnabled) {\n        return ranges;\n      }\n      var newRanges = [];\n      var pushRange = function pushRange(startRow, endRow, startCol, endCol) {\n        newRanges.push({\n          startRow: startRow,\n          endRow: endRow,\n          startCol: startCol,\n          endCol: endCol\n        });\n      };\n      arrayEach(ranges, function (range) {\n        var isHidden = true;\n        var rangeStart = 0;\n        rangeEach(range.startRow, range.endRow, function (visualRow) {\n          if (_this6.isHidden(visualRow)) {\n            if (!isHidden) {\n              pushRange(rangeStart, visualRow - 1, range.startCol, range.endCol);\n            }\n            isHidden = true;\n          } else {\n            if (isHidden) {\n              rangeStart = visualRow;\n            }\n            if (visualRow === range.endRow) {\n              pushRange(rangeStart, visualRow, range.startCol, range.endCol);\n            }\n            isHidden = false;\n          }\n        });\n      });\n      return newRanges;\n    }\n    /**\n     * Adds the needed classes to the headers.\n     *\n     * @private\n     * @param {number} row Visual row index.\n     * @param {HTMLElement} TH Header's TH element.\n     */\n  }, {\n    key: \"onAfterGetRowHeader\",\n    value: function onAfterGetRowHeader(row, TH) {\n      if (!_classPrivateFieldGet(this, _settings).indicators || row < 0) {\n        return;\n      }\n      var classList = [];\n      if (row >= 1 && this.isHidden(row - 1)) {\n        classList.push('afterHiddenRow');\n      }\n      if (row < this.hot.countRows() - 1 && this.isHidden(row + 1)) {\n        classList.push('beforeHiddenRow');\n      }\n      addClass(TH, classList);\n    }\n    /**\n     * Add Show-hide rows to context menu.\n     *\n     * @private\n     * @param {object} options An array of objects containing information about the pre-defined Context Menu items.\n     */\n  }, {\n    key: \"onAfterContextMenuDefaultOptions\",\n    value: function onAfterContextMenuDefaultOptions(options) {\n      options.items.push({\n        name: SEPARATOR\n      }, hideRowItem(this), showRowItem(this));\n    }\n    /**\n     * On map initialized hook callback.\n     *\n     * @private\n     */\n  }, {\n    key: \"onMapInit\",\n    value: function onMapInit() {\n      if (Array.isArray(_classPrivateFieldGet(this, _settings).rows)) {\n        this.hideRows(_classPrivateFieldGet(this, _settings).rows);\n      }\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _classPrivateFieldSet(this, _settings, null);\n      _classPrivateFieldSet(this, _hiddenRowsMap, null);\n      _get(_getPrototypeOf(HiddenRows.prototype), \"destroy\", this).call(this);\n    }\n  }], [{\n    key: \"PLUGIN_KEY\",\n    get: function get() {\n      return PLUGIN_KEY;\n    }\n  }, {\n    key: \"PLUGIN_PRIORITY\",\n    get: function get() {\n      return PLUGIN_PRIORITY;\n    }\n    /**\n     * Cached settings from Handsontable settings.\n     *\n     * @private\n     * @type {object}\n     */\n  }]);\n  return HiddenRows;\n}(BasePlugin);","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_get","Reflect","get","property","receiver","base","_superPropBase","desc","getOwnPropertyDescriptor","call","arguments","value","apply","object","hasOwnProperty","_getPrototypeOf","_inherits","subClass","superClass","create","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","construct","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","_classPrivateFieldInitSpec","privateMap","_checkPrivateRedeclaration","set","privateCollection","has","_classPrivateFieldGet","_classExtractFieldDescriptor","_classApplyDescriptorGet","_classPrivateFieldSet","_classApplyDescriptorSet","action","BasePlugin","addClass","rangeEach","arrayEach","arrayMap","arrayReduce","isObject","isUndefined","SEPARATOR","Hooks","hideRowItem","showRowItem","HidingMap","getSingleton","register","PLUGIN_KEY","PLUGIN_PRIORITY","_settings","WeakMap","_hiddenRowsMap","HiddenRows","_BasePlugin","_super","_this","_len","args","Array","_key","concat","isEnabled","hot","getSettings","enablePlugin","_this2","enabled","pluginSettings","copyPasteEnabled","addLocalHook","onMapInit","rowIndexMapper","registerMap","pluginName","addHook","onAfterContextMenuDefaultOptions","row","col","cellProperties","onAfterGetCellMeta","height","onModifyRowHeight","onAfterGetRowHeader","ranges","onModifyCopyableRange","updatePlugin","disablePlugin","unregisterMap","resetCellsMeta","showRows","rows","_this3","currentHideConfig","getHiddenRows","isValidConfig","destinationHideConfig","hidingMapValues","getValues","slice","isAnyRowShowed","physicalRows","map","visualRow","toPhysicalRow","physicalRow","hiddenIndexes","isHidden","physicalIndex","push","toVisualRow","continueHiding","runHooks","setValues","showRow","_len2","_key2","hideRows","_this4","isConfigValid","from","Set","batchExecution","setValueAtIndex","hideRow","_len3","_key3","_this5","getHiddenIndexes","physicalRowIndex","getValueAtIndex","hiddenRows","nrOfRows","countRows","isArray","every","Number","isInteger","getCellsMeta","meta","skipRowOnPaste","column","className","indexOf","classArr","split","containAfterHiddenRow","splice","join","_this6","newRanges","pushRange","startRow","endRow","startCol","endCol","range","rangeStart","TH","indicators","classList","options","items","name","destroy"],"sources":["/Users/priyadeliwala/Desktop/sales-dashboard/node_modules/handsontable/plugins/hiddenRows/hiddenRows.mjs"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.number.is-integer.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.weak-map.js\";\nimport \"core-js/modules/es.object.set-prototype-of.js\";\nimport \"core-js/modules/es.object.get-prototype-of.js\";\nimport \"core-js/modules/es.reflect.construct.js\";\nimport \"core-js/modules/es.reflect.get.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _get() { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\n\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\n\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\n\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\n\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\n\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\n\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError(\"attempted to set read only private field\"); } descriptor.value = value; } }\n\nimport { BasePlugin } from \"../base/index.mjs\";\nimport { addClass } from \"../../helpers/dom/element.mjs\";\nimport { rangeEach } from \"../../helpers/number.mjs\";\nimport { arrayEach, arrayMap, arrayReduce } from \"../../helpers/array.mjs\";\nimport { isObject } from \"../../helpers/object.mjs\";\nimport { isUndefined } from \"../../helpers/mixed.mjs\";\nimport { SEPARATOR } from \"../contextMenu/predefinedItems.mjs\";\nimport Hooks from \"../../pluginHooks.mjs\";\nimport hideRowItem from \"./contextMenuItem/hideRow.mjs\";\nimport showRowItem from \"./contextMenuItem/showRow.mjs\";\nimport { HidingMap } from \"../../translations/index.mjs\";\nHooks.getSingleton().register('beforeHideRows');\nHooks.getSingleton().register('afterHideRows');\nHooks.getSingleton().register('beforeUnhideRows');\nHooks.getSingleton().register('afterUnhideRows');\nexport var PLUGIN_KEY = 'hiddenRows';\nexport var PLUGIN_PRIORITY = 320;\n/**\n * @plugin HiddenRows\n * @class HiddenRows\n *\n * @description\n * The `HiddenRows` plugin lets you [hide specified rows](@/guides/rows/row-hiding.md).\n *\n * \"Hiding a row\" means that the hidden row doesn't get rendered as a DOM element.\n *\n * The `HiddenRows` plugin doesn't modify the source data,\n * and doesn't participate in data transformation\n * (the shape of the data returned by the [`getData*()` methods](@/api/core.md#getdata) stays intact).\n *\n * You can set the following configuration options:\n *\n * | Option | Required | Type | Default | Description |\n * |---|---|---|---|---|\n * | `rows` | No | Array | - | [Hides specified rows by default](@/guides/rows/row-hiding.md#step-1-specify-rows-hidden-by-default) |\n * | `indicators` | No | Boolean | `false` | [Shows UI indicators](@/guides/rows/row-hiding.md#step-2-show-ui-indicators) |\n * | `copyPasteEnabled` | No | Boolean | `true` | [Sets up copy/paste behavior](@/guides/rows/row-hiding.md#step-4-set-up-copy-and-paste-behavior) |\n *\n * @example\n *\n * ```js\n * const container = document.getElementById('example');\n * const hot = new Handsontable(container, {\n *   data: getData(),\n *   hiddenRows: {\n *     copyPasteEnabled: true,\n *     indicators: true,\n *     rows: [1, 2, 5]\n *   }\n * });\n *\n * // access the `HiddenRows` plugin's instance\n * const hiddenRowsPlugin = hot.getPlugin('hiddenRows');\n *\n * // hide a single row\n * hiddenRowsPlugin.hideRow(1);\n *\n * // hide multiple rows\n * hiddenRowsPlugin.hideRow(1, 2, 9);\n *\n * // hide multiple rows as an array\n * hiddenRowsPlugin.hideRows([1, 2, 9]);\n *\n * // unhide a single row\n * hiddenRowsPlugin.showRow(1);\n *\n * // unhide multiple rows\n * hiddenRowsPlugin.showRow(1, 2, 9);\n *\n * // unhide multiple rows as an array\n * hiddenRowsPlugin.showRows([1, 2, 9]);\n *\n * // to see your changes, re-render your Handsontable instance\n * hot.render();\n * ```\n */\n\nvar _settings = /*#__PURE__*/new WeakMap();\n\nvar _hiddenRowsMap = /*#__PURE__*/new WeakMap();\n\nexport var HiddenRows = /*#__PURE__*/function (_BasePlugin) {\n  _inherits(HiddenRows, _BasePlugin);\n\n  var _super = _createSuper(HiddenRows);\n\n  function HiddenRows() {\n    var _this;\n\n    _classCallCheck(this, HiddenRows);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _settings, {\n      writable: true,\n      value: {}\n    });\n\n    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _hiddenRowsMap, {\n      writable: true,\n      value: null\n    });\n\n    return _this;\n  }\n\n  _createClass(HiddenRows, [{\n    key: \"isEnabled\",\n    value:\n    /**\n     * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n     * hook and if it returns `true` than the {@link HiddenRows#enablePlugin} method is called.\n     *\n     * @returns {boolean}\n     */\n    function isEnabled() {\n      return !!this.hot.getSettings()[PLUGIN_KEY];\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n\n      if (this.enabled) {\n        return;\n      }\n\n      var pluginSettings = this.hot.getSettings()[PLUGIN_KEY];\n\n      if (isObject(pluginSettings)) {\n        _classPrivateFieldSet(this, _settings, pluginSettings);\n\n        if (isUndefined(pluginSettings.copyPasteEnabled)) {\n          pluginSettings.copyPasteEnabled = true;\n        }\n      }\n\n      _classPrivateFieldSet(this, _hiddenRowsMap, new HidingMap());\n\n      _classPrivateFieldGet(this, _hiddenRowsMap).addLocalHook('init', function () {\n        return _this2.onMapInit();\n      });\n\n      this.hot.rowIndexMapper.registerMap(this.pluginName, _classPrivateFieldGet(this, _hiddenRowsMap));\n      this.addHook('afterContextMenuDefaultOptions', function () {\n        return _this2.onAfterContextMenuDefaultOptions.apply(_this2, arguments);\n      });\n      this.addHook('afterGetCellMeta', function (row, col, cellProperties) {\n        return _this2.onAfterGetCellMeta(row, col, cellProperties);\n      });\n      this.addHook('modifyRowHeight', function (height, row) {\n        return _this2.onModifyRowHeight(height, row);\n      });\n      this.addHook('afterGetRowHeader', function () {\n        return _this2.onAfterGetRowHeader.apply(_this2, arguments);\n      });\n      this.addHook('modifyCopyableRange', function (ranges) {\n        return _this2.onModifyCopyableRange(ranges);\n      });\n\n      _get(_getPrototypeOf(HiddenRows.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Updates the plugin state. This method is executed when {@link Core#updateSettings} is invoked.\n     */\n\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n\n      _get(_getPrototypeOf(HiddenRows.prototype), \"updatePlugin\", this).call(this);\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      this.hot.rowIndexMapper.unregisterMap(this.pluginName);\n\n      _classPrivateFieldSet(this, _settings, {});\n\n      _get(_getPrototypeOf(HiddenRows.prototype), \"disablePlugin\", this).call(this);\n\n      this.resetCellsMeta();\n    }\n    /**\n     * Shows the rows provided in the array.\n     *\n     * @param {number[]} rows Array of visual row indexes.\n     */\n\n  }, {\n    key: \"showRows\",\n    value: function showRows(rows) {\n      var _this3 = this;\n\n      var currentHideConfig = this.getHiddenRows();\n      var isValidConfig = this.isValidConfig(rows);\n      var destinationHideConfig = currentHideConfig;\n\n      var hidingMapValues = _classPrivateFieldGet(this, _hiddenRowsMap).getValues().slice();\n\n      var isAnyRowShowed = rows.length > 0;\n\n      if (isValidConfig && isAnyRowShowed) {\n        var physicalRows = rows.map(function (visualRow) {\n          return _this3.hot.toPhysicalRow(visualRow);\n        }); // Preparing new values for hiding map.\n\n        arrayEach(physicalRows, function (physicalRow) {\n          hidingMapValues[physicalRow] = false;\n        }); // Preparing new hiding config.\n\n        destinationHideConfig = arrayReduce(hidingMapValues, function (hiddenIndexes, isHidden, physicalIndex) {\n          if (isHidden) {\n            hiddenIndexes.push(_this3.hot.toVisualRow(physicalIndex));\n          }\n\n          return hiddenIndexes;\n        }, []);\n      }\n\n      var continueHiding = this.hot.runHooks('beforeUnhideRows', currentHideConfig, destinationHideConfig, isValidConfig && isAnyRowShowed);\n\n      if (continueHiding === false) {\n        return;\n      }\n\n      if (isValidConfig && isAnyRowShowed) {\n        _classPrivateFieldGet(this, _hiddenRowsMap).setValues(hidingMapValues);\n      }\n\n      this.hot.runHooks('afterUnhideRows', currentHideConfig, destinationHideConfig, isValidConfig && isAnyRowShowed, isValidConfig && destinationHideConfig.length < currentHideConfig.length);\n    }\n    /**\n     * Shows the row provided as row index (counting from 0).\n     *\n     * @param {...number} row Visual row index.\n     */\n\n  }, {\n    key: \"showRow\",\n    value: function showRow() {\n      for (var _len2 = arguments.length, row = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        row[_key2] = arguments[_key2];\n      }\n\n      this.showRows(row);\n    }\n    /**\n     * Hides the rows provided in the array.\n     *\n     * @param {number[]} rows Array of visual row indexes.\n     */\n\n  }, {\n    key: \"hideRows\",\n    value: function hideRows(rows) {\n      var _this4 = this;\n\n      var currentHideConfig = this.getHiddenRows();\n      var isConfigValid = this.isValidConfig(rows);\n      var destinationHideConfig = currentHideConfig;\n\n      if (isConfigValid) {\n        destinationHideConfig = Array.from(new Set(currentHideConfig.concat(rows)));\n      }\n\n      var continueHiding = this.hot.runHooks('beforeHideRows', currentHideConfig, destinationHideConfig, isConfigValid);\n\n      if (continueHiding === false) {\n        return;\n      }\n\n      if (isConfigValid) {\n        this.hot.batchExecution(function () {\n          arrayEach(rows, function (visualRow) {\n            _classPrivateFieldGet(_this4, _hiddenRowsMap).setValueAtIndex(_this4.hot.toPhysicalRow(visualRow), true);\n          });\n        }, true);\n      }\n\n      this.hot.runHooks('afterHideRows', currentHideConfig, destinationHideConfig, isConfigValid, isConfigValid && destinationHideConfig.length > currentHideConfig.length);\n    }\n    /**\n     * Hides the row provided as row index (counting from 0).\n     *\n     * @param {...number} row Visual row index.\n     */\n\n  }, {\n    key: \"hideRow\",\n    value: function hideRow() {\n      for (var _len3 = arguments.length, row = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        row[_key3] = arguments[_key3];\n      }\n\n      this.hideRows(row);\n    }\n    /**\n     * Returns an array of visual indexes of hidden rows.\n     *\n     * @returns {number[]}\n     */\n\n  }, {\n    key: \"getHiddenRows\",\n    value: function getHiddenRows() {\n      var _this5 = this;\n\n      return arrayMap(_classPrivateFieldGet(this, _hiddenRowsMap).getHiddenIndexes(), function (physicalRowIndex) {\n        return _this5.hot.toVisualRow(physicalRowIndex);\n      });\n    }\n    /**\n     * Checks if the provided row is hidden.\n     *\n     * @param {number} row Visual row index.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isHidden\",\n    value: function isHidden(row) {\n      return _classPrivateFieldGet(this, _hiddenRowsMap).getValueAtIndex(this.hot.toPhysicalRow(row)) || false;\n    }\n    /**\n     * Checks whether all of the provided row indexes are within the bounds of the table.\n     *\n     * @param {Array} hiddenRows List of hidden visual row indexes.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isValidConfig\",\n    value: function isValidConfig(hiddenRows) {\n      var nrOfRows = this.hot.countRows();\n\n      if (Array.isArray(hiddenRows) && hiddenRows.length > 0) {\n        return hiddenRows.every(function (visualRow) {\n          return Number.isInteger(visualRow) && visualRow >= 0 && visualRow < nrOfRows;\n        });\n      }\n\n      return false;\n    }\n    /**\n     * Resets all rendered cells meta.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"resetCellsMeta\",\n    value: function resetCellsMeta() {\n      arrayEach(this.hot.getCellsMeta(), function (meta) {\n        if (meta) {\n          meta.skipRowOnPaste = false;\n        }\n      });\n    }\n    /**\n     * Adds the additional row height for the hidden row indicators.\n     *\n     * @private\n     * @param {number|undefined} height Row height.\n     * @param {number} row Visual row index.\n     * @returns {number}\n     */\n\n  }, {\n    key: \"onModifyRowHeight\",\n    value: function onModifyRowHeight(height, row) {\n      // Hook is triggered internally only for the visible rows. Conditional will be handled for the API\n      // calls of the `getRowHeight` function on not visible indexes.\n      if (this.isHidden(row)) {\n        return 0;\n      }\n\n      return height;\n    }\n    /**\n     * Sets the copy-related cell meta.\n     *\n     * @private\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @param {object} cellProperties Object containing the cell properties.\n     */\n\n  }, {\n    key: \"onAfterGetCellMeta\",\n    value: function onAfterGetCellMeta(row, column, cellProperties) {\n      if (_classPrivateFieldGet(this, _settings).copyPasteEnabled === false && this.isHidden(row)) {\n        // Cell property handled by the `Autofill` and the `CopyPaste` plugins.\n        cellProperties.skipRowOnPaste = true;\n      }\n\n      if (this.isHidden(row - 1)) {\n        cellProperties.className = cellProperties.className || '';\n\n        if (cellProperties.className.indexOf('afterHiddenRow') === -1) {\n          cellProperties.className += ' afterHiddenRow';\n        }\n      } else if (cellProperties.className) {\n        var classArr = cellProperties.className.split(' ');\n\n        if (classArr.length > 0) {\n          var containAfterHiddenRow = classArr.indexOf('afterHiddenRow');\n\n          if (containAfterHiddenRow > -1) {\n            classArr.splice(containAfterHiddenRow, 1);\n          }\n\n          cellProperties.className = classArr.join(' ');\n        }\n      }\n    }\n    /**\n     * Modifies the copyable range, accordingly to the provided config.\n     *\n     * @private\n     * @param {Array} ranges An array of objects defining copyable cells.\n     * @returns {Array}\n     */\n\n  }, {\n    key: \"onModifyCopyableRange\",\n    value: function onModifyCopyableRange(ranges) {\n      var _this6 = this;\n\n      // Ranges shouldn't be modified when `copyPasteEnabled` option is set to `true` (by default).\n      if (_classPrivateFieldGet(this, _settings).copyPasteEnabled) {\n        return ranges;\n      }\n\n      var newRanges = [];\n\n      var pushRange = function pushRange(startRow, endRow, startCol, endCol) {\n        newRanges.push({\n          startRow: startRow,\n          endRow: endRow,\n          startCol: startCol,\n          endCol: endCol\n        });\n      };\n\n      arrayEach(ranges, function (range) {\n        var isHidden = true;\n        var rangeStart = 0;\n        rangeEach(range.startRow, range.endRow, function (visualRow) {\n          if (_this6.isHidden(visualRow)) {\n            if (!isHidden) {\n              pushRange(rangeStart, visualRow - 1, range.startCol, range.endCol);\n            }\n\n            isHidden = true;\n          } else {\n            if (isHidden) {\n              rangeStart = visualRow;\n            }\n\n            if (visualRow === range.endRow) {\n              pushRange(rangeStart, visualRow, range.startCol, range.endCol);\n            }\n\n            isHidden = false;\n          }\n        });\n      });\n      return newRanges;\n    }\n    /**\n     * Adds the needed classes to the headers.\n     *\n     * @private\n     * @param {number} row Visual row index.\n     * @param {HTMLElement} TH Header's TH element.\n     */\n\n  }, {\n    key: \"onAfterGetRowHeader\",\n    value: function onAfterGetRowHeader(row, TH) {\n      if (!_classPrivateFieldGet(this, _settings).indicators || row < 0) {\n        return;\n      }\n\n      var classList = [];\n\n      if (row >= 1 && this.isHidden(row - 1)) {\n        classList.push('afterHiddenRow');\n      }\n\n      if (row < this.hot.countRows() - 1 && this.isHidden(row + 1)) {\n        classList.push('beforeHiddenRow');\n      }\n\n      addClass(TH, classList);\n    }\n    /**\n     * Add Show-hide rows to context menu.\n     *\n     * @private\n     * @param {object} options An array of objects containing information about the pre-defined Context Menu items.\n     */\n\n  }, {\n    key: \"onAfterContextMenuDefaultOptions\",\n    value: function onAfterContextMenuDefaultOptions(options) {\n      options.items.push({\n        name: SEPARATOR\n      }, hideRowItem(this), showRowItem(this));\n    }\n    /**\n     * On map initialized hook callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onMapInit\",\n    value: function onMapInit() {\n      if (Array.isArray(_classPrivateFieldGet(this, _settings).rows)) {\n        this.hideRows(_classPrivateFieldGet(this, _settings).rows);\n      }\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _classPrivateFieldSet(this, _settings, null);\n\n      _classPrivateFieldSet(this, _hiddenRowsMap, null);\n\n      _get(_getPrototypeOf(HiddenRows.prototype), \"destroy\", this).call(this);\n    }\n  }], [{\n    key: \"PLUGIN_KEY\",\n    get: function get() {\n      return PLUGIN_KEY;\n    }\n  }, {\n    key: \"PLUGIN_PRIORITY\",\n    get: function get() {\n      return PLUGIN_PRIORITY;\n    }\n    /**\n     * Cached settings from Handsontable settings.\n     *\n     * @private\n     * @type {object}\n     */\n\n  }]);\n\n  return HiddenRows;\n}(BasePlugin);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
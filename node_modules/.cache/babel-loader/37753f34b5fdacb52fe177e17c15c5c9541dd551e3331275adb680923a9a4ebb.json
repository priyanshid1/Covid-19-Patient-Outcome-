{"ast":null,"code":"import mergeSort from \"../../../utils/sortingAlgorithms/mergeSort.mjs\";\nimport { getRootComparator } from \"./registry.mjs\";\nexport var DO_NOT_SWAP = 0;\nexport var FIRST_BEFORE_SECOND = -1;\nexport var FIRST_AFTER_SECOND = 1;\n/**\n * @param {Array} indexesWithData The data to sort.\n * @param {string} rootComparatorId The comparator logic to use.\n * @param {Array} argsForRootComparator Additional arguments for comparator function.\n */\n\nexport function sort(indexesWithData, rootComparatorId) {\n  var rootComparator = getRootComparator(rootComparatorId);\n  for (var _len = arguments.length, argsForRootComparator = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    argsForRootComparator[_key - 2] = arguments[_key];\n  }\n  mergeSort(indexesWithData, rootComparator.apply(void 0, argsForRootComparator));\n}","map":{"version":3,"names":["mergeSort","getRootComparator","DO_NOT_SWAP","FIRST_BEFORE_SECOND","FIRST_AFTER_SECOND","sort","indexesWithData","rootComparatorId","rootComparator","_len","arguments","length","argsForRootComparator","Array","_key","apply"],"sources":["/Users/priyadeliwala/Desktop/sales-dashboard/node_modules/handsontable/plugins/columnSorting/sortService/engine.mjs"],"sourcesContent":["import mergeSort from \"../../../utils/sortingAlgorithms/mergeSort.mjs\";\nimport { getRootComparator } from \"./registry.mjs\";\nexport var DO_NOT_SWAP = 0;\nexport var FIRST_BEFORE_SECOND = -1;\nexport var FIRST_AFTER_SECOND = 1;\n/**\n * @param {Array} indexesWithData The data to sort.\n * @param {string} rootComparatorId The comparator logic to use.\n * @param {Array} argsForRootComparator Additional arguments for comparator function.\n */\n\nexport function sort(indexesWithData, rootComparatorId) {\n  var rootComparator = getRootComparator(rootComparatorId);\n\n  for (var _len = arguments.length, argsForRootComparator = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    argsForRootComparator[_key - 2] = arguments[_key];\n  }\n\n  mergeSort(indexesWithData, rootComparator.apply(void 0, argsForRootComparator));\n}"],"mappings":"AAAA,OAAOA,SAAS,MAAM,gDAAgD;AACtE,SAASC,iBAAiB,QAAQ,gBAAgB;AAClD,OAAO,IAAIC,WAAW,GAAG,CAAC;AAC1B,OAAO,IAAIC,mBAAmB,GAAG,CAAC,CAAC;AACnC,OAAO,IAAIC,kBAAkB,GAAG,CAAC;AACjC;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,IAAIA,CAACC,eAAe,EAAEC,gBAAgB,EAAE;EACtD,IAAIC,cAAc,GAAGP,iBAAiB,CAACM,gBAAgB,CAAC;EAExD,KAAK,IAAIE,IAAI,GAAGC,SAAS,CAACC,MAAM,EAAEC,qBAAqB,GAAG,IAAIC,KAAK,CAACJ,IAAI,GAAG,CAAC,GAAGA,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAEK,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGL,IAAI,EAAEK,IAAI,EAAE,EAAE;IAC3HF,qBAAqB,CAACE,IAAI,GAAG,CAAC,CAAC,GAAGJ,SAAS,CAACI,IAAI,CAAC;EACnD;EAEAd,SAAS,CAACM,eAAe,EAAEE,cAAc,CAACO,KAAK,CAAC,KAAK,CAAC,EAAEH,qBAAqB,CAAC,CAAC;AACjF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
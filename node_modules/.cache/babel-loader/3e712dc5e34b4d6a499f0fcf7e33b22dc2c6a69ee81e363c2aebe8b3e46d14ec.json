{"ast":null,"code":"export var command = {\n  name: 'extendCellsSelectionToMostInlineStart',\n  callback: function callback(hot) {\n    var selection = hot.selection,\n      columnIndexMapper = hot.columnIndexMapper;\n    var _hot$getSelectedRange = hot.getSelectedRangeLast(),\n      highlight = _hot$getSelectedRange.highlight,\n      from = _hot$getSelectedRange.from,\n      to = _hot$getSelectedRange.to;\n    if (!hot.selection.isSelectedByRowHeader() && !hot.selection.isSelectedByCorner() && highlight.isCell()) {\n      var fixedColumns = parseInt(hot.getSettings().fixedColumnsStart, 10);\n      var column = columnIndexMapper.getNearestNotHiddenIndex(fixedColumns, 1);\n      var newFrom = from.clone();\n      newFrom.col = highlight.col;\n      selection.setRangeStart(newFrom, undefined, false, highlight.clone());\n      selection.setRangeEnd(hot._createCellCoords(to.row, column));\n    }\n  }\n};","map":{"version":3,"names":["command","name","callback","hot","selection","columnIndexMapper","_hot$getSelectedRange","getSelectedRangeLast","highlight","from","to","isSelectedByRowHeader","isSelectedByCorner","isCell","fixedColumns","parseInt","getSettings","fixedColumnsStart","column","getNearestNotHiddenIndex","newFrom","clone","col","setRangeStart","undefined","setRangeEnd","_createCellCoords","row"],"sources":["/Users/priyadeliwala/node_modules/handsontable/shortcutContexts/commands/extendCellsSelection/toMostInlineStart.mjs"],"sourcesContent":["export const command = {\n  name: 'extendCellsSelectionToMostInlineStart',\n  callback(hot) {\n    const {\n      selection,\n      columnIndexMapper\n    } = hot;\n    const {\n      highlight,\n      from,\n      to\n    } = hot.getSelectedRangeLast();\n    if (!hot.selection.isSelectedByRowHeader() && !hot.selection.isSelectedByCorner() && highlight.isCell()) {\n      const fixedColumns = parseInt(hot.getSettings().fixedColumnsStart, 10);\n      const column = columnIndexMapper.getNearestNotHiddenIndex(fixedColumns, 1);\n      const newFrom = from.clone();\n      newFrom.col = highlight.col;\n      selection.setRangeStart(newFrom, undefined, false, highlight.clone());\n      selection.setRangeEnd(hot._createCellCoords(to.row, column));\n    }\n  }\n};"],"mappings":"AAAA,OAAO,IAAMA,OAAO,GAAG;EACrBC,IAAI,EAAE,uCAAuC;EAC7CC,QAAQ,WAARA,QAAQA,CAACC,GAAG,EAAE;IACZ,IACEC,SAAS,GAEPD,GAAG,CAFLC,SAAS;MACTC,iBAAiB,GACfF,GAAG,CADLE,iBAAiB;IAEnB,IAAAC,qBAAA,GAIIH,GAAG,CAACI,oBAAoB,CAAC,CAAC;MAH5BC,SAAS,GAAAF,qBAAA,CAATE,SAAS;MACTC,IAAI,GAAAH,qBAAA,CAAJG,IAAI;MACJC,EAAE,GAAAJ,qBAAA,CAAFI,EAAE;IAEJ,IAAI,CAACP,GAAG,CAACC,SAAS,CAACO,qBAAqB,CAAC,CAAC,IAAI,CAACR,GAAG,CAACC,SAAS,CAACQ,kBAAkB,CAAC,CAAC,IAAIJ,SAAS,CAACK,MAAM,CAAC,CAAC,EAAE;MACvG,IAAMC,YAAY,GAAGC,QAAQ,CAACZ,GAAG,CAACa,WAAW,CAAC,CAAC,CAACC,iBAAiB,EAAE,EAAE,CAAC;MACtE,IAAMC,MAAM,GAAGb,iBAAiB,CAACc,wBAAwB,CAACL,YAAY,EAAE,CAAC,CAAC;MAC1E,IAAMM,OAAO,GAAGX,IAAI,CAACY,KAAK,CAAC,CAAC;MAC5BD,OAAO,CAACE,GAAG,GAAGd,SAAS,CAACc,GAAG;MAC3BlB,SAAS,CAACmB,aAAa,CAACH,OAAO,EAAEI,SAAS,EAAE,KAAK,EAAEhB,SAAS,CAACa,KAAK,CAAC,CAAC,CAAC;MACrEjB,SAAS,CAACqB,WAAW,CAACtB,GAAG,CAACuB,iBAAiB,CAAChB,EAAE,CAACiB,GAAG,EAAET,MAAM,CAAC,CAAC;IAC9D;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nvar _templateObject;\nfunction _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nimport { BasePlugin } from \"../base/index.mjs\";\nimport { objectEach } from \"../../helpers/object.mjs\";\nimport Endpoints from \"./endpoints.mjs\";\nimport { toSingleLine } from \"../../helpers/templateLiteralTag.mjs\";\nexport var PLUGIN_KEY = 'columnSummary';\nexport var PLUGIN_PRIORITY = 220;\n/**\n * @plugin ColumnSummary\n * @class ColumnSummary\n *\n * @description\n * The `ColumnSummary` plugin lets you [easily summarize your columns](@/guides/columns/column-summary.md).\n *\n * You can use the [built-in summary functions](@/guides/columns/column-summary.md#built-in-summary-functions),\n * or implement a [custom summary function](@/guides/columns/column-summary.md#implementing-a-custom-summary-function).\n *\n * For each column summary, you can set the following configuration options:\n *\n * | Option | Required | Type | Default | Description |\n * |---|---|---|---|---|\n * | `sourceColumn` | No | Number | Same as `destinationColumn` | [Selects a column to summarize](@/guides/columns/column-summary.md#step-2-select-cells-that-you-want-to-summarize) |\n * | `ranges` | No | Array | - | [Selects ranges of rows to summarize](@/guides/columns/column-summary.md#step-2-select-cells-that-you-want-to-summarize) |\n * | `type` | Yes | String | - | [Sets a summary function](@/guides/columns/column-summary.md#step-3-calculate-your-summary) |\n * | `destinationRow` | Yes | Number | - | [Sets the destination cell's row coordinate](@/guides/columns/column-summary.md#step-4-provide-the-destination-cell-s-coordinates) |\n * | `destinationColumn` | Yes | Number | - | [Sets the destination cell's column coordinate](@/guides/columns/column-summary.md#step-4-provide-the-destination-cell-s-coordinates) |\n * | `forceNumeric` | No | Boolean | `false` | [Forces the summary to treat non-numerics as numerics](@/guides/columns/column-summary.md#forcing-numeric-values) |\n * | `reversedRowCoords` | No | Boolean | `false` | [Reverses row coordinates](@/guides/columns/column-summary.md#step-5-make-room-for-the-destination-cell) |\n * | `suppressDataTypeErrors` | No | Boolean | `true` | [Suppresses data type errors](@/guides/columns/column-summary.md#throwing-data-type-errors) |\n * | `readOnly` | No | Boolean | `true` | Makes summary cell read-only |\n * | `roundFloat` | No | Number | - | [Rounds summary result](@/guides/columns/column-summary.md#rounding-a-column-summary-result) |\n * | `customFunction` | No | Function | - | [Lets you add a custom summary function](@/guides/columns/column-summary.md#implementing-a-custom-summary-function) |\n *\n * @example\n * const container = document.getElementById('example');\n * const hot = new Handsontable(container, {\n *   data: getData(),\n *   colHeaders: true,\n *   rowHeaders: true,\n *   columnSummary: [\n *     {\n *       type: 'min',\n *       destinationRow: 4,\n *       destinationColumn: 1,\n *     },\n *     {\n *       type: 'max',\n *       destinationRow: 0,\n *       destinationColumn: 3,\n *       reversedRowCoords: true\n *     },\n *     {\n *       type: 'sum',\n *       destinationRow: 4,\n *       destinationColumn: 5,\n *       forceNumeric: true\n *     }\n *   ]\n * });\n */\n\nexport var ColumnSummary = /*#__PURE__*/function (_BasePlugin) {\n  _inherits(ColumnSummary, _BasePlugin);\n  var _super = _createSuper(ColumnSummary);\n  function ColumnSummary(hotInstance) {\n    var _this;\n    _classCallCheck(this, ColumnSummary);\n    _this = _super.call(this, hotInstance);\n    /**\n     * The Endpoints class instance. Used to make all endpoint-related operations.\n     *\n     * @private\n     * @type {null|Endpoints}\n     */\n\n    _this.endpoints = null;\n    return _this;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` than the {@link ColumnSummary#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n\n  _createClass(ColumnSummary, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return !!this.hot.getSettings()[PLUGIN_KEY];\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n      if (this.enabled) {\n        return;\n      }\n      this.settings = this.hot.getSettings()[PLUGIN_KEY];\n      this.endpoints = new Endpoints(this, this.settings);\n      this.addHook('afterInit', function () {\n        return _this2.onAfterInit.apply(_this2, arguments);\n      });\n      this.addHook('afterChange', function () {\n        return _this2.onAfterChange.apply(_this2, arguments);\n      });\n      this.addHook('beforeCreateRow', function (index, amount, source) {\n        return _this2.endpoints.resetSetupBeforeStructureAlteration('insert_row', index, amount, null, source);\n      }); // eslint-disable-line max-len\n\n      this.addHook('beforeCreateCol', function (index, amount, source) {\n        return _this2.endpoints.resetSetupBeforeStructureAlteration('insert_col', index, amount, null, source);\n      }); // eslint-disable-line max-len\n\n      this.addHook('beforeRemoveRow', function () {\n        var _this2$endpoints;\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        return (_this2$endpoints = _this2.endpoints).resetSetupBeforeStructureAlteration.apply(_this2$endpoints, ['remove_row'].concat(args));\n      });\n      this.addHook('beforeRemoveCol', function () {\n        var _this2$endpoints2;\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n        return (_this2$endpoints2 = _this2.endpoints).resetSetupBeforeStructureAlteration.apply(_this2$endpoints2, ['remove_col'].concat(args));\n      });\n      this.addHook('afterCreateRow', function (index, amount, source) {\n        return _this2.endpoints.resetSetupAfterStructureAlteration('insert_row', index, amount, null, source);\n      }); // eslint-disable-line max-len\n\n      this.addHook('afterCreateCol', function (index, amount, source) {\n        return _this2.endpoints.resetSetupAfterStructureAlteration('insert_col', index, amount, null, source);\n      }); // eslint-disable-line max-len\n\n      this.addHook('afterRemoveRow', function () {\n        var _this2$endpoints3;\n        for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          args[_key3] = arguments[_key3];\n        }\n        return (_this2$endpoints3 = _this2.endpoints).resetSetupAfterStructureAlteration.apply(_this2$endpoints3, ['remove_row'].concat(args));\n      });\n      this.addHook('afterRemoveCol', function () {\n        var _this2$endpoints4;\n        for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n          args[_key4] = arguments[_key4];\n        }\n        return (_this2$endpoints4 = _this2.endpoints).resetSetupAfterStructureAlteration.apply(_this2$endpoints4, ['remove_col'].concat(args));\n      });\n      this.addHook('afterRowMove', function () {\n        return _this2.onAfterRowMove.apply(_this2, arguments);\n      });\n      _get(_getPrototypeOf(ColumnSummary.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      this.endpoints = null;\n      this.settings = null;\n      this.currentEndpoint = null;\n    }\n    /**\n     * Calculates math for a single endpoint.\n     *\n     * @private\n     * @param {object} endpoint Contains information about the endpoint.\n     */\n  }, {\n    key: \"calculate\",\n    value: function calculate(endpoint) {\n      switch (endpoint.type.toLowerCase()) {\n        case 'sum':\n          endpoint.result = this.calculateSum(endpoint);\n          break;\n        case 'min':\n          endpoint.result = this.calculateMinMax(endpoint, endpoint.type);\n          break;\n        case 'max':\n          endpoint.result = this.calculateMinMax(endpoint, endpoint.type);\n          break;\n        case 'count':\n          endpoint.result = this.countEntries(endpoint);\n          break;\n        case 'average':\n          endpoint.result = this.calculateAverage(endpoint);\n          break;\n        case 'custom':\n          endpoint.result = endpoint.customFunction.call(this, endpoint);\n          break;\n        default:\n          break;\n      }\n    }\n    /**\n     * Calculates sum of the values contained in ranges provided in the plugin config.\n     *\n     * @private\n     * @param {object} endpoint Contains the endpoint information.\n     * @returns {number} Sum for the selected range.\n     */\n  }, {\n    key: \"calculateSum\",\n    value: function calculateSum(endpoint) {\n      var _this3 = this;\n      var sum = 0;\n      objectEach(endpoint.ranges, function (range) {\n        sum += _this3.getPartialSum(range, endpoint.sourceColumn);\n      });\n      return sum;\n    }\n    /**\n     * Returns partial sum of values from a single row range.\n     *\n     * @private\n     * @param {Array} rowRange Range for the sum.\n     * @param {number} col Column index.\n     * @returns {number} The partial sum.\n     */\n  }, {\n    key: \"getPartialSum\",\n    value: function getPartialSum(rowRange, col) {\n      var sum = 0;\n      var i = rowRange[1] || rowRange[0];\n      var cellValue = null;\n      var biggestDecimalPlacesCount = 0;\n      do {\n        cellValue = this.getCellValue(i, col) || 0;\n        var decimalPlaces = (\"\".concat(cellValue).split('.')[1] || []).length || 1;\n        if (decimalPlaces > biggestDecimalPlacesCount) {\n          biggestDecimalPlacesCount = decimalPlaces;\n        }\n        sum += cellValue || 0;\n        i -= 1;\n      } while (i >= rowRange[0]); // Workaround for e.g. 802.2 + 1.1 = 803.3000000000001\n\n      return Math.round(sum * Math.pow(10, biggestDecimalPlacesCount)) / Math.pow(10, biggestDecimalPlacesCount);\n    }\n    /**\n     * Calculates the minimal value for the selected ranges.\n     *\n     * @private\n     * @param {object} endpoint Contains the endpoint information.\n     * @param {string} type `'min'` or `'max'`.\n     * @returns {number} Min or Max value.\n     */\n  }, {\n    key: \"calculateMinMax\",\n    value: function calculateMinMax(endpoint, type) {\n      var _this4 = this;\n      var result = null;\n      objectEach(endpoint.ranges, function (range) {\n        var partialResult = _this4.getPartialMinMax(range, endpoint.sourceColumn, type);\n        if (result === null && partialResult !== null) {\n          result = partialResult;\n        }\n        if (partialResult !== null) {\n          switch (type) {\n            case 'min':\n              result = Math.min(result, partialResult);\n              break;\n            case 'max':\n              result = Math.max(result, partialResult);\n              break;\n            default:\n              break;\n          }\n        }\n      });\n      return result === null ? 'Not enough data' : result;\n    }\n    /**\n     * Returns a local minimum of the provided sub-range.\n     *\n     * @private\n     * @param {Array} rowRange Range for the calculation.\n     * @param {number} col Column index.\n     * @param {string} type `'min'` or `'max'`.\n     * @returns {number} Min or max value.\n     */\n  }, {\n    key: \"getPartialMinMax\",\n    value: function getPartialMinMax(rowRange, col, type) {\n      var result = null;\n      var i = rowRange[1] || rowRange[0];\n      var cellValue;\n      do {\n        cellValue = this.getCellValue(i, col) || null;\n        if (result === null) {\n          result = cellValue;\n        } else if (cellValue !== null) {\n          switch (type) {\n            case 'min':\n              result = Math.min(result, cellValue);\n              break;\n            case 'max':\n              result = Math.max(result, cellValue);\n              break;\n            default:\n              break;\n          }\n        }\n        i -= 1;\n      } while (i >= rowRange[0]);\n      return result;\n    }\n    /**\n     * Counts empty cells in the provided row range.\n     *\n     * @private\n     * @param {Array} rowRange Row range for the calculation.\n     * @param {number} col Column index.\n     * @returns {number} Empty cells count.\n     */\n  }, {\n    key: \"countEmpty\",\n    value: function countEmpty(rowRange, col) {\n      var cellValue;\n      var counter = 0;\n      var i = rowRange[1] || rowRange[0];\n      do {\n        cellValue = this.getCellValue(i, col);\n        if (!cellValue) {\n          counter += 1;\n        }\n        i -= 1;\n      } while (i >= rowRange[0]);\n      return counter;\n    }\n    /**\n     * Counts non-empty cells in the provided row range.\n     *\n     * @private\n     * @param {object} endpoint Contains the endpoint information.\n     * @returns {number} Entry count.\n     */\n  }, {\n    key: \"countEntries\",\n    value: function countEntries(endpoint) {\n      var _this5 = this;\n      var result = 0;\n      var ranges = endpoint.ranges;\n      objectEach(ranges, function (range) {\n        var partial = range[1] === void 0 ? 1 : range[1] - range[0] + 1;\n        var emptyCount = _this5.countEmpty(range, endpoint.sourceColumn);\n        result += partial;\n        result -= emptyCount;\n      });\n      return result;\n    }\n    /**\n     * Calculates the average value from the cells in the range.\n     *\n     * @private\n     * @param {object} endpoint Contains the endpoint information.\n     * @returns {number} Avarage value.\n     */\n  }, {\n    key: \"calculateAverage\",\n    value: function calculateAverage(endpoint) {\n      var sum = this.calculateSum(endpoint);\n      var entriesCount = this.countEntries(endpoint);\n      return sum / entriesCount;\n    }\n    /**\n     * Returns a cell value, taking into consideration a basic validation.\n     *\n     * @private\n     * @param {number} row Row index.\n     * @param {number} col Column index.\n     * @returns {string} The cell value.\n     */\n  }, {\n    key: \"getCellValue\",\n    value: function getCellValue(row, col) {\n      var visualRowIndex = this.hot.toVisualRow(row);\n      var visualColumnIndex = this.hot.toVisualColumn(col);\n      var cellValue = this.hot.getSourceDataAtCell(row, col);\n      var cellClassName = '';\n      if (visualRowIndex !== null && visualColumnIndex !== null) {\n        cellClassName = this.hot.getCellMeta(visualRowIndex, visualColumnIndex).className || '';\n      }\n      if (cellClassName.indexOf('columnSummaryResult') > -1) {\n        return null;\n      }\n      if (this.endpoints.currentEndpoint.forceNumeric) {\n        if (typeof cellValue === 'string') {\n          cellValue = cellValue.replace(/,/, '.');\n        }\n        cellValue = parseFloat(cellValue);\n      }\n      if (isNaN(cellValue)) {\n        if (!this.endpoints.currentEndpoint.suppressDataTypeErrors) {\n          throw new Error(toSingleLine(_templateObject || (_templateObject = _taggedTemplateLiteral([\"ColumnSummary plugin: cell at (\", \", \", \") is not in a \\n          numeric format. Cannot do the calculation.\"], [\"ColumnSummary plugin: cell at (\", \", \", \") is not in a\\\\x20\\n          numeric format. Cannot do the calculation.\"])), row, col));\n        }\n      }\n      return cellValue;\n    }\n    /**\n     * `afterInit` hook callback.\n     *\n     * @private\n     */\n  }, {\n    key: \"onAfterInit\",\n    value: function onAfterInit() {\n      this.endpoints.endpoints = this.endpoints.parseSettings();\n      this.endpoints.refreshAllEndpoints(true);\n    }\n    /**\n     * `afterChange` hook callback.\n     *\n     * @private\n     * @param {Array} changes 2D array containing information about each of the edited cells.\n     * @param {string} source The string that identifies source of changes.\n     */\n  }, {\n    key: \"onAfterChange\",\n    value: function onAfterChange(changes, source) {\n      if (changes && source !== 'ColumnSummary.reset' && source !== 'ColumnSummary.set' && source !== 'loadData') {\n        this.endpoints.refreshChangedEndpoints(changes);\n      }\n    }\n    /**\n     * `beforeRowMove` hook callback.\n     *\n     * @private\n     * @param {Array} rows Array of visual row indexes to be moved.\n     * @param {number} finalIndex Visual row index, being a start index for the moved rows. Points to where the elements will be placed after the moving action.\n     * To check the visualization of the final index, please take a look at [documentation](@/guides/rows/row-moving.md).\n     */\n  }, {\n    key: \"onAfterRowMove\",\n    value: function onAfterRowMove(rows, finalIndex) {\n      this.endpoints.resetSetupBeforeStructureAlteration('move_row', rows[0], rows.length, rows, this.pluginName);\n      this.endpoints.resetSetupAfterStructureAlteration('move_row', finalIndex, rows.length, rows, this.pluginName);\n    }\n  }], [{\n    key: \"PLUGIN_KEY\",\n    get: function get() {\n      return PLUGIN_KEY;\n    }\n  }, {\n    key: \"PLUGIN_PRIORITY\",\n    get: function get() {\n      return PLUGIN_PRIORITY;\n    }\n  }]);\n  return ColumnSummary;\n}(BasePlugin);","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_templateObject","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","_get","Reflect","get","property","receiver","base","_superPropBase","desc","getOwnPropertyDescriptor","call","arguments","apply","object","hasOwnProperty","_getPrototypeOf","_inherits","subClass","superClass","create","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","construct","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","BasePlugin","objectEach","Endpoints","toSingleLine","PLUGIN_KEY","PLUGIN_PRIORITY","ColumnSummary","_BasePlugin","_super","hotInstance","_this","endpoints","isEnabled","hot","getSettings","enablePlugin","_this2","enabled","settings","addHook","onAfterInit","onAfterChange","index","amount","source","resetSetupBeforeStructureAlteration","_this2$endpoints","_len","args","Array","_key","concat","_this2$endpoints2","_len2","_key2","resetSetupAfterStructureAlteration","_this2$endpoints3","_len3","_key3","_this2$endpoints4","_len4","_key4","onAfterRowMove","disablePlugin","currentEndpoint","calculate","endpoint","type","toLowerCase","calculateSum","calculateMinMax","countEntries","calculateAverage","customFunction","_this3","sum","ranges","range","getPartialSum","sourceColumn","rowRange","col","cellValue","biggestDecimalPlacesCount","getCellValue","decimalPlaces","split","Math","round","pow","_this4","partialResult","getPartialMinMax","min","max","countEmpty","counter","_this5","partial","emptyCount","entriesCount","row","visualRowIndex","toVisualRow","visualColumnIndex","toVisualColumn","getSourceDataAtCell","cellClassName","getCellMeta","className","indexOf","forceNumeric","replace","parseFloat","isNaN","suppressDataTypeErrors","Error","parseSettings","refreshAllEndpoints","changes","refreshChangedEndpoints","rows","finalIndex","pluginName"],"sources":["/Users/priyadeliwala/Desktop/sales-dashboard/node_modules/handsontable/plugins/columnSummary/columnSummary.mjs"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nimport \"core-js/modules/es.object.set-prototype-of.js\";\nimport \"core-js/modules/es.object.get-prototype-of.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.reflect.construct.js\";\nimport \"core-js/modules/es.reflect.get.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.object.freeze.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n\nvar _templateObject;\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.string.replace.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _get() { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport { BasePlugin } from \"../base/index.mjs\";\nimport { objectEach } from \"../../helpers/object.mjs\";\nimport Endpoints from \"./endpoints.mjs\";\nimport { toSingleLine } from \"../../helpers/templateLiteralTag.mjs\";\nexport var PLUGIN_KEY = 'columnSummary';\nexport var PLUGIN_PRIORITY = 220;\n/**\n * @plugin ColumnSummary\n * @class ColumnSummary\n *\n * @description\n * The `ColumnSummary` plugin lets you [easily summarize your columns](@/guides/columns/column-summary.md).\n *\n * You can use the [built-in summary functions](@/guides/columns/column-summary.md#built-in-summary-functions),\n * or implement a [custom summary function](@/guides/columns/column-summary.md#implementing-a-custom-summary-function).\n *\n * For each column summary, you can set the following configuration options:\n *\n * | Option | Required | Type | Default | Description |\n * |---|---|---|---|---|\n * | `sourceColumn` | No | Number | Same as `destinationColumn` | [Selects a column to summarize](@/guides/columns/column-summary.md#step-2-select-cells-that-you-want-to-summarize) |\n * | `ranges` | No | Array | - | [Selects ranges of rows to summarize](@/guides/columns/column-summary.md#step-2-select-cells-that-you-want-to-summarize) |\n * | `type` | Yes | String | - | [Sets a summary function](@/guides/columns/column-summary.md#step-3-calculate-your-summary) |\n * | `destinationRow` | Yes | Number | - | [Sets the destination cell's row coordinate](@/guides/columns/column-summary.md#step-4-provide-the-destination-cell-s-coordinates) |\n * | `destinationColumn` | Yes | Number | - | [Sets the destination cell's column coordinate](@/guides/columns/column-summary.md#step-4-provide-the-destination-cell-s-coordinates) |\n * | `forceNumeric` | No | Boolean | `false` | [Forces the summary to treat non-numerics as numerics](@/guides/columns/column-summary.md#forcing-numeric-values) |\n * | `reversedRowCoords` | No | Boolean | `false` | [Reverses row coordinates](@/guides/columns/column-summary.md#step-5-make-room-for-the-destination-cell) |\n * | `suppressDataTypeErrors` | No | Boolean | `true` | [Suppresses data type errors](@/guides/columns/column-summary.md#throwing-data-type-errors) |\n * | `readOnly` | No | Boolean | `true` | Makes summary cell read-only |\n * | `roundFloat` | No | Number | - | [Rounds summary result](@/guides/columns/column-summary.md#rounding-a-column-summary-result) |\n * | `customFunction` | No | Function | - | [Lets you add a custom summary function](@/guides/columns/column-summary.md#implementing-a-custom-summary-function) |\n *\n * @example\n * const container = document.getElementById('example');\n * const hot = new Handsontable(container, {\n *   data: getData(),\n *   colHeaders: true,\n *   rowHeaders: true,\n *   columnSummary: [\n *     {\n *       type: 'min',\n *       destinationRow: 4,\n *       destinationColumn: 1,\n *     },\n *     {\n *       type: 'max',\n *       destinationRow: 0,\n *       destinationColumn: 3,\n *       reversedRowCoords: true\n *     },\n *     {\n *       type: 'sum',\n *       destinationRow: 4,\n *       destinationColumn: 5,\n *       forceNumeric: true\n *     }\n *   ]\n * });\n */\n\nexport var ColumnSummary = /*#__PURE__*/function (_BasePlugin) {\n  _inherits(ColumnSummary, _BasePlugin);\n\n  var _super = _createSuper(ColumnSummary);\n\n  function ColumnSummary(hotInstance) {\n    var _this;\n\n    _classCallCheck(this, ColumnSummary);\n\n    _this = _super.call(this, hotInstance);\n    /**\n     * The Endpoints class instance. Used to make all endpoint-related operations.\n     *\n     * @private\n     * @type {null|Endpoints}\n     */\n\n    _this.endpoints = null;\n    return _this;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` than the {@link ColumnSummary#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n\n\n  _createClass(ColumnSummary, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return !!this.hot.getSettings()[PLUGIN_KEY];\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n\n      if (this.enabled) {\n        return;\n      }\n\n      this.settings = this.hot.getSettings()[PLUGIN_KEY];\n      this.endpoints = new Endpoints(this, this.settings);\n      this.addHook('afterInit', function () {\n        return _this2.onAfterInit.apply(_this2, arguments);\n      });\n      this.addHook('afterChange', function () {\n        return _this2.onAfterChange.apply(_this2, arguments);\n      });\n      this.addHook('beforeCreateRow', function (index, amount, source) {\n        return _this2.endpoints.resetSetupBeforeStructureAlteration('insert_row', index, amount, null, source);\n      }); // eslint-disable-line max-len\n\n      this.addHook('beforeCreateCol', function (index, amount, source) {\n        return _this2.endpoints.resetSetupBeforeStructureAlteration('insert_col', index, amount, null, source);\n      }); // eslint-disable-line max-len\n\n      this.addHook('beforeRemoveRow', function () {\n        var _this2$endpoints;\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        return (_this2$endpoints = _this2.endpoints).resetSetupBeforeStructureAlteration.apply(_this2$endpoints, ['remove_row'].concat(args));\n      });\n      this.addHook('beforeRemoveCol', function () {\n        var _this2$endpoints2;\n\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        return (_this2$endpoints2 = _this2.endpoints).resetSetupBeforeStructureAlteration.apply(_this2$endpoints2, ['remove_col'].concat(args));\n      });\n      this.addHook('afterCreateRow', function (index, amount, source) {\n        return _this2.endpoints.resetSetupAfterStructureAlteration('insert_row', index, amount, null, source);\n      }); // eslint-disable-line max-len\n\n      this.addHook('afterCreateCol', function (index, amount, source) {\n        return _this2.endpoints.resetSetupAfterStructureAlteration('insert_col', index, amount, null, source);\n      }); // eslint-disable-line max-len\n\n      this.addHook('afterRemoveRow', function () {\n        var _this2$endpoints3;\n\n        for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          args[_key3] = arguments[_key3];\n        }\n\n        return (_this2$endpoints3 = _this2.endpoints).resetSetupAfterStructureAlteration.apply(_this2$endpoints3, ['remove_row'].concat(args));\n      });\n      this.addHook('afterRemoveCol', function () {\n        var _this2$endpoints4;\n\n        for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n          args[_key4] = arguments[_key4];\n        }\n\n        return (_this2$endpoints4 = _this2.endpoints).resetSetupAfterStructureAlteration.apply(_this2$endpoints4, ['remove_col'].concat(args));\n      });\n      this.addHook('afterRowMove', function () {\n        return _this2.onAfterRowMove.apply(_this2, arguments);\n      });\n\n      _get(_getPrototypeOf(ColumnSummary.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      this.endpoints = null;\n      this.settings = null;\n      this.currentEndpoint = null;\n    }\n    /**\n     * Calculates math for a single endpoint.\n     *\n     * @private\n     * @param {object} endpoint Contains information about the endpoint.\n     */\n\n  }, {\n    key: \"calculate\",\n    value: function calculate(endpoint) {\n      switch (endpoint.type.toLowerCase()) {\n        case 'sum':\n          endpoint.result = this.calculateSum(endpoint);\n          break;\n\n        case 'min':\n          endpoint.result = this.calculateMinMax(endpoint, endpoint.type);\n          break;\n\n        case 'max':\n          endpoint.result = this.calculateMinMax(endpoint, endpoint.type);\n          break;\n\n        case 'count':\n          endpoint.result = this.countEntries(endpoint);\n          break;\n\n        case 'average':\n          endpoint.result = this.calculateAverage(endpoint);\n          break;\n\n        case 'custom':\n          endpoint.result = endpoint.customFunction.call(this, endpoint);\n          break;\n\n        default:\n          break;\n      }\n    }\n    /**\n     * Calculates sum of the values contained in ranges provided in the plugin config.\n     *\n     * @private\n     * @param {object} endpoint Contains the endpoint information.\n     * @returns {number} Sum for the selected range.\n     */\n\n  }, {\n    key: \"calculateSum\",\n    value: function calculateSum(endpoint) {\n      var _this3 = this;\n\n      var sum = 0;\n      objectEach(endpoint.ranges, function (range) {\n        sum += _this3.getPartialSum(range, endpoint.sourceColumn);\n      });\n      return sum;\n    }\n    /**\n     * Returns partial sum of values from a single row range.\n     *\n     * @private\n     * @param {Array} rowRange Range for the sum.\n     * @param {number} col Column index.\n     * @returns {number} The partial sum.\n     */\n\n  }, {\n    key: \"getPartialSum\",\n    value: function getPartialSum(rowRange, col) {\n      var sum = 0;\n      var i = rowRange[1] || rowRange[0];\n      var cellValue = null;\n      var biggestDecimalPlacesCount = 0;\n\n      do {\n        cellValue = this.getCellValue(i, col) || 0;\n        var decimalPlaces = (\"\".concat(cellValue).split('.')[1] || []).length || 1;\n\n        if (decimalPlaces > biggestDecimalPlacesCount) {\n          biggestDecimalPlacesCount = decimalPlaces;\n        }\n\n        sum += cellValue || 0;\n        i -= 1;\n      } while (i >= rowRange[0]); // Workaround for e.g. 802.2 + 1.1 = 803.3000000000001\n\n\n      return Math.round(sum * Math.pow(10, biggestDecimalPlacesCount)) / Math.pow(10, biggestDecimalPlacesCount);\n    }\n    /**\n     * Calculates the minimal value for the selected ranges.\n     *\n     * @private\n     * @param {object} endpoint Contains the endpoint information.\n     * @param {string} type `'min'` or `'max'`.\n     * @returns {number} Min or Max value.\n     */\n\n  }, {\n    key: \"calculateMinMax\",\n    value: function calculateMinMax(endpoint, type) {\n      var _this4 = this;\n\n      var result = null;\n      objectEach(endpoint.ranges, function (range) {\n        var partialResult = _this4.getPartialMinMax(range, endpoint.sourceColumn, type);\n\n        if (result === null && partialResult !== null) {\n          result = partialResult;\n        }\n\n        if (partialResult !== null) {\n          switch (type) {\n            case 'min':\n              result = Math.min(result, partialResult);\n              break;\n\n            case 'max':\n              result = Math.max(result, partialResult);\n              break;\n\n            default:\n              break;\n          }\n        }\n      });\n      return result === null ? 'Not enough data' : result;\n    }\n    /**\n     * Returns a local minimum of the provided sub-range.\n     *\n     * @private\n     * @param {Array} rowRange Range for the calculation.\n     * @param {number} col Column index.\n     * @param {string} type `'min'` or `'max'`.\n     * @returns {number} Min or max value.\n     */\n\n  }, {\n    key: \"getPartialMinMax\",\n    value: function getPartialMinMax(rowRange, col, type) {\n      var result = null;\n      var i = rowRange[1] || rowRange[0];\n      var cellValue;\n\n      do {\n        cellValue = this.getCellValue(i, col) || null;\n\n        if (result === null) {\n          result = cellValue;\n        } else if (cellValue !== null) {\n          switch (type) {\n            case 'min':\n              result = Math.min(result, cellValue);\n              break;\n\n            case 'max':\n              result = Math.max(result, cellValue);\n              break;\n\n            default:\n              break;\n          }\n        }\n\n        i -= 1;\n      } while (i >= rowRange[0]);\n\n      return result;\n    }\n    /**\n     * Counts empty cells in the provided row range.\n     *\n     * @private\n     * @param {Array} rowRange Row range for the calculation.\n     * @param {number} col Column index.\n     * @returns {number} Empty cells count.\n     */\n\n  }, {\n    key: \"countEmpty\",\n    value: function countEmpty(rowRange, col) {\n      var cellValue;\n      var counter = 0;\n      var i = rowRange[1] || rowRange[0];\n\n      do {\n        cellValue = this.getCellValue(i, col);\n\n        if (!cellValue) {\n          counter += 1;\n        }\n\n        i -= 1;\n      } while (i >= rowRange[0]);\n\n      return counter;\n    }\n    /**\n     * Counts non-empty cells in the provided row range.\n     *\n     * @private\n     * @param {object} endpoint Contains the endpoint information.\n     * @returns {number} Entry count.\n     */\n\n  }, {\n    key: \"countEntries\",\n    value: function countEntries(endpoint) {\n      var _this5 = this;\n\n      var result = 0;\n      var ranges = endpoint.ranges;\n      objectEach(ranges, function (range) {\n        var partial = range[1] === void 0 ? 1 : range[1] - range[0] + 1;\n\n        var emptyCount = _this5.countEmpty(range, endpoint.sourceColumn);\n\n        result += partial;\n        result -= emptyCount;\n      });\n      return result;\n    }\n    /**\n     * Calculates the average value from the cells in the range.\n     *\n     * @private\n     * @param {object} endpoint Contains the endpoint information.\n     * @returns {number} Avarage value.\n     */\n\n  }, {\n    key: \"calculateAverage\",\n    value: function calculateAverage(endpoint) {\n      var sum = this.calculateSum(endpoint);\n      var entriesCount = this.countEntries(endpoint);\n      return sum / entriesCount;\n    }\n    /**\n     * Returns a cell value, taking into consideration a basic validation.\n     *\n     * @private\n     * @param {number} row Row index.\n     * @param {number} col Column index.\n     * @returns {string} The cell value.\n     */\n\n  }, {\n    key: \"getCellValue\",\n    value: function getCellValue(row, col) {\n      var visualRowIndex = this.hot.toVisualRow(row);\n      var visualColumnIndex = this.hot.toVisualColumn(col);\n      var cellValue = this.hot.getSourceDataAtCell(row, col);\n      var cellClassName = '';\n\n      if (visualRowIndex !== null && visualColumnIndex !== null) {\n        cellClassName = this.hot.getCellMeta(visualRowIndex, visualColumnIndex).className || '';\n      }\n\n      if (cellClassName.indexOf('columnSummaryResult') > -1) {\n        return null;\n      }\n\n      if (this.endpoints.currentEndpoint.forceNumeric) {\n        if (typeof cellValue === 'string') {\n          cellValue = cellValue.replace(/,/, '.');\n        }\n\n        cellValue = parseFloat(cellValue);\n      }\n\n      if (isNaN(cellValue)) {\n        if (!this.endpoints.currentEndpoint.suppressDataTypeErrors) {\n          throw new Error(toSingleLine(_templateObject || (_templateObject = _taggedTemplateLiteral([\"ColumnSummary plugin: cell at (\", \", \", \") is not in a \\n          numeric format. Cannot do the calculation.\"], [\"ColumnSummary plugin: cell at (\", \", \", \") is not in a\\\\x20\\n          numeric format. Cannot do the calculation.\"])), row, col));\n        }\n      }\n\n      return cellValue;\n    }\n    /**\n     * `afterInit` hook callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onAfterInit\",\n    value: function onAfterInit() {\n      this.endpoints.endpoints = this.endpoints.parseSettings();\n      this.endpoints.refreshAllEndpoints(true);\n    }\n    /**\n     * `afterChange` hook callback.\n     *\n     * @private\n     * @param {Array} changes 2D array containing information about each of the edited cells.\n     * @param {string} source The string that identifies source of changes.\n     */\n\n  }, {\n    key: \"onAfterChange\",\n    value: function onAfterChange(changes, source) {\n      if (changes && source !== 'ColumnSummary.reset' && source !== 'ColumnSummary.set' && source !== 'loadData') {\n        this.endpoints.refreshChangedEndpoints(changes);\n      }\n    }\n    /**\n     * `beforeRowMove` hook callback.\n     *\n     * @private\n     * @param {Array} rows Array of visual row indexes to be moved.\n     * @param {number} finalIndex Visual row index, being a start index for the moved rows. Points to where the elements will be placed after the moving action.\n     * To check the visualization of the final index, please take a look at [documentation](@/guides/rows/row-moving.md).\n     */\n\n  }, {\n    key: \"onAfterRowMove\",\n    value: function onAfterRowMove(rows, finalIndex) {\n      this.endpoints.resetSetupBeforeStructureAlteration('move_row', rows[0], rows.length, rows, this.pluginName);\n      this.endpoints.resetSetupAfterStructureAlteration('move_row', finalIndex, rows.length, rows, this.pluginName);\n    }\n  }], [{\n    key: \"PLUGIN_KEY\",\n    get: function get() {\n      return PLUGIN_KEY;\n    }\n  }, {\n    key: \"PLUGIN_PRIORITY\",\n    get: function get() {\n      return PLUGIN_PRIORITY;\n    }\n  }]);\n\n  return ColumnSummary;\n}(BasePlugin);"],"mappings":"AAAA,SAASA,OAAOA,CAACC,GAAG,EAAE;EAAE,yBAAyB;;EAAE,OAAOD,OAAO,GAAG,UAAU,IAAI,OAAOE,MAAM,IAAI,QAAQ,IAAI,OAAOA,MAAM,CAACC,QAAQ,GAAG,UAAUF,GAAG,EAAE;IAAE,OAAO,OAAOA,GAAG;EAAE,CAAC,GAAG,UAAUA,GAAG,EAAE;IAAE,OAAOA,GAAG,IAAI,UAAU,IAAI,OAAOC,MAAM,IAAID,GAAG,CAACG,WAAW,KAAKF,MAAM,IAAID,GAAG,KAAKC,MAAM,CAACG,SAAS,GAAG,QAAQ,GAAG,OAAOJ,GAAG;EAAE,CAAC,EAAED,OAAO,CAACC,GAAG,CAAC;AAAE;AAiB/U,IAAIK,eAAe;AAEnB,SAASC,sBAAsBA,CAACC,OAAO,EAAEC,GAAG,EAAE;EAAE,IAAI,CAACA,GAAG,EAAE;IAAEA,GAAG,GAAGD,OAAO,CAACE,KAAK,CAAC,CAAC,CAAC;EAAE;EAAE,OAAOC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACE,gBAAgB,CAACL,OAAO,EAAE;IAAEC,GAAG,EAAE;MAAEK,KAAK,EAAEH,MAAM,CAACC,MAAM,CAACH,GAAG;IAAE;EAAE,CAAC,CAAC,CAAC;AAAE;AAQtL,SAASM,eAAeA,CAACC,QAAQ,EAAEC,WAAW,EAAE;EAAE,IAAI,EAAED,QAAQ,YAAYC,WAAW,CAAC,EAAE;IAAE,MAAM,IAAIC,SAAS,CAAC,mCAAmC,CAAC;EAAE;AAAE;AAExJ,SAASC,iBAAiBA,CAACC,MAAM,EAAEC,KAAK,EAAE;EAAE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,KAAK,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;IAAE,IAAIE,UAAU,GAAGH,KAAK,CAACC,CAAC,CAAC;IAAEE,UAAU,CAACC,UAAU,GAAGD,UAAU,CAACC,UAAU,IAAI,KAAK;IAAED,UAAU,CAACE,YAAY,GAAG,IAAI;IAAE,IAAI,OAAO,IAAIF,UAAU,EAAEA,UAAU,CAACG,QAAQ,GAAG,IAAI;IAAEhB,MAAM,CAACiB,cAAc,CAACR,MAAM,EAAEI,UAAU,CAACK,GAAG,EAAEL,UAAU,CAAC;EAAE;AAAE;AAE5T,SAASM,YAAYA,CAACb,WAAW,EAAEc,UAAU,EAAEC,WAAW,EAAE;EAAE,IAAID,UAAU,EAAEZ,iBAAiB,CAACF,WAAW,CAACZ,SAAS,EAAE0B,UAAU,CAAC;EAAE,IAAIC,WAAW,EAAEb,iBAAiB,CAACF,WAAW,EAAEe,WAAW,CAAC;EAAErB,MAAM,CAACiB,cAAc,CAACX,WAAW,EAAE,WAAW,EAAE;IAAEU,QAAQ,EAAE;EAAM,CAAC,CAAC;EAAE,OAAOV,WAAW;AAAE;AAE5R,SAASgB,IAAIA,CAAA,EAAG;EAAE,IAAI,OAAOC,OAAO,KAAK,WAAW,IAAIA,OAAO,CAACC,GAAG,EAAE;IAAEF,IAAI,GAAGC,OAAO,CAACC,GAAG;EAAE,CAAC,MAAM;IAAEF,IAAI,GAAG,SAASA,IAAIA,CAACb,MAAM,EAAEgB,QAAQ,EAAEC,QAAQ,EAAE;MAAE,IAAIC,IAAI,GAAGC,cAAc,CAACnB,MAAM,EAAEgB,QAAQ,CAAC;MAAE,IAAI,CAACE,IAAI,EAAE;MAAQ,IAAIE,IAAI,GAAG7B,MAAM,CAAC8B,wBAAwB,CAACH,IAAI,EAAEF,QAAQ,CAAC;MAAE,IAAII,IAAI,CAACL,GAAG,EAAE;QAAE,OAAOK,IAAI,CAACL,GAAG,CAACO,IAAI,CAACC,SAAS,CAACpB,MAAM,GAAG,CAAC,GAAGH,MAAM,GAAGiB,QAAQ,CAAC;MAAE;MAAE,OAAOG,IAAI,CAAC1B,KAAK;IAAE,CAAC;EAAE;EAAE,OAAOmB,IAAI,CAACW,KAAK,CAAC,IAAI,EAAED,SAAS,CAAC;AAAE;AAEja,SAASJ,cAAcA,CAACM,MAAM,EAAET,QAAQ,EAAE;EAAE,OAAO,CAACzB,MAAM,CAACN,SAAS,CAACyC,cAAc,CAACJ,IAAI,CAACG,MAAM,EAAET,QAAQ,CAAC,EAAE;IAAES,MAAM,GAAGE,eAAe,CAACF,MAAM,CAAC;IAAE,IAAIA,MAAM,KAAK,IAAI,EAAE;EAAO;EAAE,OAAOA,MAAM;AAAE;AAE7L,SAASG,SAASA,CAACC,QAAQ,EAAEC,UAAU,EAAE;EAAE,IAAI,OAAOA,UAAU,KAAK,UAAU,IAAIA,UAAU,KAAK,IAAI,EAAE;IAAE,MAAM,IAAIhC,SAAS,CAAC,oDAAoD,CAAC;EAAE;EAAE+B,QAAQ,CAAC5C,SAAS,GAAGM,MAAM,CAACwC,MAAM,CAACD,UAAU,IAAIA,UAAU,CAAC7C,SAAS,EAAE;IAAED,WAAW,EAAE;MAAEU,KAAK,EAAEmC,QAAQ;MAAEtB,QAAQ,EAAE,IAAI;MAAED,YAAY,EAAE;IAAK;EAAE,CAAC,CAAC;EAAEf,MAAM,CAACiB,cAAc,CAACqB,QAAQ,EAAE,WAAW,EAAE;IAAEtB,QAAQ,EAAE;EAAM,CAAC,CAAC;EAAE,IAAIuB,UAAU,EAAEE,eAAe,CAACH,QAAQ,EAAEC,UAAU,CAAC;AAAE;AAEnc,SAASE,eAAeA,CAACC,CAAC,EAAEC,CAAC,EAAE;EAAEF,eAAe,GAAGzC,MAAM,CAAC4C,cAAc,IAAI,SAASH,eAAeA,CAACC,CAAC,EAAEC,CAAC,EAAE;IAAED,CAAC,CAACG,SAAS,GAAGF,CAAC;IAAE,OAAOD,CAAC;EAAE,CAAC;EAAE,OAAOD,eAAe,CAACC,CAAC,EAAEC,CAAC,CAAC;AAAE;AAEzK,SAASG,YAAYA,CAACC,OAAO,EAAE;EAAE,IAAIC,yBAAyB,GAAGC,yBAAyB,CAAC,CAAC;EAAE,OAAO,SAASC,oBAAoBA,CAAA,EAAG;IAAE,IAAIC,KAAK,GAAGf,eAAe,CAACW,OAAO,CAAC;MAAEK,MAAM;IAAE,IAAIJ,yBAAyB,EAAE;MAAE,IAAIK,SAAS,GAAGjB,eAAe,CAAC,IAAI,CAAC,CAAC3C,WAAW;MAAE2D,MAAM,GAAG7B,OAAO,CAAC+B,SAAS,CAACH,KAAK,EAAEnB,SAAS,EAAEqB,SAAS,CAAC;IAAE,CAAC,MAAM;MAAED,MAAM,GAAGD,KAAK,CAAClB,KAAK,CAAC,IAAI,EAAED,SAAS,CAAC;IAAE;IAAE,OAAOuB,0BAA0B,CAAC,IAAI,EAAEH,MAAM,CAAC;EAAE,CAAC;AAAE;AAExa,SAASG,0BAA0BA,CAACC,IAAI,EAAEzB,IAAI,EAAE;EAAE,IAAIA,IAAI,KAAK1C,OAAO,CAAC0C,IAAI,CAAC,KAAK,QAAQ,IAAI,OAAOA,IAAI,KAAK,UAAU,CAAC,EAAE;IAAE,OAAOA,IAAI;EAAE,CAAC,MAAM,IAAIA,IAAI,KAAK,KAAK,CAAC,EAAE;IAAE,MAAM,IAAIxB,SAAS,CAAC,0DAA0D,CAAC;EAAE;EAAE,OAAOkD,sBAAsB,CAACD,IAAI,CAAC;AAAE;AAE/R,SAASC,sBAAsBA,CAACD,IAAI,EAAE;EAAE,IAAIA,IAAI,KAAK,KAAK,CAAC,EAAE;IAAE,MAAM,IAAIE,cAAc,CAAC,2DAA2D,CAAC;EAAE;EAAE,OAAOF,IAAI;AAAE;AAErK,SAASP,yBAAyBA,CAAA,EAAG;EAAE,IAAI,OAAO1B,OAAO,KAAK,WAAW,IAAI,CAACA,OAAO,CAAC+B,SAAS,EAAE,OAAO,KAAK;EAAE,IAAI/B,OAAO,CAAC+B,SAAS,CAACK,IAAI,EAAE,OAAO,KAAK;EAAE,IAAI,OAAOC,KAAK,KAAK,UAAU,EAAE,OAAO,IAAI;EAAE,IAAI;IAAEC,OAAO,CAACnE,SAAS,CAACoE,OAAO,CAAC/B,IAAI,CAACR,OAAO,CAAC+B,SAAS,CAACO,OAAO,EAAE,EAAE,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC;IAAE,OAAO,IAAI;EAAE,CAAC,CAAC,OAAOE,CAAC,EAAE;IAAE,OAAO,KAAK;EAAE;AAAE;AAExU,SAAS3B,eAAeA,CAACM,CAAC,EAAE;EAAEN,eAAe,GAAGpC,MAAM,CAAC4C,cAAc,GAAG5C,MAAM,CAACgE,cAAc,GAAG,SAAS5B,eAAeA,CAACM,CAAC,EAAE;IAAE,OAAOA,CAAC,CAACG,SAAS,IAAI7C,MAAM,CAACgE,cAAc,CAACtB,CAAC,CAAC;EAAE,CAAC;EAAE,OAAON,eAAe,CAACM,CAAC,CAAC;AAAE;AAE5M,SAASuB,UAAU,QAAQ,mBAAmB;AAC9C,SAASC,UAAU,QAAQ,0BAA0B;AACrD,OAAOC,SAAS,MAAM,iBAAiB;AACvC,SAASC,YAAY,QAAQ,sCAAsC;AACnE,OAAO,IAAIC,UAAU,GAAG,eAAe;AACvC,OAAO,IAAIC,eAAe,GAAG,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAIC,aAAa,GAAG,aAAa,UAAUC,WAAW,EAAE;EAC7DnC,SAAS,CAACkC,aAAa,EAAEC,WAAW,CAAC;EAErC,IAAIC,MAAM,GAAG3B,YAAY,CAACyB,aAAa,CAAC;EAExC,SAASA,aAAaA,CAACG,WAAW,EAAE;IAClC,IAAIC,KAAK;IAETvE,eAAe,CAAC,IAAI,EAAEmE,aAAa,CAAC;IAEpCI,KAAK,GAAGF,MAAM,CAAC1C,IAAI,CAAC,IAAI,EAAE2C,WAAW,CAAC;IACtC;AACJ;AACA;AACA;AACA;AACA;;IAEIC,KAAK,CAACC,SAAS,GAAG,IAAI;IACtB,OAAOD,KAAK;EACd;EACA;AACF;AACA;AACA;AACA;AACA;;EAGExD,YAAY,CAACoD,aAAa,EAAE,CAAC;IAC3BrD,GAAG,EAAE,WAAW;IAChBf,KAAK,EAAE,SAAS0E,SAASA,CAAA,EAAG;MAC1B,OAAO,CAAC,CAAC,IAAI,CAACC,GAAG,CAACC,WAAW,CAAC,CAAC,CAACV,UAAU,CAAC;IAC7C;IACA;AACJ;AACA;EAEE,CAAC,EAAE;IACDnD,GAAG,EAAE,cAAc;IACnBf,KAAK,EAAE,SAAS6E,YAAYA,CAAA,EAAG;MAC7B,IAAIC,MAAM,GAAG,IAAI;MAEjB,IAAI,IAAI,CAACC,OAAO,EAAE;QAChB;MACF;MAEA,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACL,GAAG,CAACC,WAAW,CAAC,CAAC,CAACV,UAAU,CAAC;MAClD,IAAI,CAACO,SAAS,GAAG,IAAIT,SAAS,CAAC,IAAI,EAAE,IAAI,CAACgB,QAAQ,CAAC;MACnD,IAAI,CAACC,OAAO,CAAC,WAAW,EAAE,YAAY;QACpC,OAAOH,MAAM,CAACI,WAAW,CAACpD,KAAK,CAACgD,MAAM,EAAEjD,SAAS,CAAC;MACpD,CAAC,CAAC;MACF,IAAI,CAACoD,OAAO,CAAC,aAAa,EAAE,YAAY;QACtC,OAAOH,MAAM,CAACK,aAAa,CAACrD,KAAK,CAACgD,MAAM,EAAEjD,SAAS,CAAC;MACtD,CAAC,CAAC;MACF,IAAI,CAACoD,OAAO,CAAC,iBAAiB,EAAE,UAAUG,KAAK,EAAEC,MAAM,EAAEC,MAAM,EAAE;QAC/D,OAAOR,MAAM,CAACL,SAAS,CAACc,mCAAmC,CAAC,YAAY,EAAEH,KAAK,EAAEC,MAAM,EAAE,IAAI,EAAEC,MAAM,CAAC;MACxG,CAAC,CAAC,CAAC,CAAC;;MAEJ,IAAI,CAACL,OAAO,CAAC,iBAAiB,EAAE,UAAUG,KAAK,EAAEC,MAAM,EAAEC,MAAM,EAAE;QAC/D,OAAOR,MAAM,CAACL,SAAS,CAACc,mCAAmC,CAAC,YAAY,EAAEH,KAAK,EAAEC,MAAM,EAAE,IAAI,EAAEC,MAAM,CAAC;MACxG,CAAC,CAAC,CAAC,CAAC;;MAEJ,IAAI,CAACL,OAAO,CAAC,iBAAiB,EAAE,YAAY;QAC1C,IAAIO,gBAAgB;QAEpB,KAAK,IAAIC,IAAI,GAAG5D,SAAS,CAACpB,MAAM,EAAEiF,IAAI,GAAG,IAAIC,KAAK,CAACF,IAAI,CAAC,EAAEG,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGH,IAAI,EAAEG,IAAI,EAAE,EAAE;UACvFF,IAAI,CAACE,IAAI,CAAC,GAAG/D,SAAS,CAAC+D,IAAI,CAAC;QAC9B;QAEA,OAAO,CAACJ,gBAAgB,GAAGV,MAAM,CAACL,SAAS,EAAEc,mCAAmC,CAACzD,KAAK,CAAC0D,gBAAgB,EAAE,CAAC,YAAY,CAAC,CAACK,MAAM,CAACH,IAAI,CAAC,CAAC;MACvI,CAAC,CAAC;MACF,IAAI,CAACT,OAAO,CAAC,iBAAiB,EAAE,YAAY;QAC1C,IAAIa,iBAAiB;QAErB,KAAK,IAAIC,KAAK,GAAGlE,SAAS,CAACpB,MAAM,EAAEiF,IAAI,GAAG,IAAIC,KAAK,CAACI,KAAK,CAAC,EAAEC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGD,KAAK,EAAEC,KAAK,EAAE,EAAE;UAC7FN,IAAI,CAACM,KAAK,CAAC,GAAGnE,SAAS,CAACmE,KAAK,CAAC;QAChC;QAEA,OAAO,CAACF,iBAAiB,GAAGhB,MAAM,CAACL,SAAS,EAAEc,mCAAmC,CAACzD,KAAK,CAACgE,iBAAiB,EAAE,CAAC,YAAY,CAAC,CAACD,MAAM,CAACH,IAAI,CAAC,CAAC;MACzI,CAAC,CAAC;MACF,IAAI,CAACT,OAAO,CAAC,gBAAgB,EAAE,UAAUG,KAAK,EAAEC,MAAM,EAAEC,MAAM,EAAE;QAC9D,OAAOR,MAAM,CAACL,SAAS,CAACwB,kCAAkC,CAAC,YAAY,EAAEb,KAAK,EAAEC,MAAM,EAAE,IAAI,EAAEC,MAAM,CAAC;MACvG,CAAC,CAAC,CAAC,CAAC;;MAEJ,IAAI,CAACL,OAAO,CAAC,gBAAgB,EAAE,UAAUG,KAAK,EAAEC,MAAM,EAAEC,MAAM,EAAE;QAC9D,OAAOR,MAAM,CAACL,SAAS,CAACwB,kCAAkC,CAAC,YAAY,EAAEb,KAAK,EAAEC,MAAM,EAAE,IAAI,EAAEC,MAAM,CAAC;MACvG,CAAC,CAAC,CAAC,CAAC;;MAEJ,IAAI,CAACL,OAAO,CAAC,gBAAgB,EAAE,YAAY;QACzC,IAAIiB,iBAAiB;QAErB,KAAK,IAAIC,KAAK,GAAGtE,SAAS,CAACpB,MAAM,EAAEiF,IAAI,GAAG,IAAIC,KAAK,CAACQ,KAAK,CAAC,EAAEC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGD,KAAK,EAAEC,KAAK,EAAE,EAAE;UAC7FV,IAAI,CAACU,KAAK,CAAC,GAAGvE,SAAS,CAACuE,KAAK,CAAC;QAChC;QAEA,OAAO,CAACF,iBAAiB,GAAGpB,MAAM,CAACL,SAAS,EAAEwB,kCAAkC,CAACnE,KAAK,CAACoE,iBAAiB,EAAE,CAAC,YAAY,CAAC,CAACL,MAAM,CAACH,IAAI,CAAC,CAAC;MACxI,CAAC,CAAC;MACF,IAAI,CAACT,OAAO,CAAC,gBAAgB,EAAE,YAAY;QACzC,IAAIoB,iBAAiB;QAErB,KAAK,IAAIC,KAAK,GAAGzE,SAAS,CAACpB,MAAM,EAAEiF,IAAI,GAAG,IAAIC,KAAK,CAACW,KAAK,CAAC,EAAEC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGD,KAAK,EAAEC,KAAK,EAAE,EAAE;UAC7Fb,IAAI,CAACa,KAAK,CAAC,GAAG1E,SAAS,CAAC0E,KAAK,CAAC;QAChC;QAEA,OAAO,CAACF,iBAAiB,GAAGvB,MAAM,CAACL,SAAS,EAAEwB,kCAAkC,CAACnE,KAAK,CAACuE,iBAAiB,EAAE,CAAC,YAAY,CAAC,CAACR,MAAM,CAACH,IAAI,CAAC,CAAC;MACxI,CAAC,CAAC;MACF,IAAI,CAACT,OAAO,CAAC,cAAc,EAAE,YAAY;QACvC,OAAOH,MAAM,CAAC0B,cAAc,CAAC1E,KAAK,CAACgD,MAAM,EAAEjD,SAAS,CAAC;MACvD,CAAC,CAAC;MAEFV,IAAI,CAACc,eAAe,CAACmC,aAAa,CAAC7E,SAAS,CAAC,EAAE,cAAc,EAAE,IAAI,CAAC,CAACqC,IAAI,CAAC,IAAI,CAAC;IACjF;IACA;AACJ;AACA;EAEE,CAAC,EAAE;IACDb,GAAG,EAAE,eAAe;IACpBf,KAAK,EAAE,SAASyG,aAAaA,CAAA,EAAG;MAC9B,IAAI,CAAChC,SAAS,GAAG,IAAI;MACrB,IAAI,CAACO,QAAQ,GAAG,IAAI;MACpB,IAAI,CAAC0B,eAAe,GAAG,IAAI;IAC7B;IACA;AACJ;AACA;AACA;AACA;AACA;EAEE,CAAC,EAAE;IACD3F,GAAG,EAAE,WAAW;IAChBf,KAAK,EAAE,SAAS2G,SAASA,CAACC,QAAQ,EAAE;MAClC,QAAQA,QAAQ,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC;QACjC,KAAK,KAAK;UACRF,QAAQ,CAAC3D,MAAM,GAAG,IAAI,CAAC8D,YAAY,CAACH,QAAQ,CAAC;UAC7C;QAEF,KAAK,KAAK;UACRA,QAAQ,CAAC3D,MAAM,GAAG,IAAI,CAAC+D,eAAe,CAACJ,QAAQ,EAAEA,QAAQ,CAACC,IAAI,CAAC;UAC/D;QAEF,KAAK,KAAK;UACRD,QAAQ,CAAC3D,MAAM,GAAG,IAAI,CAAC+D,eAAe,CAACJ,QAAQ,EAAEA,QAAQ,CAACC,IAAI,CAAC;UAC/D;QAEF,KAAK,OAAO;UACVD,QAAQ,CAAC3D,MAAM,GAAG,IAAI,CAACgE,YAAY,CAACL,QAAQ,CAAC;UAC7C;QAEF,KAAK,SAAS;UACZA,QAAQ,CAAC3D,MAAM,GAAG,IAAI,CAACiE,gBAAgB,CAACN,QAAQ,CAAC;UACjD;QAEF,KAAK,QAAQ;UACXA,QAAQ,CAAC3D,MAAM,GAAG2D,QAAQ,CAACO,cAAc,CAACvF,IAAI,CAAC,IAAI,EAAEgF,QAAQ,CAAC;UAC9D;QAEF;UACE;MACJ;IACF;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;EAEE,CAAC,EAAE;IACD7F,GAAG,EAAE,cAAc;IACnBf,KAAK,EAAE,SAAS+G,YAAYA,CAACH,QAAQ,EAAE;MACrC,IAAIQ,MAAM,GAAG,IAAI;MAEjB,IAAIC,GAAG,GAAG,CAAC;MACXtD,UAAU,CAAC6C,QAAQ,CAACU,MAAM,EAAE,UAAUC,KAAK,EAAE;QAC3CF,GAAG,IAAID,MAAM,CAACI,aAAa,CAACD,KAAK,EAAEX,QAAQ,CAACa,YAAY,CAAC;MAC3D,CAAC,CAAC;MACF,OAAOJ,GAAG;IACZ;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EAEE,CAAC,EAAE;IACDtG,GAAG,EAAE,eAAe;IACpBf,KAAK,EAAE,SAASwH,aAAaA,CAACE,QAAQ,EAAEC,GAAG,EAAE;MAC3C,IAAIN,GAAG,GAAG,CAAC;MACX,IAAI7G,CAAC,GAAGkH,QAAQ,CAAC,CAAC,CAAC,IAAIA,QAAQ,CAAC,CAAC,CAAC;MAClC,IAAIE,SAAS,GAAG,IAAI;MACpB,IAAIC,yBAAyB,GAAG,CAAC;MAEjC,GAAG;QACDD,SAAS,GAAG,IAAI,CAACE,YAAY,CAACtH,CAAC,EAAEmH,GAAG,CAAC,IAAI,CAAC;QAC1C,IAAII,aAAa,GAAG,CAAC,EAAE,CAAClC,MAAM,CAAC+B,SAAS,CAAC,CAACI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,EAAEvH,MAAM,IAAI,CAAC;QAE1E,IAAIsH,aAAa,GAAGF,yBAAyB,EAAE;UAC7CA,yBAAyB,GAAGE,aAAa;QAC3C;QAEAV,GAAG,IAAIO,SAAS,IAAI,CAAC;QACrBpH,CAAC,IAAI,CAAC;MACR,CAAC,QAAQA,CAAC,IAAIkH,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC;;MAG5B,OAAOO,IAAI,CAACC,KAAK,CAACb,GAAG,GAAGY,IAAI,CAACE,GAAG,CAAC,EAAE,EAAEN,yBAAyB,CAAC,CAAC,GAAGI,IAAI,CAACE,GAAG,CAAC,EAAE,EAAEN,yBAAyB,CAAC;IAC5G;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EAEE,CAAC,EAAE;IACD9G,GAAG,EAAE,iBAAiB;IACtBf,KAAK,EAAE,SAASgH,eAAeA,CAACJ,QAAQ,EAAEC,IAAI,EAAE;MAC9C,IAAIuB,MAAM,GAAG,IAAI;MAEjB,IAAInF,MAAM,GAAG,IAAI;MACjBc,UAAU,CAAC6C,QAAQ,CAACU,MAAM,EAAE,UAAUC,KAAK,EAAE;QAC3C,IAAIc,aAAa,GAAGD,MAAM,CAACE,gBAAgB,CAACf,KAAK,EAAEX,QAAQ,CAACa,YAAY,EAAEZ,IAAI,CAAC;QAE/E,IAAI5D,MAAM,KAAK,IAAI,IAAIoF,aAAa,KAAK,IAAI,EAAE;UAC7CpF,MAAM,GAAGoF,aAAa;QACxB;QAEA,IAAIA,aAAa,KAAK,IAAI,EAAE;UAC1B,QAAQxB,IAAI;YACV,KAAK,KAAK;cACR5D,MAAM,GAAGgF,IAAI,CAACM,GAAG,CAACtF,MAAM,EAAEoF,aAAa,CAAC;cACxC;YAEF,KAAK,KAAK;cACRpF,MAAM,GAAGgF,IAAI,CAACO,GAAG,CAACvF,MAAM,EAAEoF,aAAa,CAAC;cACxC;YAEF;cACE;UACJ;QACF;MACF,CAAC,CAAC;MACF,OAAOpF,MAAM,KAAK,IAAI,GAAG,iBAAiB,GAAGA,MAAM;IACrD;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAEE,CAAC,EAAE;IACDlC,GAAG,EAAE,kBAAkB;IACvBf,KAAK,EAAE,SAASsI,gBAAgBA,CAACZ,QAAQ,EAAEC,GAAG,EAAEd,IAAI,EAAE;MACpD,IAAI5D,MAAM,GAAG,IAAI;MACjB,IAAIzC,CAAC,GAAGkH,QAAQ,CAAC,CAAC,CAAC,IAAIA,QAAQ,CAAC,CAAC,CAAC;MAClC,IAAIE,SAAS;MAEb,GAAG;QACDA,SAAS,GAAG,IAAI,CAACE,YAAY,CAACtH,CAAC,EAAEmH,GAAG,CAAC,IAAI,IAAI;QAE7C,IAAI1E,MAAM,KAAK,IAAI,EAAE;UACnBA,MAAM,GAAG2E,SAAS;QACpB,CAAC,MAAM,IAAIA,SAAS,KAAK,IAAI,EAAE;UAC7B,QAAQf,IAAI;YACV,KAAK,KAAK;cACR5D,MAAM,GAAGgF,IAAI,CAACM,GAAG,CAACtF,MAAM,EAAE2E,SAAS,CAAC;cACpC;YAEF,KAAK,KAAK;cACR3E,MAAM,GAAGgF,IAAI,CAACO,GAAG,CAACvF,MAAM,EAAE2E,SAAS,CAAC;cACpC;YAEF;cACE;UACJ;QACF;QAEApH,CAAC,IAAI,CAAC;MACR,CAAC,QAAQA,CAAC,IAAIkH,QAAQ,CAAC,CAAC,CAAC;MAEzB,OAAOzE,MAAM;IACf;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EAEE,CAAC,EAAE;IACDlC,GAAG,EAAE,YAAY;IACjBf,KAAK,EAAE,SAASyI,UAAUA,CAACf,QAAQ,EAAEC,GAAG,EAAE;MACxC,IAAIC,SAAS;MACb,IAAIc,OAAO,GAAG,CAAC;MACf,IAAIlI,CAAC,GAAGkH,QAAQ,CAAC,CAAC,CAAC,IAAIA,QAAQ,CAAC,CAAC,CAAC;MAElC,GAAG;QACDE,SAAS,GAAG,IAAI,CAACE,YAAY,CAACtH,CAAC,EAAEmH,GAAG,CAAC;QAErC,IAAI,CAACC,SAAS,EAAE;UACdc,OAAO,IAAI,CAAC;QACd;QAEAlI,CAAC,IAAI,CAAC;MACR,CAAC,QAAQA,CAAC,IAAIkH,QAAQ,CAAC,CAAC,CAAC;MAEzB,OAAOgB,OAAO;IAChB;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;EAEE,CAAC,EAAE;IACD3H,GAAG,EAAE,cAAc;IACnBf,KAAK,EAAE,SAASiH,YAAYA,CAACL,QAAQ,EAAE;MACrC,IAAI+B,MAAM,GAAG,IAAI;MAEjB,IAAI1F,MAAM,GAAG,CAAC;MACd,IAAIqE,MAAM,GAAGV,QAAQ,CAACU,MAAM;MAC5BvD,UAAU,CAACuD,MAAM,EAAE,UAAUC,KAAK,EAAE;QAClC,IAAIqB,OAAO,GAAGrB,KAAK,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,GAAG,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC;QAE/D,IAAIsB,UAAU,GAAGF,MAAM,CAACF,UAAU,CAAClB,KAAK,EAAEX,QAAQ,CAACa,YAAY,CAAC;QAEhExE,MAAM,IAAI2F,OAAO;QACjB3F,MAAM,IAAI4F,UAAU;MACtB,CAAC,CAAC;MACF,OAAO5F,MAAM;IACf;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;EAEE,CAAC,EAAE;IACDlC,GAAG,EAAE,kBAAkB;IACvBf,KAAK,EAAE,SAASkH,gBAAgBA,CAACN,QAAQ,EAAE;MACzC,IAAIS,GAAG,GAAG,IAAI,CAACN,YAAY,CAACH,QAAQ,CAAC;MACrC,IAAIkC,YAAY,GAAG,IAAI,CAAC7B,YAAY,CAACL,QAAQ,CAAC;MAC9C,OAAOS,GAAG,GAAGyB,YAAY;IAC3B;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EAEE,CAAC,EAAE;IACD/H,GAAG,EAAE,cAAc;IACnBf,KAAK,EAAE,SAAS8H,YAAYA,CAACiB,GAAG,EAAEpB,GAAG,EAAE;MACrC,IAAIqB,cAAc,GAAG,IAAI,CAACrE,GAAG,CAACsE,WAAW,CAACF,GAAG,CAAC;MAC9C,IAAIG,iBAAiB,GAAG,IAAI,CAACvE,GAAG,CAACwE,cAAc,CAACxB,GAAG,CAAC;MACpD,IAAIC,SAAS,GAAG,IAAI,CAACjD,GAAG,CAACyE,mBAAmB,CAACL,GAAG,EAAEpB,GAAG,CAAC;MACtD,IAAI0B,aAAa,GAAG,EAAE;MAEtB,IAAIL,cAAc,KAAK,IAAI,IAAIE,iBAAiB,KAAK,IAAI,EAAE;QACzDG,aAAa,GAAG,IAAI,CAAC1E,GAAG,CAAC2E,WAAW,CAACN,cAAc,EAAEE,iBAAiB,CAAC,CAACK,SAAS,IAAI,EAAE;MACzF;MAEA,IAAIF,aAAa,CAACG,OAAO,CAAC,qBAAqB,CAAC,GAAG,CAAC,CAAC,EAAE;QACrD,OAAO,IAAI;MACb;MAEA,IAAI,IAAI,CAAC/E,SAAS,CAACiC,eAAe,CAAC+C,YAAY,EAAE;QAC/C,IAAI,OAAO7B,SAAS,KAAK,QAAQ,EAAE;UACjCA,SAAS,GAAGA,SAAS,CAAC8B,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;QACzC;QAEA9B,SAAS,GAAG+B,UAAU,CAAC/B,SAAS,CAAC;MACnC;MAEA,IAAIgC,KAAK,CAAChC,SAAS,CAAC,EAAE;QACpB,IAAI,CAAC,IAAI,CAACnD,SAAS,CAACiC,eAAe,CAACmD,sBAAsB,EAAE;UAC1D,MAAM,IAAIC,KAAK,CAAC7F,YAAY,CAACzE,eAAe,KAAKA,eAAe,GAAGC,sBAAsB,CAAC,CAAC,iCAAiC,EAAE,IAAI,EAAE,sEAAsE,CAAC,EAAE,CAAC,iCAAiC,EAAE,IAAI,EAAE,0EAA0E,CAAC,CAAC,CAAC,EAAEsJ,GAAG,EAAEpB,GAAG,CAAC,CAAC;QAClV;MACF;MAEA,OAAOC,SAAS;IAClB;IACA;AACJ;AACA;AACA;AACA;EAEE,CAAC,EAAE;IACD7G,GAAG,EAAE,aAAa;IAClBf,KAAK,EAAE,SAASkF,WAAWA,CAAA,EAAG;MAC5B,IAAI,CAACT,SAAS,CAACA,SAAS,GAAG,IAAI,CAACA,SAAS,CAACsF,aAAa,CAAC,CAAC;MACzD,IAAI,CAACtF,SAAS,CAACuF,mBAAmB,CAAC,IAAI,CAAC;IAC1C;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;EAEE,CAAC,EAAE;IACDjJ,GAAG,EAAE,eAAe;IACpBf,KAAK,EAAE,SAASmF,aAAaA,CAAC8E,OAAO,EAAE3E,MAAM,EAAE;MAC7C,IAAI2E,OAAO,IAAI3E,MAAM,KAAK,qBAAqB,IAAIA,MAAM,KAAK,mBAAmB,IAAIA,MAAM,KAAK,UAAU,EAAE;QAC1G,IAAI,CAACb,SAAS,CAACyF,uBAAuB,CAACD,OAAO,CAAC;MACjD;IACF;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EAEE,CAAC,EAAE;IACDlJ,GAAG,EAAE,gBAAgB;IACrBf,KAAK,EAAE,SAASwG,cAAcA,CAAC2D,IAAI,EAAEC,UAAU,EAAE;MAC/C,IAAI,CAAC3F,SAAS,CAACc,mCAAmC,CAAC,UAAU,EAAE4E,IAAI,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC1J,MAAM,EAAE0J,IAAI,EAAE,IAAI,CAACE,UAAU,CAAC;MAC3G,IAAI,CAAC5F,SAAS,CAACwB,kCAAkC,CAAC,UAAU,EAAEmE,UAAU,EAAED,IAAI,CAAC1J,MAAM,EAAE0J,IAAI,EAAE,IAAI,CAACE,UAAU,CAAC;IAC/G;EACF,CAAC,CAAC,EAAE,CAAC;IACHtJ,GAAG,EAAE,YAAY;IACjBM,GAAG,EAAE,SAASA,GAAGA,CAAA,EAAG;MAClB,OAAO6C,UAAU;IACnB;EACF,CAAC,EAAE;IACDnD,GAAG,EAAE,iBAAiB;IACtBM,GAAG,EAAE,SAASA,GAAGA,CAAA,EAAG;MAClB,OAAO8C,eAAe;IACxB;EACF,CAAC,CAAC,CAAC;EAEH,OAAOC,aAAa;AACtB,CAAC,CAACN,UAAU,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
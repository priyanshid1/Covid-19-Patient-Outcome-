{"ast":null,"code":"function _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nimport { isEmpty } from \"./../helpers/mixed.mjs\";\nvar ESCAPED_HTML_CHARS = {\n  '&nbsp;': '\\x20',\n  '&amp;': '&',\n  '&lt;': '<',\n  '&gt;': '>'\n};\nvar regEscapedChars = new RegExp(Object.keys(ESCAPED_HTML_CHARS).map(function (key) {\n  return \"(\".concat(key, \")\");\n}).join('|'), 'gi');\n/**\n * Verifies if node is an HTMLTable element.\n *\n * @param {Node} element Node to verify if it's an HTMLTable.\n * @returns {boolean}\n */\n\nfunction isHTMLTable(element) {\n  return (element && element.nodeName || '') === 'TABLE';\n}\n/**\n * Converts Handsontable into HTMLTableElement.\n *\n * @param {Core} instance The Handsontable instance.\n * @returns {string} OuterHTML of the HTMLTableElement.\n */\n\nexport function instanceToHTML(instance) {\n  var hasColumnHeaders = instance.hasColHeaders();\n  var hasRowHeaders = instance.hasRowHeaders();\n  var coords = [hasColumnHeaders ? -1 : 0, hasRowHeaders ? -1 : 0, instance.countRows() - 1, instance.countCols() - 1];\n  var data = instance.getData.apply(instance, coords);\n  var countRows = data.length;\n  var countCols = countRows > 0 ? data[0].length : 0;\n  var TABLE = ['<table>', '</table>'];\n  var THEAD = hasColumnHeaders ? ['<thead>', '</thead>'] : [];\n  var TBODY = ['<tbody>', '</tbody>'];\n  var rowModifier = hasRowHeaders ? 1 : 0;\n  var columnModifier = hasColumnHeaders ? 1 : 0;\n  for (var row = 0; row < countRows; row += 1) {\n    var isColumnHeadersRow = hasColumnHeaders && row === 0;\n    var CELLS = [];\n    for (var column = 0; column < countCols; column += 1) {\n      var isRowHeadersColumn = !isColumnHeadersRow && hasRowHeaders && column === 0;\n      var cell = '';\n      if (isColumnHeadersRow) {\n        cell = \"<th>\".concat(instance.getColHeader(column - rowModifier), \"</th>\");\n      } else if (isRowHeadersColumn) {\n        cell = \"<th>\".concat(instance.getRowHeader(row - columnModifier), \"</th>\");\n      } else {\n        var cellData = data[row][column];\n        var _instance$getCellMeta = instance.getCellMeta(row - columnModifier, column - rowModifier),\n          hidden = _instance$getCellMeta.hidden,\n          rowspan = _instance$getCellMeta.rowspan,\n          colspan = _instance$getCellMeta.colspan;\n        if (!hidden) {\n          var attrs = [];\n          if (rowspan) {\n            attrs.push(\"rowspan=\\\"\".concat(rowspan, \"\\\"\"));\n          }\n          if (colspan) {\n            attrs.push(\"colspan=\\\"\".concat(colspan, \"\\\"\"));\n          }\n          if (isEmpty(cellData)) {\n            cell = \"<td \".concat(attrs.join(' '), \"></td>\");\n          } else {\n            var value = cellData.toString().replace('<', '&lt;').replace('>', '&gt;').replace(/(<br(\\s*|\\/)>(\\r\\n|\\n)?|\\r\\n|\\n)/g, '<br>\\r\\n').replace(/\\x20/gi, '&nbsp;').replace(/\\t/gi, '&#9;');\n            cell = \"<td \".concat(attrs.join(' '), \">\").concat(value, \"</td>\");\n          }\n        }\n      }\n      CELLS.push(cell);\n    }\n    var TR = ['<tr>'].concat(CELLS, ['</tr>']).join('');\n    if (isColumnHeadersRow) {\n      THEAD.splice(1, 0, TR);\n    } else {\n      TBODY.splice(-1, 0, TR);\n    }\n  }\n  TABLE.splice(1, 0, THEAD.join(''), TBODY.join(''));\n  return TABLE.join('');\n}\n/**\n * Converts 2D array into HTMLTableElement.\n *\n * @param {Array} input Input array which will be converted to HTMLTable.\n * @returns {string} OuterHTML of the HTMLTableElement.\n */\n// eslint-disable-next-line no-restricted-globals\n\nexport function _dataToHTML(input) {\n  var inputLen = input.length;\n  var result = ['<table>'];\n  for (var row = 0; row < inputLen; row += 1) {\n    var rowData = input[row];\n    var columnsLen = rowData.length;\n    var columnsResult = [];\n    if (row === 0) {\n      result.push('<tbody>');\n    }\n    for (var column = 0; column < columnsLen; column += 1) {\n      var cellData = rowData[column];\n      var parsedCellData = isEmpty(cellData) ? '' : cellData.toString().replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/(<br(\\s*|\\/)>(\\r\\n|\\n)?|\\r\\n|\\n)/g, '<br>\\r\\n').replace(/\\x20/gi, '&nbsp;').replace(/\\t/gi, '&#9;');\n      columnsResult.push(\"<td>\".concat(parsedCellData, \"</td>\"));\n    }\n    result.push.apply(result, ['<tr>'].concat(columnsResult, ['</tr>']));\n    if (row + 1 === inputLen) {\n      result.push('</tbody>');\n    }\n  }\n  result.push('</table>');\n  return result.join('');\n}\n/**\n * Converts HTMLTable or string into Handsontable configuration object.\n *\n * @param {Element|string} element Node element which should contain `<table>...</table>`.\n * @param {Document} [rootDocument] The document window owner.\n * @returns {object} Return configuration object. Contains keys as DefaultSettings.\n */\n// eslint-disable-next-line no-restricted-globals\n\nexport function htmlToGridSettings(element) {\n  var rootDocument = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : document;\n  var settingsObj = {};\n  var fragment = rootDocument.createDocumentFragment();\n  var tempElem = rootDocument.createElement('div');\n  fragment.appendChild(tempElem);\n  var checkElement = element;\n  if (typeof checkElement === 'string') {\n    var escapedAdjacentHTML = checkElement.replace(/<td\\b[^>]*?>([\\s\\S]*?)<\\/\\s*td>/g, function (cellFragment) {\n      var openingTag = cellFragment.match(/<td\\b[^>]*?>/g)[0];\n      var cellValue = cellFragment.substring(openingTag.length, cellFragment.lastIndexOf('<')).replace(/(<(?!br)([^>]+)>)/gi, '');\n      var closingTag = '</td>';\n      return \"\".concat(openingTag).concat(cellValue).concat(closingTag);\n    });\n    tempElem.insertAdjacentHTML('afterbegin', \"\".concat(escapedAdjacentHTML));\n    checkElement = tempElem.querySelector('table');\n  }\n  if (!checkElement || !isHTMLTable(checkElement)) {\n    return;\n  }\n  var generator = tempElem.querySelector('meta[name$=\"enerator\"]');\n  var hasRowHeaders = checkElement.querySelector('tbody th') !== null;\n  var trElement = checkElement.querySelector('tr');\n  var countCols = !trElement ? 0 : Array.from(trElement.cells).reduce(function (cols, cell) {\n    return cols + cell.colSpan;\n  }, 0) - (hasRowHeaders ? 1 : 0);\n  var fixedRowsBottom = checkElement.tFoot && Array.from(checkElement.tFoot.rows) || [];\n  var fixedRowsTop = [];\n  var hasColHeaders = false;\n  var thRowsLen = 0;\n  var countRows = 0;\n  if (checkElement.tHead) {\n    var thRows = Array.from(checkElement.tHead.rows).filter(function (tr) {\n      var isDataRow = tr.querySelector('td') !== null;\n      if (isDataRow) {\n        fixedRowsTop.push(tr);\n      }\n      return !isDataRow;\n    });\n    thRowsLen = thRows.length;\n    hasColHeaders = thRowsLen > 0;\n    if (thRowsLen > 1) {\n      settingsObj.nestedHeaders = Array.from(thRows).reduce(function (rows, row) {\n        var headersRow = Array.from(row.cells).reduce(function (headers, header, currentIndex) {\n          if (hasRowHeaders && currentIndex === 0) {\n            return headers;\n          }\n          var colspan = header.colSpan,\n            innerHTML = header.innerHTML;\n          var nextHeader = colspan > 1 ? {\n            label: innerHTML,\n            colspan: colspan\n          } : innerHTML;\n          headers.push(nextHeader);\n          return headers;\n        }, []);\n        rows.push(headersRow);\n        return rows;\n      }, []);\n    } else if (hasColHeaders) {\n      settingsObj.colHeaders = Array.from(thRows[0].children).reduce(function (headers, header, index) {\n        if (hasRowHeaders && index === 0) {\n          return headers;\n        }\n        headers.push(header.innerHTML);\n        return headers;\n      }, []);\n    }\n  }\n  if (fixedRowsTop.length) {\n    settingsObj.fixedRowsTop = fixedRowsTop.length;\n  }\n  if (fixedRowsBottom.length) {\n    settingsObj.fixedRowsBottom = fixedRowsBottom.length;\n  }\n  var dataRows = [].concat(fixedRowsTop, _toConsumableArray(Array.from(checkElement.tBodies).reduce(function (sections, section) {\n    sections.push.apply(sections, _toConsumableArray(Array.from(section.rows)));\n    return sections;\n  }, [])), _toConsumableArray(fixedRowsBottom));\n  countRows = dataRows.length;\n  var dataArr = new Array(countRows);\n  for (var r = 0; r < countRows; r++) {\n    dataArr[r] = new Array(countCols);\n  }\n  var mergeCells = [];\n  var rowHeaders = [];\n  for (var row = 0; row < countRows; row++) {\n    var tr = dataRows[row];\n    var cells = Array.from(tr.cells);\n    var cellsLen = cells.length;\n    for (var cellId = 0; cellId < cellsLen; cellId++) {\n      var cell = cells[cellId];\n      var nodeName = cell.nodeName,\n        innerHTML = cell.innerHTML,\n        rowspan = cell.rowSpan,\n        colspan = cell.colSpan;\n      var col = dataArr[row].findIndex(function (value) {\n        return value === void 0;\n      });\n      if (nodeName === 'TD') {\n        if (rowspan > 1 || colspan > 1) {\n          for (var rstart = row; rstart < row + rowspan; rstart++) {\n            if (rstart < countRows) {\n              for (var cstart = col; cstart < col + colspan; cstart++) {\n                dataArr[rstart][cstart] = null;\n              }\n            }\n          }\n          var styleAttr = cell.getAttribute('style');\n          var ignoreMerge = styleAttr && styleAttr.includes('mso-ignore:colspan');\n          if (!ignoreMerge) {\n            mergeCells.push({\n              col: col,\n              row: row,\n              rowspan: rowspan,\n              colspan: colspan\n            });\n          }\n        }\n        var cellValue = '';\n        if (generator && /excel/gi.test(generator.content)) {\n          cellValue = innerHTML.replace(/[\\r\\n][\\x20]{0,2}/g, '\\x20').replace(/<br(\\s*|\\/)>[\\r\\n]?[\\x20]{0,3}/gim, '\\r\\n');\n        } else {\n          cellValue = innerHTML.replace(/<br(\\s*|\\/)>[\\r\\n]?/gim, '\\r\\n');\n        }\n        dataArr[row][col] = cellValue.replace(regEscapedChars, function (match) {\n          return ESCAPED_HTML_CHARS[match];\n        });\n      } else {\n        rowHeaders.push(innerHTML);\n      }\n    }\n  }\n  if (mergeCells.length) {\n    settingsObj.mergeCells = mergeCells;\n  }\n  if (rowHeaders.length) {\n    settingsObj.rowHeaders = rowHeaders;\n  }\n  if (dataArr.length) {\n    settingsObj.data = dataArr;\n  }\n  return settingsObj;\n}","map":{"version":3,"names":["_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","iter","Symbol","iterator","isArray","len","length","i","arr2","isEmpty","ESCAPED_HTML_CHARS","regEscapedChars","RegExp","keys","map","key","concat","join","isHTMLTable","element","nodeName","instanceToHTML","instance","hasColumnHeaders","hasColHeaders","hasRowHeaders","coords","countRows","countCols","data","getData","apply","TABLE","THEAD","TBODY","rowModifier","columnModifier","row","isColumnHeadersRow","CELLS","column","isRowHeadersColumn","cell","getColHeader","getRowHeader","cellData","_instance$getCellMeta","getCellMeta","hidden","rowspan","colspan","attrs","push","value","replace","TR","splice","_dataToHTML","input","inputLen","result","rowData","columnsLen","columnsResult","parsedCellData","htmlToGridSettings","rootDocument","arguments","undefined","document","settingsObj","fragment","createDocumentFragment","tempElem","createElement","appendChild","checkElement","escapedAdjacentHTML","cellFragment","openingTag","match","cellValue","substring","lastIndexOf","closingTag","insertAdjacentHTML","querySelector","generator","trElement","cells","reduce","cols","colSpan","fixedRowsBottom","tFoot","rows","fixedRowsTop","thRowsLen","tHead","thRows","filter","tr","isDataRow","nestedHeaders","headersRow","headers","header","currentIndex","innerHTML","nextHeader","label","colHeaders","children","index","dataRows","tBodies","sections","section","dataArr","r","mergeCells","rowHeaders","cellsLen","cellId","rowSpan","col","findIndex","rstart","cstart","styleAttr","getAttribute","ignoreMerge","includes","content"],"sources":["/Users/priyadeliwala/Desktop/sales-dashboard/node_modules/handsontable/utils/parseTable.mjs"],"sourcesContent":["function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/es.array.last-index-of.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { isEmpty } from \"./../helpers/mixed.mjs\";\nvar ESCAPED_HTML_CHARS = {\n  '&nbsp;': '\\x20',\n  '&amp;': '&',\n  '&lt;': '<',\n  '&gt;': '>'\n};\nvar regEscapedChars = new RegExp(Object.keys(ESCAPED_HTML_CHARS).map(function (key) {\n  return \"(\".concat(key, \")\");\n}).join('|'), 'gi');\n/**\n * Verifies if node is an HTMLTable element.\n *\n * @param {Node} element Node to verify if it's an HTMLTable.\n * @returns {boolean}\n */\n\nfunction isHTMLTable(element) {\n  return (element && element.nodeName || '') === 'TABLE';\n}\n/**\n * Converts Handsontable into HTMLTableElement.\n *\n * @param {Core} instance The Handsontable instance.\n * @returns {string} OuterHTML of the HTMLTableElement.\n */\n\n\nexport function instanceToHTML(instance) {\n  var hasColumnHeaders = instance.hasColHeaders();\n  var hasRowHeaders = instance.hasRowHeaders();\n  var coords = [hasColumnHeaders ? -1 : 0, hasRowHeaders ? -1 : 0, instance.countRows() - 1, instance.countCols() - 1];\n  var data = instance.getData.apply(instance, coords);\n  var countRows = data.length;\n  var countCols = countRows > 0 ? data[0].length : 0;\n  var TABLE = ['<table>', '</table>'];\n  var THEAD = hasColumnHeaders ? ['<thead>', '</thead>'] : [];\n  var TBODY = ['<tbody>', '</tbody>'];\n  var rowModifier = hasRowHeaders ? 1 : 0;\n  var columnModifier = hasColumnHeaders ? 1 : 0;\n\n  for (var row = 0; row < countRows; row += 1) {\n    var isColumnHeadersRow = hasColumnHeaders && row === 0;\n    var CELLS = [];\n\n    for (var column = 0; column < countCols; column += 1) {\n      var isRowHeadersColumn = !isColumnHeadersRow && hasRowHeaders && column === 0;\n      var cell = '';\n\n      if (isColumnHeadersRow) {\n        cell = \"<th>\".concat(instance.getColHeader(column - rowModifier), \"</th>\");\n      } else if (isRowHeadersColumn) {\n        cell = \"<th>\".concat(instance.getRowHeader(row - columnModifier), \"</th>\");\n      } else {\n        var cellData = data[row][column];\n\n        var _instance$getCellMeta = instance.getCellMeta(row - columnModifier, column - rowModifier),\n            hidden = _instance$getCellMeta.hidden,\n            rowspan = _instance$getCellMeta.rowspan,\n            colspan = _instance$getCellMeta.colspan;\n\n        if (!hidden) {\n          var attrs = [];\n\n          if (rowspan) {\n            attrs.push(\"rowspan=\\\"\".concat(rowspan, \"\\\"\"));\n          }\n\n          if (colspan) {\n            attrs.push(\"colspan=\\\"\".concat(colspan, \"\\\"\"));\n          }\n\n          if (isEmpty(cellData)) {\n            cell = \"<td \".concat(attrs.join(' '), \"></td>\");\n          } else {\n            var value = cellData.toString().replace('<', '&lt;').replace('>', '&gt;').replace(/(<br(\\s*|\\/)>(\\r\\n|\\n)?|\\r\\n|\\n)/g, '<br>\\r\\n').replace(/\\x20/gi, '&nbsp;').replace(/\\t/gi, '&#9;');\n            cell = \"<td \".concat(attrs.join(' '), \">\").concat(value, \"</td>\");\n          }\n        }\n      }\n\n      CELLS.push(cell);\n    }\n\n    var TR = ['<tr>'].concat(CELLS, ['</tr>']).join('');\n\n    if (isColumnHeadersRow) {\n      THEAD.splice(1, 0, TR);\n    } else {\n      TBODY.splice(-1, 0, TR);\n    }\n  }\n\n  TABLE.splice(1, 0, THEAD.join(''), TBODY.join(''));\n  return TABLE.join('');\n}\n/**\n * Converts 2D array into HTMLTableElement.\n *\n * @param {Array} input Input array which will be converted to HTMLTable.\n * @returns {string} OuterHTML of the HTMLTableElement.\n */\n// eslint-disable-next-line no-restricted-globals\n\nexport function _dataToHTML(input) {\n  var inputLen = input.length;\n  var result = ['<table>'];\n\n  for (var row = 0; row < inputLen; row += 1) {\n    var rowData = input[row];\n    var columnsLen = rowData.length;\n    var columnsResult = [];\n\n    if (row === 0) {\n      result.push('<tbody>');\n    }\n\n    for (var column = 0; column < columnsLen; column += 1) {\n      var cellData = rowData[column];\n      var parsedCellData = isEmpty(cellData) ? '' : cellData.toString().replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/(<br(\\s*|\\/)>(\\r\\n|\\n)?|\\r\\n|\\n)/g, '<br>\\r\\n').replace(/\\x20/gi, '&nbsp;').replace(/\\t/gi, '&#9;');\n      columnsResult.push(\"<td>\".concat(parsedCellData, \"</td>\"));\n    }\n\n    result.push.apply(result, ['<tr>'].concat(columnsResult, ['</tr>']));\n\n    if (row + 1 === inputLen) {\n      result.push('</tbody>');\n    }\n  }\n\n  result.push('</table>');\n  return result.join('');\n}\n/**\n * Converts HTMLTable or string into Handsontable configuration object.\n *\n * @param {Element|string} element Node element which should contain `<table>...</table>`.\n * @param {Document} [rootDocument] The document window owner.\n * @returns {object} Return configuration object. Contains keys as DefaultSettings.\n */\n// eslint-disable-next-line no-restricted-globals\n\nexport function htmlToGridSettings(element) {\n  var rootDocument = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : document;\n  var settingsObj = {};\n  var fragment = rootDocument.createDocumentFragment();\n  var tempElem = rootDocument.createElement('div');\n  fragment.appendChild(tempElem);\n  var checkElement = element;\n\n  if (typeof checkElement === 'string') {\n    var escapedAdjacentHTML = checkElement.replace(/<td\\b[^>]*?>([\\s\\S]*?)<\\/\\s*td>/g, function (cellFragment) {\n      var openingTag = cellFragment.match(/<td\\b[^>]*?>/g)[0];\n      var cellValue = cellFragment.substring(openingTag.length, cellFragment.lastIndexOf('<')).replace(/(<(?!br)([^>]+)>)/gi, '');\n      var closingTag = '</td>';\n      return \"\".concat(openingTag).concat(cellValue).concat(closingTag);\n    });\n    tempElem.insertAdjacentHTML('afterbegin', \"\".concat(escapedAdjacentHTML));\n    checkElement = tempElem.querySelector('table');\n  }\n\n  if (!checkElement || !isHTMLTable(checkElement)) {\n    return;\n  }\n\n  var generator = tempElem.querySelector('meta[name$=\"enerator\"]');\n  var hasRowHeaders = checkElement.querySelector('tbody th') !== null;\n  var trElement = checkElement.querySelector('tr');\n  var countCols = !trElement ? 0 : Array.from(trElement.cells).reduce(function (cols, cell) {\n    return cols + cell.colSpan;\n  }, 0) - (hasRowHeaders ? 1 : 0);\n  var fixedRowsBottom = checkElement.tFoot && Array.from(checkElement.tFoot.rows) || [];\n  var fixedRowsTop = [];\n  var hasColHeaders = false;\n  var thRowsLen = 0;\n  var countRows = 0;\n\n  if (checkElement.tHead) {\n    var thRows = Array.from(checkElement.tHead.rows).filter(function (tr) {\n      var isDataRow = tr.querySelector('td') !== null;\n\n      if (isDataRow) {\n        fixedRowsTop.push(tr);\n      }\n\n      return !isDataRow;\n    });\n    thRowsLen = thRows.length;\n    hasColHeaders = thRowsLen > 0;\n\n    if (thRowsLen > 1) {\n      settingsObj.nestedHeaders = Array.from(thRows).reduce(function (rows, row) {\n        var headersRow = Array.from(row.cells).reduce(function (headers, header, currentIndex) {\n          if (hasRowHeaders && currentIndex === 0) {\n            return headers;\n          }\n\n          var colspan = header.colSpan,\n              innerHTML = header.innerHTML;\n          var nextHeader = colspan > 1 ? {\n            label: innerHTML,\n            colspan: colspan\n          } : innerHTML;\n          headers.push(nextHeader);\n          return headers;\n        }, []);\n        rows.push(headersRow);\n        return rows;\n      }, []);\n    } else if (hasColHeaders) {\n      settingsObj.colHeaders = Array.from(thRows[0].children).reduce(function (headers, header, index) {\n        if (hasRowHeaders && index === 0) {\n          return headers;\n        }\n\n        headers.push(header.innerHTML);\n        return headers;\n      }, []);\n    }\n  }\n\n  if (fixedRowsTop.length) {\n    settingsObj.fixedRowsTop = fixedRowsTop.length;\n  }\n\n  if (fixedRowsBottom.length) {\n    settingsObj.fixedRowsBottom = fixedRowsBottom.length;\n  }\n\n  var dataRows = [].concat(fixedRowsTop, _toConsumableArray(Array.from(checkElement.tBodies).reduce(function (sections, section) {\n    sections.push.apply(sections, _toConsumableArray(Array.from(section.rows)));\n    return sections;\n  }, [])), _toConsumableArray(fixedRowsBottom));\n  countRows = dataRows.length;\n  var dataArr = new Array(countRows);\n\n  for (var r = 0; r < countRows; r++) {\n    dataArr[r] = new Array(countCols);\n  }\n\n  var mergeCells = [];\n  var rowHeaders = [];\n\n  for (var row = 0; row < countRows; row++) {\n    var tr = dataRows[row];\n    var cells = Array.from(tr.cells);\n    var cellsLen = cells.length;\n\n    for (var cellId = 0; cellId < cellsLen; cellId++) {\n      var cell = cells[cellId];\n      var nodeName = cell.nodeName,\n          innerHTML = cell.innerHTML,\n          rowspan = cell.rowSpan,\n          colspan = cell.colSpan;\n      var col = dataArr[row].findIndex(function (value) {\n        return value === void 0;\n      });\n\n      if (nodeName === 'TD') {\n        if (rowspan > 1 || colspan > 1) {\n          for (var rstart = row; rstart < row + rowspan; rstart++) {\n            if (rstart < countRows) {\n              for (var cstart = col; cstart < col + colspan; cstart++) {\n                dataArr[rstart][cstart] = null;\n              }\n            }\n          }\n\n          var styleAttr = cell.getAttribute('style');\n          var ignoreMerge = styleAttr && styleAttr.includes('mso-ignore:colspan');\n\n          if (!ignoreMerge) {\n            mergeCells.push({\n              col: col,\n              row: row,\n              rowspan: rowspan,\n              colspan: colspan\n            });\n          }\n        }\n\n        var cellValue = '';\n\n        if (generator && /excel/gi.test(generator.content)) {\n          cellValue = innerHTML.replace(/[\\r\\n][\\x20]{0,2}/g, '\\x20').replace(/<br(\\s*|\\/)>[\\r\\n]?[\\x20]{0,3}/gim, '\\r\\n');\n        } else {\n          cellValue = innerHTML.replace(/<br(\\s*|\\/)>[\\r\\n]?/gim, '\\r\\n');\n        }\n\n        dataArr[row][col] = cellValue.replace(regEscapedChars, function (match) {\n          return ESCAPED_HTML_CHARS[match];\n        });\n      } else {\n        rowHeaders.push(innerHTML);\n      }\n    }\n  }\n\n  if (mergeCells.length) {\n    settingsObj.mergeCells = mergeCells;\n  }\n\n  if (rowHeaders.length) {\n    settingsObj.rowHeaders = rowHeaders;\n  }\n\n  if (dataArr.length) {\n    settingsObj.data = dataArr;\n  }\n\n  return settingsObj;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
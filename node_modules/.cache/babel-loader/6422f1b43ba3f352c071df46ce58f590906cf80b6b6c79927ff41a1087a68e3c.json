{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nimport { BasePlugin } from \"../base/index.mjs\";\nimport Hooks from \"../../pluginHooks.mjs\";\nimport { arrayReduce } from \"../../helpers/array.mjs\";\nimport { addClass, removeClass, offset, hasClass } from \"../../helpers/dom/element.mjs\";\nimport { rangeEach } from \"../../helpers/number.mjs\";\nimport EventManager from \"../../eventManager.mjs\";\nimport BacklightUI from \"./ui/backlight.mjs\";\nimport GuidelineUI from \"./ui/guideline.mjs\";\nHooks.getSingleton().register('beforeColumnMove');\nHooks.getSingleton().register('afterColumnMove');\nexport var PLUGIN_KEY = 'manualColumnMove';\nexport var PLUGIN_PRIORITY = 120;\nvar privatePool = new WeakMap();\nvar CSS_PLUGIN = 'ht__manualColumnMove';\nvar CSS_SHOW_UI = 'show-ui';\nvar CSS_ON_MOVING = 'on-moving--columns';\nvar CSS_AFTER_SELECTION = 'after-selection--columns';\n/**\n * @plugin ManualColumnMove\n * @class ManualColumnMove\n *\n * @description\n * This plugin allows to change columns order. To make columns order persistent the {@link Options#persistentState}\n * plugin should be enabled.\n *\n * API:\n * - `moveColumn` - move single column to the new position.\n * - `moveColumns` - move many columns (as an array of indexes) to the new position.\n * - `dragColumn` - drag single column to the new position.\n * - `dragColumns` - drag many columns (as an array of indexes) to the new position.\n *\n * [Documentation](@/guides/columns/column-moving.md) explain differences between drag and move actions.\n * Please keep in mind that if you want apply visual changes,\n * you have to call manually the `render` method on the instance of Handsontable.\n *\n * The plugin creates additional components to make moving possibly using user interface:\n * - backlight - highlight of selected columns.\n * - guideline - line which shows where columns has been moved.\n *\n * @class ManualColumnMove\n * @plugin ManualColumnMove\n */\n\nexport var ManualColumnMove = /*#__PURE__*/function (_BasePlugin) {\n  _inherits(ManualColumnMove, _BasePlugin);\n  var _super = _createSuper(ManualColumnMove);\n  function ManualColumnMove(hotInstance) {\n    var _this;\n    _classCallCheck(this, ManualColumnMove);\n    _this = _super.call(this, hotInstance);\n    /**\n     * Set up WeakMap of plugin to sharing private parameters;.\n     */\n\n    privatePool.set(_assertThisInitialized(_this), {\n      columnsToMove: [],\n      countCols: 0,\n      fixedColumns: 0,\n      pressed: void 0,\n      target: {\n        eventPageX: void 0,\n        coords: void 0,\n        TD: void 0,\n        col: void 0\n      },\n      cachedDropIndex: void 0\n    });\n    /**\n     * Event Manager object.\n     *\n     * @private\n     * @type {object}\n     */\n\n    _this.eventManager = new EventManager(_assertThisInitialized(_this));\n    /**\n     * Backlight UI object.\n     *\n     * @private\n     * @type {object}\n     */\n\n    _this.backlight = new BacklightUI(hotInstance);\n    /**\n     * Guideline UI object.\n     *\n     * @private\n     * @type {object}\n     */\n\n    _this.guideline = new GuidelineUI(hotInstance);\n    return _this;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` than the {@link ManualColumnMove#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n\n  _createClass(ManualColumnMove, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return !!this.hot.getSettings()[PLUGIN_KEY];\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n      if (this.enabled) {\n        return;\n      }\n      this.addHook('beforeOnCellMouseDown', function () {\n        return _this2.onBeforeOnCellMouseDown.apply(_this2, arguments);\n      });\n      this.addHook('beforeOnCellMouseOver', function () {\n        return _this2.onBeforeOnCellMouseOver.apply(_this2, arguments);\n      });\n      this.addHook('afterScrollVertically', function () {\n        return _this2.onAfterScrollVertically();\n      });\n      this.addHook('afterLoadData', function () {\n        return _this2.onAfterLoadData.apply(_this2, arguments);\n      });\n      this.buildPluginUI();\n      this.registerEvents(); // TODO: move adding plugin classname to BasePlugin.\n\n      addClass(this.hot.rootElement, CSS_PLUGIN);\n      _get(_getPrototypeOf(ManualColumnMove.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Updates the plugin state. This method is executed when {@link Core#updateSettings} is invoked.\n     */\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n      this.moveBySettingsOrLoad();\n      _get(_getPrototypeOf(ManualColumnMove.prototype), \"updatePlugin\", this).call(this);\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      removeClass(this.hot.rootElement, CSS_PLUGIN);\n      this.unregisterEvents();\n      this.backlight.destroy();\n      this.guideline.destroy();\n      _get(_getPrototypeOf(ManualColumnMove.prototype), \"disablePlugin\", this).call(this);\n    }\n    /**\n     * Moves a single column.\n     *\n     * @param {number} column Visual column index to be moved.\n     * @param {number} finalIndex Visual column index, being a start index for the moved columns. Points to where the elements will be placed after the moving action.\n     * To check the visualization of the final index, please take a look at [documentation](@/guides/columns/column-moving.md#drag-and-move-actions-of-manualcolumnmove-plugin).\n     * @fires Hooks#beforeColumnMove\n     * @fires Hooks#afterColumnMove\n     * @returns {boolean}\n     */\n  }, {\n    key: \"moveColumn\",\n    value: function moveColumn(column, finalIndex) {\n      return this.moveColumns([column], finalIndex);\n    }\n    /**\n     * Moves a multiple columns.\n     *\n     * @param {Array} columns Array of visual column indexes to be moved.\n     * @param {number} finalIndex Visual column index, being a start index for the moved columns. Points to where the elements will be placed after the moving action.\n     * To check the visualization of the final index, please take a look at [documentation](@/guides/columns/column-moving.md#drag-and-move-actions-of-manualcolumnmove-plugin).\n     * @fires Hooks#beforeColumnMove\n     * @fires Hooks#afterColumnMove\n     * @returns {boolean}\n     */\n  }, {\n    key: \"moveColumns\",\n    value: function moveColumns(columns, finalIndex) {\n      var priv = privatePool.get(this);\n      var dropIndex = priv.cachedDropIndex;\n      var movePossible = this.isMovePossible(columns, finalIndex);\n      var beforeMoveHook = this.hot.runHooks('beforeColumnMove', columns, finalIndex, dropIndex, movePossible);\n      priv.cachedDropIndex = void 0;\n      if (beforeMoveHook === false) {\n        return;\n      }\n      if (movePossible) {\n        this.hot.columnIndexMapper.moveIndexes(columns, finalIndex);\n      }\n      var movePerformed = movePossible && this.isColumnOrderChanged(columns, finalIndex);\n      this.hot.runHooks('afterColumnMove', columns, finalIndex, dropIndex, movePossible, movePerformed);\n      return movePerformed;\n    }\n    /**\n     * Drag a single column to drop index position.\n     *\n     * @param {number} column Visual column index to be dragged.\n     * @param {number} dropIndex Visual column index, being a drop index for the moved columns. Points to where we are going to drop the moved elements.\n     * To check visualization of drop index please take a look at [documentation](@/guides/columns/column-moving.md#drag-and-move-actions-of-manualcolumnmove-plugin).\n     * @fires Hooks#beforeColumnMove\n     * @fires Hooks#afterColumnMove\n     * @returns {boolean}\n     */\n  }, {\n    key: \"dragColumn\",\n    value: function dragColumn(column, dropIndex) {\n      return this.dragColumns([column], dropIndex);\n    }\n    /**\n     * Drag multiple columns to drop index position.\n     *\n     * @param {Array} columns Array of visual column indexes to be dragged.\n     * @param {number} dropIndex Visual column index, being a drop index for the moved columns. Points to where we are going to drop the moved elements.\n     * To check visualization of drop index please take a look at [documentation](@/guides/columns/column-moving.md#drag-and-move-actions-of-manualcolumnmove-plugin).\n     * @fires Hooks#beforeColumnMove\n     * @fires Hooks#afterColumnMove\n     * @returns {boolean}\n     */\n  }, {\n    key: \"dragColumns\",\n    value: function dragColumns(columns, dropIndex) {\n      var finalIndex = this.countFinalIndex(columns, dropIndex);\n      var priv = privatePool.get(this);\n      priv.cachedDropIndex = dropIndex;\n      return this.moveColumns(columns, finalIndex);\n    }\n    /**\n     * Indicates if it's possible to move columns to the desired position. Some of the actions aren't\n     * possible, i.e. You can’t move more than one element to the last position.\n     *\n     * @param {Array} movedColumns Array of visual column indexes to be moved.\n     * @param {number} finalIndex Visual column index, being a start index for the moved columns. Points to where the elements will be placed after the moving action.\n     * To check the visualization of the final index, please take a look at [documentation](@/guides/columns/column-moving.md#drag-and-move-actions-of-manualcolumnmove-plugin).\n     * @returns {boolean}\n     */\n  }, {\n    key: \"isMovePossible\",\n    value: function isMovePossible(movedColumns, finalIndex) {\n      var length = this.hot.columnIndexMapper.getNotTrimmedIndexesLength(); // An attempt to transfer more columns to start destination than is possible (only when moving from the top to the bottom).\n\n      var tooHighDestinationIndex = movedColumns.length + finalIndex > length;\n      var tooLowDestinationIndex = finalIndex < 0;\n      var tooLowMovedColumnIndex = movedColumns.some(function (movedColumn) {\n        return movedColumn < 0;\n      });\n      var tooHighMovedColumnIndex = movedColumns.some(function (movedColumn) {\n        return movedColumn >= length;\n      });\n      if (tooHighDestinationIndex || tooLowDestinationIndex || tooLowMovedColumnIndex || tooHighMovedColumnIndex) {\n        return false;\n      }\n      return true;\n    }\n    /**\n     * Indicates if order of columns was changed.\n     *\n     * @private\n     * @param {Array} movedColumns Array of visual column indexes to be moved.\n     * @param {number} finalIndex Visual column index, being a start index for the moved columns. Points to where the elements will be placed after the moving action.\n     * To check the visualization of the final index, please take a look at [documentation](@/guides/columns/column-moving.md#drag-and-move-actions-of-manualcolumnmove-plugin).\n     * @returns {boolean}\n     */\n  }, {\n    key: \"isColumnOrderChanged\",\n    value: function isColumnOrderChanged(movedColumns, finalIndex) {\n      return movedColumns.some(function (column, nrOfMovedElement) {\n        return column - nrOfMovedElement !== finalIndex;\n      });\n    }\n    /**\n     * Count the final column index from the drop index.\n     *\n     * @private\n     * @param {Array} movedColumns Array of visual column indexes to be moved.\n     * @param {number} dropIndex Visual column index, being a drop index for the moved columns.\n     * @returns {number} Visual column index, being a start index for the moved columns.\n     */\n  }, {\n    key: \"countFinalIndex\",\n    value: function countFinalIndex(movedColumns, dropIndex) {\n      var numberOfColumnsLowerThanDropIndex = arrayReduce(movedColumns, function (numberOfColumns, currentColumnIndex) {\n        if (currentColumnIndex < dropIndex) {\n          numberOfColumns += 1;\n        }\n        return numberOfColumns;\n      }, 0);\n      return dropIndex - numberOfColumnsLowerThanDropIndex;\n    }\n    /**\n     * Gets the sum of the widths of columns in the provided range.\n     *\n     * @private\n     * @param {number} fromColumn Visual column index.\n     * @param {number} toColumn Visual column index.\n     * @returns {number}\n     */\n  }, {\n    key: \"getColumnsWidth\",\n    value: function getColumnsWidth(fromColumn, toColumn) {\n      var columnMapper = this.hot.columnIndexMapper;\n      var columnsWidth = 0;\n      for (var visualColumnIndex = fromColumn; visualColumnIndex <= toColumn; visualColumnIndex += 1) {\n        // We can't use just `getColWidth` (even without indexes translation) as it doesn't return proper values\n        // when column is stretched.\n        var renderableIndex = columnMapper.getRenderableFromVisualIndex(visualColumnIndex);\n        if (visualColumnIndex < 0) {\n          columnsWidth += this.hot.view.wt.wtViewport.getRowHeaderWidth() || 0;\n        } else if (renderableIndex !== null) {\n          columnsWidth += this.hot.view.wt.wtTable.getStretchedColumnWidth(renderableIndex) || 0;\n        }\n      }\n      return columnsWidth;\n    }\n    /**\n     * Loads initial settings when persistent state is saved or when plugin was initialized as an array.\n     *\n     * @private\n     */\n  }, {\n    key: \"moveBySettingsOrLoad\",\n    value: function moveBySettingsOrLoad() {\n      var pluginSettings = this.hot.getSettings()[PLUGIN_KEY];\n      if (Array.isArray(pluginSettings)) {\n        this.moveColumns(pluginSettings, 0);\n      } else if (pluginSettings !== void 0) {\n        var persistentState = this.persistentStateLoad();\n        if (persistentState.length) {\n          this.moveColumns(persistentState, 0);\n        }\n      }\n    }\n    /**\n     * Checks if the provided column is in the fixedColumnsTop section.\n     *\n     * @private\n     * @param {number} column Visual column index to check.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"isFixedColumnsLeft\",\n    value: function isFixedColumnsLeft(column) {\n      return column < this.hot.getSettings().fixedColumnsLeft;\n    }\n    /**\n     * Saves the manual column positions to the persistent state (the {@link Options#persistentState} option has to be enabled).\n     *\n     * @private\n     * @fires Hooks#persistentStateSave\n     */\n  }, {\n    key: \"persistentStateSave\",\n    value: function persistentStateSave() {\n      this.hot.runHooks('persistentStateSave', 'manualColumnMove', this.hot.columnIndexMapper.getIndexesSequence()); // The `PersistentState` plugin should be refactored.\n    }\n    /**\n     * Loads the manual column positions from the persistent state (the {@link Options#persistentState} option has to be enabled).\n     *\n     * @private\n     * @fires Hooks#persistentStateLoad\n     * @returns {Array} Stored state.\n     */\n  }, {\n    key: \"persistentStateLoad\",\n    value: function persistentStateLoad() {\n      var storedState = {};\n      this.hot.runHooks('persistentStateLoad', 'manualColumnMove', storedState);\n      return storedState.value ? storedState.value : [];\n    }\n    /**\n     * Prepares an array of indexes based on actual selection.\n     *\n     * @private\n     * @param {number} start The start index.\n     * @param {number} end The end index.\n     * @returns {Array}\n     */\n  }, {\n    key: \"prepareColumnsToMoving\",\n    value: function prepareColumnsToMoving(start, end) {\n      var selectedColumns = [];\n      rangeEach(start, end, function (i) {\n        selectedColumns.push(i);\n      });\n      return selectedColumns;\n    }\n    /**\n     * Update the UI visual position.\n     *\n     * @private\n     */\n  }, {\n    key: \"refreshPositions\",\n    value: function refreshPositions() {\n      var priv = privatePool.get(this);\n      var firstVisible = this.hot.view.wt.wtTable.getFirstVisibleColumn();\n      var lastVisible = this.hot.view.wt.wtTable.getLastVisibleColumn();\n      var wtTable = this.hot.view.wt.wtTable;\n      var scrollableElement = this.hot.view.wt.wtOverlays.scrollableElement;\n      var scrollLeft = typeof scrollableElement.scrollX === 'number' ? scrollableElement.scrollX : scrollableElement.scrollLeft;\n      var tdOffsetLeft = this.hot.view.THEAD.offsetLeft + this.getColumnsWidth(0, priv.coords - 1);\n      var mouseOffsetLeft = priv.target.eventPageX - (priv.rootElementOffset - (scrollableElement.scrollX === void 0 ? scrollLeft : 0)); // eslint-disable-line max-len\n\n      var hiderWidth = wtTable.hider.offsetWidth;\n      var tbodyOffsetLeft = wtTable.TBODY.offsetLeft;\n      var backlightElemMarginLeft = this.backlight.getOffset().left;\n      var backlightElemWidth = this.backlight.getSize().width;\n      var rowHeaderWidth = 0;\n      if (priv.rootElementOffset + wtTable.holder.offsetWidth + scrollLeft < priv.target.eventPageX) {\n        if (priv.coords < priv.countCols) {\n          priv.coords += 1;\n        }\n      }\n      if (priv.hasRowHeaders) {\n        rowHeaderWidth = this.hot.view.wt.wtOverlays.leftOverlay.clone.wtTable.getColumnHeader(-1).offsetWidth;\n      }\n      if (this.isFixedColumnsLeft(priv.coords)) {\n        tdOffsetLeft += scrollLeft;\n      }\n      tdOffsetLeft += rowHeaderWidth;\n      if (priv.coords < 0) {\n        // if hover on rowHeader\n        if (priv.fixedColumns > 0) {\n          priv.target.col = 0;\n        } else {\n          priv.target.col = firstVisible > 0 ? firstVisible - 1 : firstVisible;\n        }\n      } else if (priv.target.TD.offsetWidth / 2 + tdOffsetLeft <= mouseOffsetLeft) {\n        var newCoordsCol = priv.coords >= priv.countCols ? priv.countCols - 1 : priv.coords; // if hover on right part of TD\n\n        priv.target.col = newCoordsCol + 1; // unfortunately first column is bigger than rest\n\n        tdOffsetLeft += priv.target.TD.offsetWidth;\n        if (priv.target.col > lastVisible && lastVisible < priv.countCols) {\n          this.hot.scrollViewportTo(void 0, lastVisible + 1, void 0, true);\n        }\n      } else {\n        // elsewhere on table\n        priv.target.col = priv.coords;\n        if (priv.target.col <= firstVisible && priv.target.col >= priv.fixedColumns && firstVisible > 0) {\n          this.hot.scrollViewportTo(void 0, firstVisible - 1);\n        }\n      }\n      if (priv.target.col <= firstVisible && priv.target.col >= priv.fixedColumns && firstVisible > 0) {\n        this.hot.scrollViewportTo(void 0, firstVisible - 1);\n      }\n      var backlightLeft = mouseOffsetLeft;\n      var guidelineLeft = tdOffsetLeft;\n      if (mouseOffsetLeft + backlightElemWidth + backlightElemMarginLeft >= hiderWidth) {\n        // prevent display backlight on the right side of the table\n        backlightLeft = hiderWidth - backlightElemWidth - backlightElemMarginLeft;\n      } else if (mouseOffsetLeft + backlightElemMarginLeft < tbodyOffsetLeft + rowHeaderWidth) {\n        // prevent display backlight on the left side of the table\n        backlightLeft = tbodyOffsetLeft + rowHeaderWidth + Math.abs(backlightElemMarginLeft);\n      }\n      if (tdOffsetLeft >= hiderWidth - 1) {\n        // prevent display guideline outside the table\n        guidelineLeft = hiderWidth - 1;\n      } else if (guidelineLeft === 0) {\n        // guideline has got `margin-left: -1px` as default\n        guidelineLeft = 1;\n      } else if (scrollableElement.scrollX !== void 0 && priv.coords < priv.fixedColumns) {\n        guidelineLeft -= priv.rootElementOffset <= scrollableElement.scrollX ? priv.rootElementOffset : 0;\n      }\n      this.backlight.setPosition(null, backlightLeft);\n      this.guideline.setPosition(null, guidelineLeft);\n    }\n    /**\n     * Binds the events used by the plugin.\n     *\n     * @private\n     */\n  }, {\n    key: \"registerEvents\",\n    value: function registerEvents() {\n      var _this3 = this;\n      var documentElement = this.hot.rootDocument.documentElement;\n      this.eventManager.addEventListener(documentElement, 'mousemove', function (event) {\n        return _this3.onMouseMove(event);\n      });\n      this.eventManager.addEventListener(documentElement, 'mouseup', function () {\n        return _this3.onMouseUp();\n      });\n    }\n    /**\n     * Unbinds the events used by the plugin.\n     *\n     * @private\n     */\n  }, {\n    key: \"unregisterEvents\",\n    value: function unregisterEvents() {\n      this.eventManager.clear();\n    }\n    /**\n     * Change the behavior of selection / dragging.\n     *\n     * @private\n     * @param {MouseEvent} event `mousedown` event properties.\n     * @param {CellCoords} coords Visual cell coordinates where was fired event.\n     * @param {HTMLElement} TD Cell represented as HTMLElement.\n     * @param {object} controller An object with properties `row`, `column` and `cell`. Each property contains\n     *                            a boolean value that allows or disallows changing the selection for that particular area.\n     */\n  }, {\n    key: \"onBeforeOnCellMouseDown\",\n    value: function onBeforeOnCellMouseDown(event, coords, TD, controller) {\n      var wtTable = this.hot.view.wt.wtTable;\n      var isHeaderSelection = this.hot.selection.isSelectedByColumnHeader();\n      var selection = this.hot.getSelectedRangeLast();\n      var priv = privatePool.get(this); // This block action shouldn't be handled below.\n\n      var isSortingElement = hasClass(event.target, 'sortAction');\n      if (!selection || !isHeaderSelection || priv.pressed || event.button !== 0 || isSortingElement) {\n        priv.pressed = false;\n        priv.columnsToMove.length = 0;\n        removeClass(this.hot.rootElement, [CSS_ON_MOVING, CSS_SHOW_UI]);\n        return;\n      }\n      var guidelineIsNotReady = this.guideline.isBuilt() && !this.guideline.isAppended();\n      var backlightIsNotReady = this.backlight.isBuilt() && !this.backlight.isAppended();\n      if (guidelineIsNotReady && backlightIsNotReady) {\n        this.guideline.appendTo(wtTable.hider);\n        this.backlight.appendTo(wtTable.hider);\n      }\n      var from = selection.from,\n        to = selection.to;\n      var start = Math.min(from.col, to.col);\n      var end = Math.max(from.col, to.col);\n      if (coords.row < 0 && coords.col >= start && coords.col <= end) {\n        controller.column = true;\n        priv.pressed = true;\n        priv.target.eventPageX = event.pageX;\n        priv.coords = coords.col;\n        priv.target.TD = TD;\n        priv.target.col = coords.col;\n        priv.columnsToMove = this.prepareColumnsToMoving(start, end);\n        priv.hasRowHeaders = !!this.hot.getSettings().rowHeaders;\n        priv.countCols = this.hot.countCols();\n        priv.fixedColumns = this.hot.getSettings().fixedColumnsLeft;\n        priv.rootElementOffset = offset(this.hot.rootElement).left;\n        var countColumnsFrom = priv.hasRowHeaders ? -1 : 0;\n        var topPos = wtTable.holder.scrollTop + wtTable.getColumnHeaderHeight(0) + 1;\n        var fixedColumns = coords.col < priv.fixedColumns;\n        var scrollableElement = this.hot.view.wt.wtOverlays.scrollableElement;\n        var wrapperIsWindow = scrollableElement.scrollX ? scrollableElement.scrollX - priv.rootElementOffset : 0;\n        var mouseOffset = event.offsetX - (fixedColumns ? wrapperIsWindow : 0);\n        var leftOffset = Math.abs(this.getColumnsWidth(start, coords.col - 1) + mouseOffset);\n        this.backlight.setPosition(topPos, this.getColumnsWidth(countColumnsFrom, start - 1) + leftOffset);\n        this.backlight.setSize(this.getColumnsWidth(start, end), wtTable.hider.offsetHeight - topPos);\n        this.backlight.setOffset(null, leftOffset * -1);\n        addClass(this.hot.rootElement, CSS_ON_MOVING);\n      } else {\n        removeClass(this.hot.rootElement, CSS_AFTER_SELECTION);\n        priv.pressed = false;\n        priv.columnsToMove.length = 0;\n      }\n    }\n    /**\n     * 'mouseMove' event callback. Fired when pointer move on document.documentElement.\n     *\n     * @private\n     * @param {MouseEvent} event `mousemove` event properties.\n     */\n  }, {\n    key: \"onMouseMove\",\n    value: function onMouseMove(event) {\n      var priv = privatePool.get(this);\n      if (!priv.pressed) {\n        return;\n      } // callback for browser which doesn't supports CSS pointer-event: none\n\n      if (event.target === this.backlight.element) {\n        var width = this.backlight.getSize().width;\n        this.backlight.setSize(0);\n        setTimeout(function () {\n          this.backlight.setPosition(width);\n        });\n      }\n      priv.target.eventPageX = event.pageX;\n      this.refreshPositions();\n    }\n    /**\n     * 'beforeOnCellMouseOver' hook callback. Fired when pointer was over cell.\n     *\n     * @private\n     * @param {MouseEvent} event `mouseover` event properties.\n     * @param {CellCoords} coords Visual cell coordinates where was fired event.\n     * @param {HTMLElement} TD Cell represented as HTMLElement.\n     * @param {object} controller An object with properties `row`, `column` and `cell`. Each property contains\n     *                            a boolean value that allows or disallows changing the selection for that particular area.\n     */\n  }, {\n    key: \"onBeforeOnCellMouseOver\",\n    value: function onBeforeOnCellMouseOver(event, coords, TD, controller) {\n      var selectedRange = this.hot.getSelectedRangeLast();\n      var priv = privatePool.get(this);\n      if (!selectedRange || !priv.pressed) {\n        return;\n      }\n      if (priv.columnsToMove.indexOf(coords.col) > -1) {\n        removeClass(this.hot.rootElement, CSS_SHOW_UI);\n      } else {\n        addClass(this.hot.rootElement, CSS_SHOW_UI);\n      }\n      controller.row = true;\n      controller.column = true;\n      controller.cell = true;\n      priv.coords = coords.col;\n      priv.target.TD = TD;\n    }\n    /**\n     * `onMouseUp` hook callback.\n     *\n     * @private\n     */\n  }, {\n    key: \"onMouseUp\",\n    value: function onMouseUp() {\n      var priv = privatePool.get(this);\n      var target = priv.target.col;\n      var columnsLen = priv.columnsToMove.length;\n      priv.coords = void 0;\n      priv.pressed = false;\n      priv.backlightWidth = 0;\n      removeClass(this.hot.rootElement, [CSS_ON_MOVING, CSS_SHOW_UI, CSS_AFTER_SELECTION]);\n      if (this.hot.selection.isSelectedByColumnHeader()) {\n        addClass(this.hot.rootElement, CSS_AFTER_SELECTION);\n      }\n      if (columnsLen < 1 || target === void 0) {\n        return;\n      }\n      var firstMovedVisualColumn = priv.columnsToMove[0];\n      var firstMovedPhysicalColumn = this.hot.toPhysicalColumn(firstMovedVisualColumn);\n      var movePerformed = this.dragColumns(priv.columnsToMove, target);\n      priv.columnsToMove.length = 0;\n      if (movePerformed === true) {\n        this.persistentStateSave();\n        this.hot.render();\n        this.hot.view.adjustElementsSize(true);\n        var selectionStart = this.hot.toVisualColumn(firstMovedPhysicalColumn);\n        var selectionEnd = selectionStart + columnsLen - 1;\n        this.hot.selectColumns(selectionStart, selectionEnd);\n      }\n    }\n    /**\n     * `afterScrollHorizontally` hook callback. Fired the table was scrolled horizontally.\n     *\n     * @private\n     */\n  }, {\n    key: \"onAfterScrollVertically\",\n    value: function onAfterScrollVertically() {\n      var wtTable = this.hot.view.wt.wtTable;\n      var headerHeight = wtTable.getColumnHeaderHeight(0) + 1;\n      var scrollTop = wtTable.holder.scrollTop;\n      var posTop = headerHeight + scrollTop;\n      this.backlight.setPosition(posTop);\n      this.backlight.setSize(null, wtTable.hider.offsetHeight - posTop);\n    }\n    /**\n     * Builds the plugin's UI.\n     *\n     * @private\n     */\n  }, {\n    key: \"buildPluginUI\",\n    value: function buildPluginUI() {\n      this.backlight.build();\n      this.guideline.build();\n    }\n    /**\n     * Callback for the `afterLoadData` hook.\n     *\n     * @private\n     */\n  }, {\n    key: \"onAfterLoadData\",\n    value: function onAfterLoadData() {\n      this.moveBySettingsOrLoad();\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.backlight.destroy();\n      this.guideline.destroy();\n      _get(_getPrototypeOf(ManualColumnMove.prototype), \"destroy\", this).call(this);\n    }\n  }], [{\n    key: \"PLUGIN_KEY\",\n    get: function get() {\n      return PLUGIN_KEY;\n    }\n  }, {\n    key: \"PLUGIN_PRIORITY\",\n    get: function get() {\n      return PLUGIN_PRIORITY;\n    }\n  }]);\n  return ManualColumnMove;\n}(BasePlugin);","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_get","Reflect","get","property","receiver","base","_superPropBase","desc","getOwnPropertyDescriptor","call","arguments","value","apply","object","hasOwnProperty","_getPrototypeOf","_inherits","subClass","superClass","create","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","construct","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","BasePlugin","Hooks","arrayReduce","addClass","removeClass","offset","hasClass","rangeEach","EventManager","BacklightUI","GuidelineUI","getSingleton","register","PLUGIN_KEY","PLUGIN_PRIORITY","privatePool","WeakMap","CSS_PLUGIN","CSS_SHOW_UI","CSS_ON_MOVING","CSS_AFTER_SELECTION","ManualColumnMove","_BasePlugin","_super","hotInstance","_this","set","columnsToMove","countCols","fixedColumns","pressed","eventPageX","coords","TD","col","cachedDropIndex","eventManager","backlight","guideline","isEnabled","hot","getSettings","enablePlugin","_this2","enabled","addHook","onBeforeOnCellMouseDown","onBeforeOnCellMouseOver","onAfterScrollVertically","onAfterLoadData","buildPluginUI","registerEvents","rootElement","updatePlugin","disablePlugin","moveBySettingsOrLoad","unregisterEvents","destroy","moveColumn","column","finalIndex","moveColumns","columns","priv","dropIndex","movePossible","isMovePossible","beforeMoveHook","runHooks","columnIndexMapper","moveIndexes","movePerformed","isColumnOrderChanged","dragColumn","dragColumns","countFinalIndex","movedColumns","getNotTrimmedIndexesLength","tooHighDestinationIndex","tooLowDestinationIndex","tooLowMovedColumnIndex","some","movedColumn","tooHighMovedColumnIndex","nrOfMovedElement","numberOfColumnsLowerThanDropIndex","numberOfColumns","currentColumnIndex","getColumnsWidth","fromColumn","toColumn","columnMapper","columnsWidth","visualColumnIndex","renderableIndex","getRenderableFromVisualIndex","view","wt","wtViewport","getRowHeaderWidth","wtTable","getStretchedColumnWidth","pluginSettings","Array","isArray","persistentState","persistentStateLoad","isFixedColumnsLeft","fixedColumnsLeft","persistentStateSave","getIndexesSequence","storedState","prepareColumnsToMoving","start","end","selectedColumns","push","refreshPositions","firstVisible","getFirstVisibleColumn","lastVisible","getLastVisibleColumn","scrollableElement","wtOverlays","scrollLeft","scrollX","tdOffsetLeft","THEAD","offsetLeft","mouseOffsetLeft","rootElementOffset","hiderWidth","hider","offsetWidth","tbodyOffsetLeft","TBODY","backlightElemMarginLeft","getOffset","left","backlightElemWidth","getSize","width","rowHeaderWidth","holder","hasRowHeaders","leftOverlay","clone","getColumnHeader","newCoordsCol","scrollViewportTo","backlightLeft","guidelineLeft","Math","abs","setPosition","_this3","documentElement","rootDocument","addEventListener","event","onMouseMove","onMouseUp","clear","controller","isHeaderSelection","selection","isSelectedByColumnHeader","getSelectedRangeLast","isSortingElement","button","guidelineIsNotReady","isBuilt","isAppended","backlightIsNotReady","appendTo","from","to","min","max","row","pageX","rowHeaders","countColumnsFrom","topPos","scrollTop","getColumnHeaderHeight","wrapperIsWindow","mouseOffset","offsetX","leftOffset","setSize","offsetHeight","setOffset","element","setTimeout","selectedRange","indexOf","cell","columnsLen","backlightWidth","firstMovedVisualColumn","firstMovedPhysicalColumn","toPhysicalColumn","render","adjustElementsSize","selectionStart","toVisualColumn","selectionEnd","selectColumns","headerHeight","posTop","build"],"sources":["/Users/priyadeliwala/Desktop/sales-dashboard/node_modules/handsontable/plugins/manualColumnMove/manualColumnMove.mjs"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _get() { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.weak-map.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.timers.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.object.set-prototype-of.js\";\nimport \"core-js/modules/es.object.get-prototype-of.js\";\nimport \"core-js/modules/es.reflect.construct.js\";\nimport \"core-js/modules/es.reflect.get.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport { BasePlugin } from \"../base/index.mjs\";\nimport Hooks from \"../../pluginHooks.mjs\";\nimport { arrayReduce } from \"../../helpers/array.mjs\";\nimport { addClass, removeClass, offset, hasClass } from \"../../helpers/dom/element.mjs\";\nimport { rangeEach } from \"../../helpers/number.mjs\";\nimport EventManager from \"../../eventManager.mjs\";\nimport BacklightUI from \"./ui/backlight.mjs\";\nimport GuidelineUI from \"./ui/guideline.mjs\";\nHooks.getSingleton().register('beforeColumnMove');\nHooks.getSingleton().register('afterColumnMove');\nexport var PLUGIN_KEY = 'manualColumnMove';\nexport var PLUGIN_PRIORITY = 120;\nvar privatePool = new WeakMap();\nvar CSS_PLUGIN = 'ht__manualColumnMove';\nvar CSS_SHOW_UI = 'show-ui';\nvar CSS_ON_MOVING = 'on-moving--columns';\nvar CSS_AFTER_SELECTION = 'after-selection--columns';\n/**\n * @plugin ManualColumnMove\n * @class ManualColumnMove\n *\n * @description\n * This plugin allows to change columns order. To make columns order persistent the {@link Options#persistentState}\n * plugin should be enabled.\n *\n * API:\n * - `moveColumn` - move single column to the new position.\n * - `moveColumns` - move many columns (as an array of indexes) to the new position.\n * - `dragColumn` - drag single column to the new position.\n * - `dragColumns` - drag many columns (as an array of indexes) to the new position.\n *\n * [Documentation](@/guides/columns/column-moving.md) explain differences between drag and move actions.\n * Please keep in mind that if you want apply visual changes,\n * you have to call manually the `render` method on the instance of Handsontable.\n *\n * The plugin creates additional components to make moving possibly using user interface:\n * - backlight - highlight of selected columns.\n * - guideline - line which shows where columns has been moved.\n *\n * @class ManualColumnMove\n * @plugin ManualColumnMove\n */\n\nexport var ManualColumnMove = /*#__PURE__*/function (_BasePlugin) {\n  _inherits(ManualColumnMove, _BasePlugin);\n\n  var _super = _createSuper(ManualColumnMove);\n\n  function ManualColumnMove(hotInstance) {\n    var _this;\n\n    _classCallCheck(this, ManualColumnMove);\n\n    _this = _super.call(this, hotInstance);\n    /**\n     * Set up WeakMap of plugin to sharing private parameters;.\n     */\n\n    privatePool.set(_assertThisInitialized(_this), {\n      columnsToMove: [],\n      countCols: 0,\n      fixedColumns: 0,\n      pressed: void 0,\n      target: {\n        eventPageX: void 0,\n        coords: void 0,\n        TD: void 0,\n        col: void 0\n      },\n      cachedDropIndex: void 0\n    });\n    /**\n     * Event Manager object.\n     *\n     * @private\n     * @type {object}\n     */\n\n    _this.eventManager = new EventManager(_assertThisInitialized(_this));\n    /**\n     * Backlight UI object.\n     *\n     * @private\n     * @type {object}\n     */\n\n    _this.backlight = new BacklightUI(hotInstance);\n    /**\n     * Guideline UI object.\n     *\n     * @private\n     * @type {object}\n     */\n\n    _this.guideline = new GuidelineUI(hotInstance);\n    return _this;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` than the {@link ManualColumnMove#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n\n\n  _createClass(ManualColumnMove, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return !!this.hot.getSettings()[PLUGIN_KEY];\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n\n      if (this.enabled) {\n        return;\n      }\n\n      this.addHook('beforeOnCellMouseDown', function () {\n        return _this2.onBeforeOnCellMouseDown.apply(_this2, arguments);\n      });\n      this.addHook('beforeOnCellMouseOver', function () {\n        return _this2.onBeforeOnCellMouseOver.apply(_this2, arguments);\n      });\n      this.addHook('afterScrollVertically', function () {\n        return _this2.onAfterScrollVertically();\n      });\n      this.addHook('afterLoadData', function () {\n        return _this2.onAfterLoadData.apply(_this2, arguments);\n      });\n      this.buildPluginUI();\n      this.registerEvents(); // TODO: move adding plugin classname to BasePlugin.\n\n      addClass(this.hot.rootElement, CSS_PLUGIN);\n\n      _get(_getPrototypeOf(ManualColumnMove.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Updates the plugin state. This method is executed when {@link Core#updateSettings} is invoked.\n     */\n\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n      this.moveBySettingsOrLoad();\n\n      _get(_getPrototypeOf(ManualColumnMove.prototype), \"updatePlugin\", this).call(this);\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      removeClass(this.hot.rootElement, CSS_PLUGIN);\n      this.unregisterEvents();\n      this.backlight.destroy();\n      this.guideline.destroy();\n\n      _get(_getPrototypeOf(ManualColumnMove.prototype), \"disablePlugin\", this).call(this);\n    }\n    /**\n     * Moves a single column.\n     *\n     * @param {number} column Visual column index to be moved.\n     * @param {number} finalIndex Visual column index, being a start index for the moved columns. Points to where the elements will be placed after the moving action.\n     * To check the visualization of the final index, please take a look at [documentation](@/guides/columns/column-moving.md#drag-and-move-actions-of-manualcolumnmove-plugin).\n     * @fires Hooks#beforeColumnMove\n     * @fires Hooks#afterColumnMove\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"moveColumn\",\n    value: function moveColumn(column, finalIndex) {\n      return this.moveColumns([column], finalIndex);\n    }\n    /**\n     * Moves a multiple columns.\n     *\n     * @param {Array} columns Array of visual column indexes to be moved.\n     * @param {number} finalIndex Visual column index, being a start index for the moved columns. Points to where the elements will be placed after the moving action.\n     * To check the visualization of the final index, please take a look at [documentation](@/guides/columns/column-moving.md#drag-and-move-actions-of-manualcolumnmove-plugin).\n     * @fires Hooks#beforeColumnMove\n     * @fires Hooks#afterColumnMove\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"moveColumns\",\n    value: function moveColumns(columns, finalIndex) {\n      var priv = privatePool.get(this);\n      var dropIndex = priv.cachedDropIndex;\n      var movePossible = this.isMovePossible(columns, finalIndex);\n      var beforeMoveHook = this.hot.runHooks('beforeColumnMove', columns, finalIndex, dropIndex, movePossible);\n      priv.cachedDropIndex = void 0;\n\n      if (beforeMoveHook === false) {\n        return;\n      }\n\n      if (movePossible) {\n        this.hot.columnIndexMapper.moveIndexes(columns, finalIndex);\n      }\n\n      var movePerformed = movePossible && this.isColumnOrderChanged(columns, finalIndex);\n      this.hot.runHooks('afterColumnMove', columns, finalIndex, dropIndex, movePossible, movePerformed);\n      return movePerformed;\n    }\n    /**\n     * Drag a single column to drop index position.\n     *\n     * @param {number} column Visual column index to be dragged.\n     * @param {number} dropIndex Visual column index, being a drop index for the moved columns. Points to where we are going to drop the moved elements.\n     * To check visualization of drop index please take a look at [documentation](@/guides/columns/column-moving.md#drag-and-move-actions-of-manualcolumnmove-plugin).\n     * @fires Hooks#beforeColumnMove\n     * @fires Hooks#afterColumnMove\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"dragColumn\",\n    value: function dragColumn(column, dropIndex) {\n      return this.dragColumns([column], dropIndex);\n    }\n    /**\n     * Drag multiple columns to drop index position.\n     *\n     * @param {Array} columns Array of visual column indexes to be dragged.\n     * @param {number} dropIndex Visual column index, being a drop index for the moved columns. Points to where we are going to drop the moved elements.\n     * To check visualization of drop index please take a look at [documentation](@/guides/columns/column-moving.md#drag-and-move-actions-of-manualcolumnmove-plugin).\n     * @fires Hooks#beforeColumnMove\n     * @fires Hooks#afterColumnMove\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"dragColumns\",\n    value: function dragColumns(columns, dropIndex) {\n      var finalIndex = this.countFinalIndex(columns, dropIndex);\n      var priv = privatePool.get(this);\n      priv.cachedDropIndex = dropIndex;\n      return this.moveColumns(columns, finalIndex);\n    }\n    /**\n     * Indicates if it's possible to move columns to the desired position. Some of the actions aren't\n     * possible, i.e. You can’t move more than one element to the last position.\n     *\n     * @param {Array} movedColumns Array of visual column indexes to be moved.\n     * @param {number} finalIndex Visual column index, being a start index for the moved columns. Points to where the elements will be placed after the moving action.\n     * To check the visualization of the final index, please take a look at [documentation](@/guides/columns/column-moving.md#drag-and-move-actions-of-manualcolumnmove-plugin).\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isMovePossible\",\n    value: function isMovePossible(movedColumns, finalIndex) {\n      var length = this.hot.columnIndexMapper.getNotTrimmedIndexesLength(); // An attempt to transfer more columns to start destination than is possible (only when moving from the top to the bottom).\n\n      var tooHighDestinationIndex = movedColumns.length + finalIndex > length;\n      var tooLowDestinationIndex = finalIndex < 0;\n      var tooLowMovedColumnIndex = movedColumns.some(function (movedColumn) {\n        return movedColumn < 0;\n      });\n      var tooHighMovedColumnIndex = movedColumns.some(function (movedColumn) {\n        return movedColumn >= length;\n      });\n\n      if (tooHighDestinationIndex || tooLowDestinationIndex || tooLowMovedColumnIndex || tooHighMovedColumnIndex) {\n        return false;\n      }\n\n      return true;\n    }\n    /**\n     * Indicates if order of columns was changed.\n     *\n     * @private\n     * @param {Array} movedColumns Array of visual column indexes to be moved.\n     * @param {number} finalIndex Visual column index, being a start index for the moved columns. Points to where the elements will be placed after the moving action.\n     * To check the visualization of the final index, please take a look at [documentation](@/guides/columns/column-moving.md#drag-and-move-actions-of-manualcolumnmove-plugin).\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isColumnOrderChanged\",\n    value: function isColumnOrderChanged(movedColumns, finalIndex) {\n      return movedColumns.some(function (column, nrOfMovedElement) {\n        return column - nrOfMovedElement !== finalIndex;\n      });\n    }\n    /**\n     * Count the final column index from the drop index.\n     *\n     * @private\n     * @param {Array} movedColumns Array of visual column indexes to be moved.\n     * @param {number} dropIndex Visual column index, being a drop index for the moved columns.\n     * @returns {number} Visual column index, being a start index for the moved columns.\n     */\n\n  }, {\n    key: \"countFinalIndex\",\n    value: function countFinalIndex(movedColumns, dropIndex) {\n      var numberOfColumnsLowerThanDropIndex = arrayReduce(movedColumns, function (numberOfColumns, currentColumnIndex) {\n        if (currentColumnIndex < dropIndex) {\n          numberOfColumns += 1;\n        }\n\n        return numberOfColumns;\n      }, 0);\n      return dropIndex - numberOfColumnsLowerThanDropIndex;\n    }\n    /**\n     * Gets the sum of the widths of columns in the provided range.\n     *\n     * @private\n     * @param {number} fromColumn Visual column index.\n     * @param {number} toColumn Visual column index.\n     * @returns {number}\n     */\n\n  }, {\n    key: \"getColumnsWidth\",\n    value: function getColumnsWidth(fromColumn, toColumn) {\n      var columnMapper = this.hot.columnIndexMapper;\n      var columnsWidth = 0;\n\n      for (var visualColumnIndex = fromColumn; visualColumnIndex <= toColumn; visualColumnIndex += 1) {\n        // We can't use just `getColWidth` (even without indexes translation) as it doesn't return proper values\n        // when column is stretched.\n        var renderableIndex = columnMapper.getRenderableFromVisualIndex(visualColumnIndex);\n\n        if (visualColumnIndex < 0) {\n          columnsWidth += this.hot.view.wt.wtViewport.getRowHeaderWidth() || 0;\n        } else if (renderableIndex !== null) {\n          columnsWidth += this.hot.view.wt.wtTable.getStretchedColumnWidth(renderableIndex) || 0;\n        }\n      }\n\n      return columnsWidth;\n    }\n    /**\n     * Loads initial settings when persistent state is saved or when plugin was initialized as an array.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"moveBySettingsOrLoad\",\n    value: function moveBySettingsOrLoad() {\n      var pluginSettings = this.hot.getSettings()[PLUGIN_KEY];\n\n      if (Array.isArray(pluginSettings)) {\n        this.moveColumns(pluginSettings, 0);\n      } else if (pluginSettings !== void 0) {\n        var persistentState = this.persistentStateLoad();\n\n        if (persistentState.length) {\n          this.moveColumns(persistentState, 0);\n        }\n      }\n    }\n    /**\n     * Checks if the provided column is in the fixedColumnsTop section.\n     *\n     * @private\n     * @param {number} column Visual column index to check.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isFixedColumnsLeft\",\n    value: function isFixedColumnsLeft(column) {\n      return column < this.hot.getSettings().fixedColumnsLeft;\n    }\n    /**\n     * Saves the manual column positions to the persistent state (the {@link Options#persistentState} option has to be enabled).\n     *\n     * @private\n     * @fires Hooks#persistentStateSave\n     */\n\n  }, {\n    key: \"persistentStateSave\",\n    value: function persistentStateSave() {\n      this.hot.runHooks('persistentStateSave', 'manualColumnMove', this.hot.columnIndexMapper.getIndexesSequence()); // The `PersistentState` plugin should be refactored.\n    }\n    /**\n     * Loads the manual column positions from the persistent state (the {@link Options#persistentState} option has to be enabled).\n     *\n     * @private\n     * @fires Hooks#persistentStateLoad\n     * @returns {Array} Stored state.\n     */\n\n  }, {\n    key: \"persistentStateLoad\",\n    value: function persistentStateLoad() {\n      var storedState = {};\n      this.hot.runHooks('persistentStateLoad', 'manualColumnMove', storedState);\n      return storedState.value ? storedState.value : [];\n    }\n    /**\n     * Prepares an array of indexes based on actual selection.\n     *\n     * @private\n     * @param {number} start The start index.\n     * @param {number} end The end index.\n     * @returns {Array}\n     */\n\n  }, {\n    key: \"prepareColumnsToMoving\",\n    value: function prepareColumnsToMoving(start, end) {\n      var selectedColumns = [];\n      rangeEach(start, end, function (i) {\n        selectedColumns.push(i);\n      });\n      return selectedColumns;\n    }\n    /**\n     * Update the UI visual position.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"refreshPositions\",\n    value: function refreshPositions() {\n      var priv = privatePool.get(this);\n      var firstVisible = this.hot.view.wt.wtTable.getFirstVisibleColumn();\n      var lastVisible = this.hot.view.wt.wtTable.getLastVisibleColumn();\n      var wtTable = this.hot.view.wt.wtTable;\n      var scrollableElement = this.hot.view.wt.wtOverlays.scrollableElement;\n      var scrollLeft = typeof scrollableElement.scrollX === 'number' ? scrollableElement.scrollX : scrollableElement.scrollLeft;\n      var tdOffsetLeft = this.hot.view.THEAD.offsetLeft + this.getColumnsWidth(0, priv.coords - 1);\n      var mouseOffsetLeft = priv.target.eventPageX - (priv.rootElementOffset - (scrollableElement.scrollX === void 0 ? scrollLeft : 0)); // eslint-disable-line max-len\n\n      var hiderWidth = wtTable.hider.offsetWidth;\n      var tbodyOffsetLeft = wtTable.TBODY.offsetLeft;\n      var backlightElemMarginLeft = this.backlight.getOffset().left;\n      var backlightElemWidth = this.backlight.getSize().width;\n      var rowHeaderWidth = 0;\n\n      if (priv.rootElementOffset + wtTable.holder.offsetWidth + scrollLeft < priv.target.eventPageX) {\n        if (priv.coords < priv.countCols) {\n          priv.coords += 1;\n        }\n      }\n\n      if (priv.hasRowHeaders) {\n        rowHeaderWidth = this.hot.view.wt.wtOverlays.leftOverlay.clone.wtTable.getColumnHeader(-1).offsetWidth;\n      }\n\n      if (this.isFixedColumnsLeft(priv.coords)) {\n        tdOffsetLeft += scrollLeft;\n      }\n\n      tdOffsetLeft += rowHeaderWidth;\n\n      if (priv.coords < 0) {\n        // if hover on rowHeader\n        if (priv.fixedColumns > 0) {\n          priv.target.col = 0;\n        } else {\n          priv.target.col = firstVisible > 0 ? firstVisible - 1 : firstVisible;\n        }\n      } else if (priv.target.TD.offsetWidth / 2 + tdOffsetLeft <= mouseOffsetLeft) {\n        var newCoordsCol = priv.coords >= priv.countCols ? priv.countCols - 1 : priv.coords; // if hover on right part of TD\n\n        priv.target.col = newCoordsCol + 1; // unfortunately first column is bigger than rest\n\n        tdOffsetLeft += priv.target.TD.offsetWidth;\n\n        if (priv.target.col > lastVisible && lastVisible < priv.countCols) {\n          this.hot.scrollViewportTo(void 0, lastVisible + 1, void 0, true);\n        }\n      } else {\n        // elsewhere on table\n        priv.target.col = priv.coords;\n\n        if (priv.target.col <= firstVisible && priv.target.col >= priv.fixedColumns && firstVisible > 0) {\n          this.hot.scrollViewportTo(void 0, firstVisible - 1);\n        }\n      }\n\n      if (priv.target.col <= firstVisible && priv.target.col >= priv.fixedColumns && firstVisible > 0) {\n        this.hot.scrollViewportTo(void 0, firstVisible - 1);\n      }\n\n      var backlightLeft = mouseOffsetLeft;\n      var guidelineLeft = tdOffsetLeft;\n\n      if (mouseOffsetLeft + backlightElemWidth + backlightElemMarginLeft >= hiderWidth) {\n        // prevent display backlight on the right side of the table\n        backlightLeft = hiderWidth - backlightElemWidth - backlightElemMarginLeft;\n      } else if (mouseOffsetLeft + backlightElemMarginLeft < tbodyOffsetLeft + rowHeaderWidth) {\n        // prevent display backlight on the left side of the table\n        backlightLeft = tbodyOffsetLeft + rowHeaderWidth + Math.abs(backlightElemMarginLeft);\n      }\n\n      if (tdOffsetLeft >= hiderWidth - 1) {\n        // prevent display guideline outside the table\n        guidelineLeft = hiderWidth - 1;\n      } else if (guidelineLeft === 0) {\n        // guideline has got `margin-left: -1px` as default\n        guidelineLeft = 1;\n      } else if (scrollableElement.scrollX !== void 0 && priv.coords < priv.fixedColumns) {\n        guidelineLeft -= priv.rootElementOffset <= scrollableElement.scrollX ? priv.rootElementOffset : 0;\n      }\n\n      this.backlight.setPosition(null, backlightLeft);\n      this.guideline.setPosition(null, guidelineLeft);\n    }\n    /**\n     * Binds the events used by the plugin.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"registerEvents\",\n    value: function registerEvents() {\n      var _this3 = this;\n\n      var documentElement = this.hot.rootDocument.documentElement;\n      this.eventManager.addEventListener(documentElement, 'mousemove', function (event) {\n        return _this3.onMouseMove(event);\n      });\n      this.eventManager.addEventListener(documentElement, 'mouseup', function () {\n        return _this3.onMouseUp();\n      });\n    }\n    /**\n     * Unbinds the events used by the plugin.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"unregisterEvents\",\n    value: function unregisterEvents() {\n      this.eventManager.clear();\n    }\n    /**\n     * Change the behavior of selection / dragging.\n     *\n     * @private\n     * @param {MouseEvent} event `mousedown` event properties.\n     * @param {CellCoords} coords Visual cell coordinates where was fired event.\n     * @param {HTMLElement} TD Cell represented as HTMLElement.\n     * @param {object} controller An object with properties `row`, `column` and `cell`. Each property contains\n     *                            a boolean value that allows or disallows changing the selection for that particular area.\n     */\n\n  }, {\n    key: \"onBeforeOnCellMouseDown\",\n    value: function onBeforeOnCellMouseDown(event, coords, TD, controller) {\n      var wtTable = this.hot.view.wt.wtTable;\n      var isHeaderSelection = this.hot.selection.isSelectedByColumnHeader();\n      var selection = this.hot.getSelectedRangeLast();\n      var priv = privatePool.get(this); // This block action shouldn't be handled below.\n\n      var isSortingElement = hasClass(event.target, 'sortAction');\n\n      if (!selection || !isHeaderSelection || priv.pressed || event.button !== 0 || isSortingElement) {\n        priv.pressed = false;\n        priv.columnsToMove.length = 0;\n        removeClass(this.hot.rootElement, [CSS_ON_MOVING, CSS_SHOW_UI]);\n        return;\n      }\n\n      var guidelineIsNotReady = this.guideline.isBuilt() && !this.guideline.isAppended();\n      var backlightIsNotReady = this.backlight.isBuilt() && !this.backlight.isAppended();\n\n      if (guidelineIsNotReady && backlightIsNotReady) {\n        this.guideline.appendTo(wtTable.hider);\n        this.backlight.appendTo(wtTable.hider);\n      }\n\n      var from = selection.from,\n          to = selection.to;\n      var start = Math.min(from.col, to.col);\n      var end = Math.max(from.col, to.col);\n\n      if (coords.row < 0 && coords.col >= start && coords.col <= end) {\n        controller.column = true;\n        priv.pressed = true;\n        priv.target.eventPageX = event.pageX;\n        priv.coords = coords.col;\n        priv.target.TD = TD;\n        priv.target.col = coords.col;\n        priv.columnsToMove = this.prepareColumnsToMoving(start, end);\n        priv.hasRowHeaders = !!this.hot.getSettings().rowHeaders;\n        priv.countCols = this.hot.countCols();\n        priv.fixedColumns = this.hot.getSettings().fixedColumnsLeft;\n        priv.rootElementOffset = offset(this.hot.rootElement).left;\n        var countColumnsFrom = priv.hasRowHeaders ? -1 : 0;\n        var topPos = wtTable.holder.scrollTop + wtTable.getColumnHeaderHeight(0) + 1;\n        var fixedColumns = coords.col < priv.fixedColumns;\n        var scrollableElement = this.hot.view.wt.wtOverlays.scrollableElement;\n        var wrapperIsWindow = scrollableElement.scrollX ? scrollableElement.scrollX - priv.rootElementOffset : 0;\n        var mouseOffset = event.offsetX - (fixedColumns ? wrapperIsWindow : 0);\n        var leftOffset = Math.abs(this.getColumnsWidth(start, coords.col - 1) + mouseOffset);\n        this.backlight.setPosition(topPos, this.getColumnsWidth(countColumnsFrom, start - 1) + leftOffset);\n        this.backlight.setSize(this.getColumnsWidth(start, end), wtTable.hider.offsetHeight - topPos);\n        this.backlight.setOffset(null, leftOffset * -1);\n        addClass(this.hot.rootElement, CSS_ON_MOVING);\n      } else {\n        removeClass(this.hot.rootElement, CSS_AFTER_SELECTION);\n        priv.pressed = false;\n        priv.columnsToMove.length = 0;\n      }\n    }\n    /**\n     * 'mouseMove' event callback. Fired when pointer move on document.documentElement.\n     *\n     * @private\n     * @param {MouseEvent} event `mousemove` event properties.\n     */\n\n  }, {\n    key: \"onMouseMove\",\n    value: function onMouseMove(event) {\n      var priv = privatePool.get(this);\n\n      if (!priv.pressed) {\n        return;\n      } // callback for browser which doesn't supports CSS pointer-event: none\n\n\n      if (event.target === this.backlight.element) {\n        var width = this.backlight.getSize().width;\n        this.backlight.setSize(0);\n        setTimeout(function () {\n          this.backlight.setPosition(width);\n        });\n      }\n\n      priv.target.eventPageX = event.pageX;\n      this.refreshPositions();\n    }\n    /**\n     * 'beforeOnCellMouseOver' hook callback. Fired when pointer was over cell.\n     *\n     * @private\n     * @param {MouseEvent} event `mouseover` event properties.\n     * @param {CellCoords} coords Visual cell coordinates where was fired event.\n     * @param {HTMLElement} TD Cell represented as HTMLElement.\n     * @param {object} controller An object with properties `row`, `column` and `cell`. Each property contains\n     *                            a boolean value that allows or disallows changing the selection for that particular area.\n     */\n\n  }, {\n    key: \"onBeforeOnCellMouseOver\",\n    value: function onBeforeOnCellMouseOver(event, coords, TD, controller) {\n      var selectedRange = this.hot.getSelectedRangeLast();\n      var priv = privatePool.get(this);\n\n      if (!selectedRange || !priv.pressed) {\n        return;\n      }\n\n      if (priv.columnsToMove.indexOf(coords.col) > -1) {\n        removeClass(this.hot.rootElement, CSS_SHOW_UI);\n      } else {\n        addClass(this.hot.rootElement, CSS_SHOW_UI);\n      }\n\n      controller.row = true;\n      controller.column = true;\n      controller.cell = true;\n      priv.coords = coords.col;\n      priv.target.TD = TD;\n    }\n    /**\n     * `onMouseUp` hook callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onMouseUp\",\n    value: function onMouseUp() {\n      var priv = privatePool.get(this);\n      var target = priv.target.col;\n      var columnsLen = priv.columnsToMove.length;\n      priv.coords = void 0;\n      priv.pressed = false;\n      priv.backlightWidth = 0;\n      removeClass(this.hot.rootElement, [CSS_ON_MOVING, CSS_SHOW_UI, CSS_AFTER_SELECTION]);\n\n      if (this.hot.selection.isSelectedByColumnHeader()) {\n        addClass(this.hot.rootElement, CSS_AFTER_SELECTION);\n      }\n\n      if (columnsLen < 1 || target === void 0) {\n        return;\n      }\n\n      var firstMovedVisualColumn = priv.columnsToMove[0];\n      var firstMovedPhysicalColumn = this.hot.toPhysicalColumn(firstMovedVisualColumn);\n      var movePerformed = this.dragColumns(priv.columnsToMove, target);\n      priv.columnsToMove.length = 0;\n\n      if (movePerformed === true) {\n        this.persistentStateSave();\n        this.hot.render();\n        this.hot.view.adjustElementsSize(true);\n        var selectionStart = this.hot.toVisualColumn(firstMovedPhysicalColumn);\n        var selectionEnd = selectionStart + columnsLen - 1;\n        this.hot.selectColumns(selectionStart, selectionEnd);\n      }\n    }\n    /**\n     * `afterScrollHorizontally` hook callback. Fired the table was scrolled horizontally.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onAfterScrollVertically\",\n    value: function onAfterScrollVertically() {\n      var wtTable = this.hot.view.wt.wtTable;\n      var headerHeight = wtTable.getColumnHeaderHeight(0) + 1;\n      var scrollTop = wtTable.holder.scrollTop;\n      var posTop = headerHeight + scrollTop;\n      this.backlight.setPosition(posTop);\n      this.backlight.setSize(null, wtTable.hider.offsetHeight - posTop);\n    }\n    /**\n     * Builds the plugin's UI.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"buildPluginUI\",\n    value: function buildPluginUI() {\n      this.backlight.build();\n      this.guideline.build();\n    }\n    /**\n     * Callback for the `afterLoadData` hook.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onAfterLoadData\",\n    value: function onAfterLoadData() {\n      this.moveBySettingsOrLoad();\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.backlight.destroy();\n      this.guideline.destroy();\n\n      _get(_getPrototypeOf(ManualColumnMove.prototype), \"destroy\", this).call(this);\n    }\n  }], [{\n    key: \"PLUGIN_KEY\",\n    get: function get() {\n      return PLUGIN_KEY;\n    }\n  }, {\n    key: \"PLUGIN_PRIORITY\",\n    get: function get() {\n      return PLUGIN_PRIORITY;\n    }\n  }]);\n\n  return ManualColumnMove;\n}(BasePlugin);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
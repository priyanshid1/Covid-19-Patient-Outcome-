{"ast":null,"code":"function _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nimport { createHighlight } from \"./types/index.mjs\";\nimport { ACTIVE_HEADER_TYPE, AREA_TYPE, CELL_TYPE, CUSTOM_SELECTION_TYPE, FILL_TYPE, HEADER_TYPE } from \"./constants.mjs\";\nimport { arrayEach } from \"./../../helpers/array.mjs\";\n/**\n * Highlight class responsible for managing Walkontable Selection classes.\n *\n * With Highlight object you can manipulate four different highlight types:\n *  - `cell` can be added only to a single cell at a time and it defines currently selected cell;\n *  - `fill` can occur only once and its highlight defines selection of autofill functionality (managed by the plugin with the same name);\n *  - `areas` can be added to multiple cells at a time. This type highlights selected cell or multiple cells.\n *    The multiple cells have to be defined as an uninterrupted order (regular shape). Otherwise, the new layer of\n *    that type should be created to manage not-consecutive selection;\n *  - `header` can occur multiple times. This type is designed to highlight only headers. Like `area` type it\n *    can appear with multiple highlights (accessed under different level layers).\n *\n * @class Highlight\n * @util\n */\n\nvar Highlight = /*#__PURE__*/function (_Symbol$iterator) {\n  function Highlight(options) {\n    _classCallCheck(this, Highlight);\n\n    /**\n     * Options consumed by Highlight class and Walkontable Selection classes.\n     *\n     * @type {object}\n     */\n    this.options = options;\n    /**\n     * The property which describes which layer level of the visual selection will be modified.\n     * This option is valid only for `area` and `header` highlight types which occurs multiple times on\n     * the table (as a non-consecutive selection).\n     *\n     * An order of the layers is the same as the order of added new non-consecutive selections.\n     *\n     * @type {number}\n     * @default 0\n     */\n\n    this.layerLevel = 0;\n    /**\n     * `cell` highlight object which describes attributes for the currently selected cell.\n     * It can only occur only once on the table.\n     *\n     * @type {Selection}\n     */\n\n    this.cell = createHighlight(CELL_TYPE, options);\n    /**\n     * `fill` highlight object which describes attributes for the borders for autofill functionality.\n     * It can only occur only once on the table.\n     *\n     * @type {Selection}\n     */\n\n    this.fill = createHighlight(FILL_TYPE, options);\n    /**\n     * Collection of the `area` highlights. That objects describes attributes for the borders and selection of\n     * the multiple selected cells. It can occur multiple times on the table.\n     *\n     * @type {Map.<number, Selection>}\n     */\n\n    this.areas = new Map();\n    /**\n     * Collection of the `header` highlights. That objects describes attributes for the selection of\n     * the multiple selected rows and columns in the table header. It can occur multiple times on the table.\n     *\n     * @type {Map.<number, Selection>}\n     */\n\n    this.headers = new Map();\n    /**\n     * Collection of the `active-header` highlights. That objects describes attributes for the selection of\n     * the multiple selected rows and columns in the table header. The table headers which have selected all items in\n     * a row will be marked as `active-header`.\n     *\n     * @type {Map.<number, Selection>}\n     */\n\n    this.activeHeaders = new Map();\n    /**\n     * Collection of the `custom-selection`, holder for example borders added through CustomBorders plugin.\n     *\n     * @type {Selection[]}\n     */\n\n    this.customSelections = [];\n  }\n  /**\n   * Check if highlight cell rendering is disabled for specified highlight type.\n   *\n   * @param {string} highlightType Highlight type. Possible values are: `cell`, `area`, `fill` or `header`.\n   * @param {CellCoords} coords The CellCoords instance with defined visual coordinates.\n   * @returns {boolean}\n   */\n\n  _createClass(Highlight, [{\n    key: \"isEnabledFor\",\n    value: function isEnabledFor(highlightType, coords) {\n      var type = highlightType; // Legacy compatibility.\n\n      if (highlightType === CELL_TYPE) {\n        type = 'current'; // One from settings for `disableVisualSelection` up to Handsontable 0.36/Handsontable Pro 1.16.0.\n      }\n      var disableHighlight = this.options.disabledCellSelection(coords.row, coords.col);\n      if (typeof disableHighlight === 'string') {\n        disableHighlight = [disableHighlight];\n      }\n      return disableHighlight === false || Array.isArray(disableHighlight) && !disableHighlight.includes(type);\n    }\n    /**\n     * Set a new layer level to make access to the desire `area` and `header` highlights.\n     *\n     * @param {number} [level=0] Layer level to use.\n     * @returns {Highlight}\n     */\n  }, {\n    key: \"useLayerLevel\",\n    value: function useLayerLevel() {\n      var level = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      this.layerLevel = level;\n      return this;\n    }\n    /**\n     * Get Walkontable Selection instance created for controlling highlight of the currently selected/edited cell.\n     *\n     * @returns {Selection}\n     */\n  }, {\n    key: \"getCell\",\n    value: function getCell() {\n      return this.cell;\n    }\n    /**\n     * Get Walkontable Selection instance created for controlling highlight of the autofill functionality.\n     *\n     * @returns {Selection}\n     */\n  }, {\n    key: \"getFill\",\n    value: function getFill() {\n      return this.fill;\n    }\n    /**\n     * Get or create (if not exist in the cache) Walkontable Selection instance created for controlling highlight\n     * of the multiple selected cells.\n     *\n     * @returns {Selection}\n     */\n  }, {\n    key: \"createOrGetArea\",\n    value: function createOrGetArea() {\n      var layerLevel = this.layerLevel;\n      var area;\n      if (this.areas.has(layerLevel)) {\n        area = this.areas.get(layerLevel);\n      } else {\n        area = createHighlight(AREA_TYPE, _objectSpread({\n          layerLevel: layerLevel\n        }, this.options));\n        this.areas.set(layerLevel, area);\n      }\n      return area;\n    }\n    /**\n     * Get all Walkontable Selection instances which describes the state of the visual highlight of the cells.\n     *\n     * @returns {Selection[]}\n     */\n  }, {\n    key: \"getAreas\",\n    value: function getAreas() {\n      return _toConsumableArray(this.areas.values());\n    }\n    /**\n     * Get or create (if not exist in the cache) Walkontable Selection instance created for controlling highlight\n     * of the multiple selected header cells.\n     *\n     * @returns {Selection}\n     */\n  }, {\n    key: \"createOrGetHeader\",\n    value: function createOrGetHeader() {\n      var layerLevel = this.layerLevel;\n      var header;\n      if (this.headers.has(layerLevel)) {\n        header = this.headers.get(layerLevel);\n      } else {\n        header = createHighlight(HEADER_TYPE, _objectSpread({}, this.options));\n        this.headers.set(layerLevel, header);\n      }\n      return header;\n    }\n    /**\n     * Get all Walkontable Selection instances which describes the state of the visual highlight of the headers.\n     *\n     * @returns {Selection[]}\n     */\n  }, {\n    key: \"getHeaders\",\n    value: function getHeaders() {\n      return _toConsumableArray(this.headers.values());\n    }\n    /**\n     * Get or create (if not exist in the cache) Walkontable Selection instance created for controlling highlight\n     * of the multiple selected active header cells.\n     *\n     * @returns {Selection}\n     */\n  }, {\n    key: \"createOrGetActiveHeader\",\n    value: function createOrGetActiveHeader() {\n      var layerLevel = this.layerLevel;\n      var header;\n      if (this.activeHeaders.has(layerLevel)) {\n        header = this.activeHeaders.get(layerLevel);\n      } else {\n        header = createHighlight(ACTIVE_HEADER_TYPE, _objectSpread({}, this.options));\n        this.activeHeaders.set(layerLevel, header);\n      }\n      return header;\n    }\n    /**\n     * Get all Walkontable Selection instances which describes the state of the visual highlight of the active headers.\n     *\n     * @returns {Selection[]}\n     */\n  }, {\n    key: \"getActiveHeaders\",\n    value: function getActiveHeaders() {\n      return _toConsumableArray(this.activeHeaders.values());\n    }\n    /**\n     * Get Walkontable Selection instance created for controlling highlight of the custom selection functionality.\n     *\n     * @returns {Selection}\n     */\n  }, {\n    key: \"getCustomSelections\",\n    value: function getCustomSelections() {\n      return _toConsumableArray(this.customSelections.values());\n    }\n    /**\n     * Add selection to the custom selection instance. The new selection are added to the end of the selection collection.\n     *\n     * @param {object} selectionInstance The selection instance.\n     */\n  }, {\n    key: \"addCustomSelection\",\n    value: function addCustomSelection(selectionInstance) {\n      this.customSelections.push(createHighlight(CUSTOM_SELECTION_TYPE, _objectSpread(_objectSpread({}, this.options), selectionInstance)));\n    }\n    /**\n     * Perform cleaning visual highlights for the whole table.\n     */\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.cell.clear();\n      this.fill.clear();\n      arrayEach(this.areas.values(), function (highlight) {\n        return void highlight.clear();\n      });\n      arrayEach(this.headers.values(), function (highlight) {\n        return void highlight.clear();\n      });\n      arrayEach(this.activeHeaders.values(), function (highlight) {\n        return void highlight.clear();\n      });\n    }\n    /**\n     * This object can be iterate over using `for of` syntax or using internal `arrayEach` helper.\n     *\n     * @returns {Selection[]}\n     */\n  }, {\n    key: _Symbol$iterator,\n    value: function value() {\n      return [this.cell, this.fill].concat(_toConsumableArray(this.areas.values()), _toConsumableArray(this.headers.values()), _toConsumableArray(this.activeHeaders.values()), _toConsumableArray(this.customSelections))[Symbol.iterator]();\n    }\n  }]);\n  return Highlight;\n}(Symbol.iterator);\nexport default Highlight;","map":{"version":3,"names":["_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","iter","Symbol","iterator","isArray","len","length","i","arr2","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","arguments","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","createHighlight","ACTIVE_HEADER_TYPE","AREA_TYPE","CELL_TYPE","CUSTOM_SELECTION_TYPE","FILL_TYPE","HEADER_TYPE","arrayEach","Highlight","_Symbol$iterator","options","layerLevel","cell","fill","areas","Map","headers","activeHeaders","customSelections","isEnabledFor","highlightType","coords","type","disableHighlight","disabledCellSelection","row","col","includes","useLayerLevel","level","undefined","getCell","getFill","createOrGetArea","area","has","get","set","getAreas","values","createOrGetHeader","header","getHeaders","createOrGetActiveHeader","getActiveHeaders","getCustomSelections","addCustomSelection","selectionInstance","clear","highlight","concat"],"sources":["/Users/priyadeliwala/Desktop/sales-dashboard/node_modules/handsontable/selection/highlight/highlight.mjs"],"sourcesContent":["function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport \"core-js/modules/es.array.fill.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nimport { createHighlight } from \"./types/index.mjs\";\nimport { ACTIVE_HEADER_TYPE, AREA_TYPE, CELL_TYPE, CUSTOM_SELECTION_TYPE, FILL_TYPE, HEADER_TYPE } from \"./constants.mjs\";\nimport { arrayEach } from \"./../../helpers/array.mjs\";\n/**\n * Highlight class responsible for managing Walkontable Selection classes.\n *\n * With Highlight object you can manipulate four different highlight types:\n *  - `cell` can be added only to a single cell at a time and it defines currently selected cell;\n *  - `fill` can occur only once and its highlight defines selection of autofill functionality (managed by the plugin with the same name);\n *  - `areas` can be added to multiple cells at a time. This type highlights selected cell or multiple cells.\n *    The multiple cells have to be defined as an uninterrupted order (regular shape). Otherwise, the new layer of\n *    that type should be created to manage not-consecutive selection;\n *  - `header` can occur multiple times. This type is designed to highlight only headers. Like `area` type it\n *    can appear with multiple highlights (accessed under different level layers).\n *\n * @class Highlight\n * @util\n */\n\nvar Highlight = /*#__PURE__*/function (_Symbol$iterator) {\n  function Highlight(options) {\n    _classCallCheck(this, Highlight);\n\n    /**\n     * Options consumed by Highlight class and Walkontable Selection classes.\n     *\n     * @type {object}\n     */\n    this.options = options;\n    /**\n     * The property which describes which layer level of the visual selection will be modified.\n     * This option is valid only for `area` and `header` highlight types which occurs multiple times on\n     * the table (as a non-consecutive selection).\n     *\n     * An order of the layers is the same as the order of added new non-consecutive selections.\n     *\n     * @type {number}\n     * @default 0\n     */\n\n    this.layerLevel = 0;\n    /**\n     * `cell` highlight object which describes attributes for the currently selected cell.\n     * It can only occur only once on the table.\n     *\n     * @type {Selection}\n     */\n\n    this.cell = createHighlight(CELL_TYPE, options);\n    /**\n     * `fill` highlight object which describes attributes for the borders for autofill functionality.\n     * It can only occur only once on the table.\n     *\n     * @type {Selection}\n     */\n\n    this.fill = createHighlight(FILL_TYPE, options);\n    /**\n     * Collection of the `area` highlights. That objects describes attributes for the borders and selection of\n     * the multiple selected cells. It can occur multiple times on the table.\n     *\n     * @type {Map.<number, Selection>}\n     */\n\n    this.areas = new Map();\n    /**\n     * Collection of the `header` highlights. That objects describes attributes for the selection of\n     * the multiple selected rows and columns in the table header. It can occur multiple times on the table.\n     *\n     * @type {Map.<number, Selection>}\n     */\n\n    this.headers = new Map();\n    /**\n     * Collection of the `active-header` highlights. That objects describes attributes for the selection of\n     * the multiple selected rows and columns in the table header. The table headers which have selected all items in\n     * a row will be marked as `active-header`.\n     *\n     * @type {Map.<number, Selection>}\n     */\n\n    this.activeHeaders = new Map();\n    /**\n     * Collection of the `custom-selection`, holder for example borders added through CustomBorders plugin.\n     *\n     * @type {Selection[]}\n     */\n\n    this.customSelections = [];\n  }\n  /**\n   * Check if highlight cell rendering is disabled for specified highlight type.\n   *\n   * @param {string} highlightType Highlight type. Possible values are: `cell`, `area`, `fill` or `header`.\n   * @param {CellCoords} coords The CellCoords instance with defined visual coordinates.\n   * @returns {boolean}\n   */\n\n\n  _createClass(Highlight, [{\n    key: \"isEnabledFor\",\n    value: function isEnabledFor(highlightType, coords) {\n      var type = highlightType; // Legacy compatibility.\n\n      if (highlightType === CELL_TYPE) {\n        type = 'current'; // One from settings for `disableVisualSelection` up to Handsontable 0.36/Handsontable Pro 1.16.0.\n      }\n\n      var disableHighlight = this.options.disabledCellSelection(coords.row, coords.col);\n\n      if (typeof disableHighlight === 'string') {\n        disableHighlight = [disableHighlight];\n      }\n\n      return disableHighlight === false || Array.isArray(disableHighlight) && !disableHighlight.includes(type);\n    }\n    /**\n     * Set a new layer level to make access to the desire `area` and `header` highlights.\n     *\n     * @param {number} [level=0] Layer level to use.\n     * @returns {Highlight}\n     */\n\n  }, {\n    key: \"useLayerLevel\",\n    value: function useLayerLevel() {\n      var level = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      this.layerLevel = level;\n      return this;\n    }\n    /**\n     * Get Walkontable Selection instance created for controlling highlight of the currently selected/edited cell.\n     *\n     * @returns {Selection}\n     */\n\n  }, {\n    key: \"getCell\",\n    value: function getCell() {\n      return this.cell;\n    }\n    /**\n     * Get Walkontable Selection instance created for controlling highlight of the autofill functionality.\n     *\n     * @returns {Selection}\n     */\n\n  }, {\n    key: \"getFill\",\n    value: function getFill() {\n      return this.fill;\n    }\n    /**\n     * Get or create (if not exist in the cache) Walkontable Selection instance created for controlling highlight\n     * of the multiple selected cells.\n     *\n     * @returns {Selection}\n     */\n\n  }, {\n    key: \"createOrGetArea\",\n    value: function createOrGetArea() {\n      var layerLevel = this.layerLevel;\n      var area;\n\n      if (this.areas.has(layerLevel)) {\n        area = this.areas.get(layerLevel);\n      } else {\n        area = createHighlight(AREA_TYPE, _objectSpread({\n          layerLevel: layerLevel\n        }, this.options));\n        this.areas.set(layerLevel, area);\n      }\n\n      return area;\n    }\n    /**\n     * Get all Walkontable Selection instances which describes the state of the visual highlight of the cells.\n     *\n     * @returns {Selection[]}\n     */\n\n  }, {\n    key: \"getAreas\",\n    value: function getAreas() {\n      return _toConsumableArray(this.areas.values());\n    }\n    /**\n     * Get or create (if not exist in the cache) Walkontable Selection instance created for controlling highlight\n     * of the multiple selected header cells.\n     *\n     * @returns {Selection}\n     */\n\n  }, {\n    key: \"createOrGetHeader\",\n    value: function createOrGetHeader() {\n      var layerLevel = this.layerLevel;\n      var header;\n\n      if (this.headers.has(layerLevel)) {\n        header = this.headers.get(layerLevel);\n      } else {\n        header = createHighlight(HEADER_TYPE, _objectSpread({}, this.options));\n        this.headers.set(layerLevel, header);\n      }\n\n      return header;\n    }\n    /**\n     * Get all Walkontable Selection instances which describes the state of the visual highlight of the headers.\n     *\n     * @returns {Selection[]}\n     */\n\n  }, {\n    key: \"getHeaders\",\n    value: function getHeaders() {\n      return _toConsumableArray(this.headers.values());\n    }\n    /**\n     * Get or create (if not exist in the cache) Walkontable Selection instance created for controlling highlight\n     * of the multiple selected active header cells.\n     *\n     * @returns {Selection}\n     */\n\n  }, {\n    key: \"createOrGetActiveHeader\",\n    value: function createOrGetActiveHeader() {\n      var layerLevel = this.layerLevel;\n      var header;\n\n      if (this.activeHeaders.has(layerLevel)) {\n        header = this.activeHeaders.get(layerLevel);\n      } else {\n        header = createHighlight(ACTIVE_HEADER_TYPE, _objectSpread({}, this.options));\n        this.activeHeaders.set(layerLevel, header);\n      }\n\n      return header;\n    }\n    /**\n     * Get all Walkontable Selection instances which describes the state of the visual highlight of the active headers.\n     *\n     * @returns {Selection[]}\n     */\n\n  }, {\n    key: \"getActiveHeaders\",\n    value: function getActiveHeaders() {\n      return _toConsumableArray(this.activeHeaders.values());\n    }\n    /**\n     * Get Walkontable Selection instance created for controlling highlight of the custom selection functionality.\n     *\n     * @returns {Selection}\n     */\n\n  }, {\n    key: \"getCustomSelections\",\n    value: function getCustomSelections() {\n      return _toConsumableArray(this.customSelections.values());\n    }\n    /**\n     * Add selection to the custom selection instance. The new selection are added to the end of the selection collection.\n     *\n     * @param {object} selectionInstance The selection instance.\n     */\n\n  }, {\n    key: \"addCustomSelection\",\n    value: function addCustomSelection(selectionInstance) {\n      this.customSelections.push(createHighlight(CUSTOM_SELECTION_TYPE, _objectSpread(_objectSpread({}, this.options), selectionInstance)));\n    }\n    /**\n     * Perform cleaning visual highlights for the whole table.\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.cell.clear();\n      this.fill.clear();\n      arrayEach(this.areas.values(), function (highlight) {\n        return void highlight.clear();\n      });\n      arrayEach(this.headers.values(), function (highlight) {\n        return void highlight.clear();\n      });\n      arrayEach(this.activeHeaders.values(), function (highlight) {\n        return void highlight.clear();\n      });\n    }\n    /**\n     * This object can be iterate over using `for of` syntax or using internal `arrayEach` helper.\n     *\n     * @returns {Selection[]}\n     */\n\n  }, {\n    key: _Symbol$iterator,\n    value: function value() {\n      return [this.cell, this.fill].concat(_toConsumableArray(this.areas.values()), _toConsumableArray(this.headers.values()), _toConsumableArray(this.activeHeaders.values()), _toConsumableArray(this.customSelections))[Symbol.iterator]();\n    }\n  }]);\n\n  return Highlight;\n}(Symbol.iterator);\n\nexport default Highlight;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
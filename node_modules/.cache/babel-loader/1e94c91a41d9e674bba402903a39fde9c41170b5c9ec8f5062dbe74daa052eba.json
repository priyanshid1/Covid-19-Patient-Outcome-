{"ast":null,"code":"var _jsxFileName = \"/Users/priyadeliwala/Desktop/sales-dashboard/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport DataTable from './components/DataTable';\nimport OutcomeChart from './components/OutcomeChart';\nimport Filter from './components/Filter';\nimport Navbar from './components/Navbar';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [filter, setFilter] = useState({\n    country: ['All'],\n    metrics: ['cases'],\n    // Default to \"Cases\"\n    minValue: 0 // Minimum value for the selected metric\n  });\n  const [activeTab, setActiveTab] = useState('data');\n  const API_URL = 'https://disease.sh/v3/covid-19/countries';\n\n  // Fetch data from the API on component mount\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(API_URL);\n      const outcomes = await response.json();\n      const transformedData = outcomes.map(outcome => ({\n        country: outcome.country,\n        cases: outcome.cases,\n        deaths: outcome.deaths,\n        recovered: outcome.recovered || 0,\n        // Default to 0 if null\n        active: outcome.active,\n        critical: outcome.critical\n      }));\n      setData(transformedData);\n    };\n    fetchData();\n  }, []);\n\n  // Filter data based on selected country, metrics, and minimum value\n  const filteredData = data.filter(item => {\n    const countryMatch = filter.country.includes('All') || filter.country.includes(item.country);\n\n    // Apply the minimum value filter across all selected metrics\n    const metricMatch = filter.metrics.every(metric => item[metric] >= filter.minValue);\n    return countryMatch && metricMatch;\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"COVID-19 Patient Outcome Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-container\",\n        children: /*#__PURE__*/_jsxDEV(Filter, {\n          filter: filter,\n          setFilter: setFilter,\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tab-navigation\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeTab === 'data' ? 'tab active' : 'tab',\n          onClick: () => setActiveTab('data'),\n          children: \"Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeTab === 'chart' ? 'tab active' : 'tab',\n          onClick: () => setActiveTab('chart'),\n          children: \"Chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: activeTab === 'data' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-table-container\",\n          children: [/*#__PURE__*/_jsxDEV(DataTable, {\n            data: filteredData,\n            setData: setData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 26\n        }, this) : /*#__PURE__*/_jsxDEV(OutcomeChart, {\n          data: filteredData,\n          metrics: filter.metrics\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"Q3BewS5UgGobIZ5UOU4zBd1sW8s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","DataTable","OutcomeChart","Filter","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","data","setData","filter","setFilter","country","metrics","minValue","activeTab","setActiveTab","API_URL","fetchData","response","fetch","outcomes","json","transformedData","map","outcome","cases","deaths","recovered","active","critical","filteredData","item","countryMatch","includes","metricMatch","every","metric","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_c","$RefreshReg$"],"sources":["/Users/priyadeliwala/Desktop/sales-dashboard/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport DataTable from './components/DataTable';\nimport OutcomeChart from './components/OutcomeChart';\nimport Filter from './components/Filter';\nimport Navbar from './components/Navbar';\nimport './App.css';\n\nconst App = () => {\n    const [data, setData] = useState([]);\n    const [filter, setFilter] = useState({\n        country: ['All'],\n        metrics: ['cases'],  // Default to \"Cases\"\n        minValue: 0          // Minimum value for the selected metric\n    });\n    const [activeTab, setActiveTab] = useState('data');\n\n    const API_URL = 'https://disease.sh/v3/covid-19/countries';\n\n    // Fetch data from the API on component mount\n    useEffect(() => {\n        const fetchData = async () => {\n            const response = await fetch(API_URL);\n            const outcomes = await response.json();\n            \n            const transformedData = outcomes.map((outcome) => ({\n                country: outcome.country,\n                cases: outcome.cases,\n                deaths: outcome.deaths,\n                recovered: outcome.recovered || 0, // Default to 0 if null\n                active: outcome.active,\n                critical: outcome.critical\n            }));\n            setData(transformedData);\n        };\n\n        fetchData();\n    }, []);\n\n    // Filter data based on selected country, metrics, and minimum value\n    const filteredData = data.filter((item) => {\n        const countryMatch = filter.country.includes('All') || filter.country.includes(item.country);\n        \n        // Apply the minimum value filter across all selected metrics\n        const metricMatch = filter.metrics.every(metric => item[metric] >= filter.minValue);\n        \n        return countryMatch && metricMatch;\n    });\n\n    return (\n        <>\n            <Navbar />\n            <div className=\"App\">\n                <h1>COVID-19 Patient Outcome Dashboard</h1>\n                <div className=\"filter-container\">\n                {/* Pass the data and filter state to the Filter component */}\n                <Filter filter={filter} setFilter={setFilter} data={data} />\n                </div>\n\n                {/* Tab Navigation for Data and Chart Views */}\n                <div className=\"tab-navigation\">\n                    <button \n                        className={activeTab === 'data' ? 'tab active' : 'tab'}\n                        onClick={() => setActiveTab('data')}\n                    >\n                        Data\n                    </button>\n                    <button \n                        className={activeTab === 'chart' ? 'tab active' : 'tab'}\n                        onClick={() => setActiveTab('chart')}\n                    >\n                        Chart\n                    </button>\n                </div>\n\n                {/* Display DataTable or OutcomeChart based on active tab */}\n                <div className=\"chart-container\">\n                    {activeTab === 'data' ? (\n                         <div className=\"data-table-container\">\n                        <DataTable data={filteredData} setData={setData} /> </div>\n                    ) : (\n                        <OutcomeChart data={filteredData} metrics={filter.metrics} />\n                    )}\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
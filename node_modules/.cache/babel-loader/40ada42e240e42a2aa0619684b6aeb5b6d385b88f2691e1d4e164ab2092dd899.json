{"ast":null,"code":"function _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _s, _e;\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n  return _arr;\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nimport { BasePlugin } from \"../base/index.mjs\";\nimport Hooks from \"../../pluginHooks.mjs\";\nimport { stringify, parse } from \"../../3rdparty/SheetClip/index.mjs\";\nimport { arrayEach } from \"../../helpers/array.mjs\";\nimport { rangeEach } from \"../../helpers/number.mjs\";\nimport { sanitize } from \"../../helpers/string.mjs\";\nimport { getSelectionText } from \"../../helpers/dom/element.mjs\";\nimport copyItem from \"./contextMenuItem/copy.mjs\";\nimport cutItem from \"./contextMenuItem/cut.mjs\";\nimport PasteEvent from \"./pasteEvent.mjs\";\nimport { createElement, destroyElement } from \"./focusableElement.mjs\";\nimport { _dataToHTML, htmlToGridSettings } from \"../../utils/parseTable.mjs\";\nHooks.getSingleton().register('afterCopyLimit');\nHooks.getSingleton().register('modifyCopyableRange');\nHooks.getSingleton().register('beforeCut');\nHooks.getSingleton().register('afterCut');\nHooks.getSingleton().register('beforePaste');\nHooks.getSingleton().register('afterPaste');\nHooks.getSingleton().register('beforeCopy');\nHooks.getSingleton().register('afterCopy');\nexport var PLUGIN_KEY = 'copyPaste';\nexport var PLUGIN_PRIORITY = 80;\nvar ROWS_LIMIT = Infinity;\nvar COLUMNS_LIMIT = Infinity;\nvar privatePool = new WeakMap();\nvar META_HEAD = ['<meta name=\"generator\" content=\"Handsontable\"/>', '<style type=\"text/css\">td{white-space:normal}br{mso-data-placement:same-cell}</style>'].join('');\n/* eslint-disable jsdoc/require-description-complete-sentence */\n\n/**\n * @description\n * This plugin enables the copy/paste functionality in the Handsontable. The functionality works for API, Context Menu,\n * using keyboard shortcuts and menu bar from the browser.\n * Possible values:\n * * `true` (to enable default options),\n * * `false` (to disable completely).\n *\n * or an object with values:\n * * `'columnsLimit'` (see {@link CopyPaste#columnsLimit})\n * * `'rowsLimit'` (see {@link CopyPaste#rowsLimit})\n * * `'pasteMode'` (see {@link CopyPaste#pasteMode})\n * * `'uiContainer'` (see {@link CopyPaste#uiContainer}).\n *\n * See [the copy/paste demo](@/guides/cell-features/clipboard.md) for examples.\n *\n * @example\n * ```js\n * // Enables the plugin with default values\n * copyPaste: true,\n * // Enables the plugin with custom values\n * copyPaste: {\n *   columnsLimit: 25,\n *   rowsLimit: 50,\n *   pasteMode: 'shift_down',\n *   uiContainer: document.body,\n * },\n * ```\n * @class CopyPaste\n * @plugin CopyPaste\n */\n\n/* eslint-enable jsdoc/require-description-complete-sentence */\n\nexport var CopyPaste = /*#__PURE__*/function (_BasePlugin) {\n  _inherits(CopyPaste, _BasePlugin);\n  var _super = _createSuper(CopyPaste);\n  function CopyPaste(hotInstance) {\n    var _this;\n    _classCallCheck(this, CopyPaste);\n    _this = _super.call(this, hotInstance);\n    /**\n     * Maximum number of columns than can be copied to clipboard using <kbd>CTRL</kbd> + <kbd>C</kbd>.\n     *\n     * @type {number}\n     * @default Infinity\n     */\n\n    _this.columnsLimit = COLUMNS_LIMIT;\n    /**\n     * Ranges of the cells coordinates, which should be used to copy/cut/paste actions.\n     *\n     * @private\n     * @type {Array}\n     */\n\n    _this.copyableRanges = [];\n    /**\n     * Provides focusable element to support IME and copy/paste/cut actions.\n     *\n     * @private\n     * @type {FocusableWrapper}\n     */\n\n    _this.focusableElement = void 0;\n    /**\n     * Defines paste (<kbd>CTRL</kbd> + <kbd>V</kbd>) behavior.\n     * * Default value `\"overwrite\"` will paste clipboard value over current selection.\n     * * When set to `\"shift_down\"`, clipboard data will be pasted in place of current selection, while all selected cells are moved down.\n     * * When set to `\"shift_right\"`, clipboard data will be pasted in place of current selection, while all selected cells are moved right.\n     *\n     * @type {string}\n     * @default 'overwrite'\n     */\n\n    _this.pasteMode = 'overwrite';\n    /**\n     * Maximum number of rows than can be copied to clipboard using <kbd>CTRL</kbd> + <kbd>C</kbd>.\n     *\n     * @type {number}\n     * @default Infinity\n     */\n\n    _this.rowsLimit = ROWS_LIMIT;\n    /**\n     * UI container for the secondary focusable element.\n     *\n     * @type {HTMLElement}\n     */\n\n    _this.uiContainer = _this.hot.rootDocument.body;\n    privatePool.set(_assertThisInitialized(_this), {\n      isTriggeredByCopy: false,\n      isTriggeredByCut: false,\n      isBeginEditing: false,\n      isFragmentSelectionEnabled: false\n    });\n    return _this;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` than the {@link CopyPaste#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n\n  _createClass(CopyPaste, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return !!this.hot.getSettings()[PLUGIN_KEY];\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n      if (this.enabled) {\n        return;\n      }\n      var _this$hot$getSettings = this.hot.getSettings(),\n        settings = _this$hot$getSettings[PLUGIN_KEY],\n        fragmentSelection = _this$hot$getSettings.fragmentSelection;\n      var priv = privatePool.get(this);\n      priv.isFragmentSelectionEnabled = !!fragmentSelection;\n      if (_typeof(settings) === 'object') {\n        this.pasteMode = settings.pasteMode || this.pasteMode;\n        this.rowsLimit = isNaN(settings.rowsLimit) ? this.rowsLimit : settings.rowsLimit;\n        this.columnsLimit = isNaN(settings.columnsLimit) ? this.columnsLimit : settings.columnsLimit;\n        this.uiContainer = settings.uiContainer || this.uiContainer;\n      }\n      this.addHook('afterContextMenuDefaultOptions', function (options) {\n        return _this2.onAfterContextMenuDefaultOptions(options);\n      });\n      this.addHook('afterOnCellMouseUp', function () {\n        return _this2.onAfterOnCellMouseUp();\n      });\n      this.addHook('afterSelectionEnd', function () {\n        return _this2.onAfterSelectionEnd();\n      });\n      this.addHook('beforeKeyDown', function () {\n        return _this2.onBeforeKeyDown();\n      });\n      this.focusableElement = createElement(this.uiContainer);\n      this.focusableElement.addLocalHook('copy', function (event) {\n        return _this2.onCopy(event);\n      }).addLocalHook('cut', function (event) {\n        return _this2.onCut(event);\n      }).addLocalHook('paste', function (event) {\n        return _this2.onPaste(event);\n      });\n      _get(_getPrototypeOf(CopyPaste.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Updates the plugin state. This method is executed when {@link Core#updateSettings} is invoked.\n     */\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n      this.getOrCreateFocusableElement();\n      _get(_getPrototypeOf(CopyPaste.prototype), \"updatePlugin\", this).call(this);\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      if (this.focusableElement) {\n        destroyElement(this.focusableElement);\n      }\n      _get(_getPrototypeOf(CopyPaste.prototype), \"disablePlugin\", this).call(this);\n    }\n    /**\n     * Copies the selected cell into the clipboard.\n     */\n  }, {\n    key: \"copy\",\n    value: function copy() {\n      var priv = privatePool.get(this);\n      priv.isTriggeredByCopy = true;\n      this.getOrCreateFocusableElement();\n      this.focusableElement.focus();\n      this.hot.rootDocument.execCommand('copy');\n    }\n    /**\n     * Cuts the selected cell into the clipboard.\n     */\n  }, {\n    key: \"cut\",\n    value: function cut() {\n      var priv = privatePool.get(this);\n      priv.isTriggeredByCut = true;\n      this.getOrCreateFocusableElement();\n      this.focusableElement.focus();\n      this.hot.rootDocument.execCommand('cut');\n    }\n    /**\n     * Creates copyable text releated to range objects.\n     *\n     * @param {object[]} ranges Array of objects with properties `startRow`, `endRow`, `startCol` and `endCol`.\n     * @returns {string} Returns string which will be copied into clipboard.\n     */\n  }, {\n    key: \"getRangedCopyableData\",\n    value: function getRangedCopyableData(ranges) {\n      var _this3 = this;\n      var dataSet = [];\n      var copyableRows = [];\n      var copyableColumns = []; // Count all copyable rows and columns\n\n      arrayEach(ranges, function (range) {\n        rangeEach(range.startRow, range.endRow, function (row) {\n          if (copyableRows.indexOf(row) === -1) {\n            copyableRows.push(row);\n          }\n        });\n        rangeEach(range.startCol, range.endCol, function (column) {\n          if (copyableColumns.indexOf(column) === -1) {\n            copyableColumns.push(column);\n          }\n        });\n      }); // Concat all rows and columns data defined in ranges into one copyable string\n\n      arrayEach(copyableRows, function (row) {\n        var rowSet = [];\n        arrayEach(copyableColumns, function (column) {\n          rowSet.push(_this3.hot.getCopyableData(row, column));\n        });\n        dataSet.push(rowSet);\n      });\n      return stringify(dataSet);\n    }\n    /**\n     * Creates copyable text releated to range objects.\n     *\n     * @param {object[]} ranges Array of objects with properties `startRow`, `startCol`, `endRow` and `endCol`.\n     * @returns {Array[]} Returns array of arrays which will be copied into clipboard.\n     */\n  }, {\n    key: \"getRangedData\",\n    value: function getRangedData(ranges) {\n      var _this4 = this;\n      var dataSet = [];\n      var copyableRows = [];\n      var copyableColumns = []; // Count all copyable rows and columns\n\n      arrayEach(ranges, function (range) {\n        rangeEach(range.startRow, range.endRow, function (row) {\n          if (copyableRows.indexOf(row) === -1) {\n            copyableRows.push(row);\n          }\n        });\n        rangeEach(range.startCol, range.endCol, function (column) {\n          if (copyableColumns.indexOf(column) === -1) {\n            copyableColumns.push(column);\n          }\n        });\n      }); // Concat all rows and columns data defined in ranges into one copyable string\n\n      arrayEach(copyableRows, function (row) {\n        var rowSet = [];\n        arrayEach(copyableColumns, function (column) {\n          rowSet.push(_this4.hot.getCopyableData(row, column));\n        });\n        dataSet.push(rowSet);\n      });\n      return dataSet;\n    }\n    /**\n     * Simulates the paste action.\n     *\n     * @param {string} pastableText Value as raw string to paste.\n     * @param {string} [pastableHtml=''] Value as HTML to paste.\n     */\n  }, {\n    key: \"paste\",\n    value: function paste() {\n      var pastableText = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var pastableHtml = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : pastableText;\n      if (!pastableText && !pastableHtml) {\n        return;\n      }\n      var pasteData = new PasteEvent();\n      if (pastableText) {\n        pasteData.clipboardData.setData('text/plain', pastableText);\n      }\n      if (pastableHtml) {\n        pasteData.clipboardData.setData('text/html', pastableHtml);\n      }\n      this.getOrCreateFocusableElement();\n      this.onPaste(pasteData);\n    }\n    /**\n     * Prepares copyable text from the cells selection in the invisible textarea.\n     */\n  }, {\n    key: \"setCopyableText\",\n    value: function setCopyableText() {\n      var selRange = this.hot.getSelectedRangeLast();\n      if (!selRange) {\n        return;\n      }\n      var topLeft = selRange.getTopLeftCorner();\n      var bottomRight = selRange.getBottomRightCorner();\n      var startRow = topLeft.row;\n      var startCol = topLeft.col;\n      var endRow = bottomRight.row;\n      var endCol = bottomRight.col;\n      var finalEndRow = Math.min(endRow, startRow + this.rowsLimit - 1);\n      var finalEndCol = Math.min(endCol, startCol + this.columnsLimit - 1);\n      this.copyableRanges.length = 0;\n      this.copyableRanges.push({\n        startRow: startRow,\n        startCol: startCol,\n        endRow: finalEndRow,\n        endCol: finalEndCol\n      });\n      this.copyableRanges = this.hot.runHooks('modifyCopyableRange', this.copyableRanges);\n      if (endRow !== finalEndRow || endCol !== finalEndCol) {\n        this.hot.runHooks('afterCopyLimit', endRow - startRow + 1, endCol - startCol + 1, this.rowsLimit, this.columnsLimit);\n      }\n    }\n    /**\n     * Force focus on editable element.\n     *\n     * @private\n     */\n  }, {\n    key: \"getOrCreateFocusableElement\",\n    value: function getOrCreateFocusableElement() {\n      var editor = this.hot.getActiveEditor();\n      var editableElement = editor ? editor.TEXTAREA : void 0;\n      if (editableElement) {\n        this.focusableElement.setFocusableElement(editableElement);\n      } else {\n        this.focusableElement.useSecondaryElement();\n      }\n    }\n    /**\n     * Verifies if editor exists and is open.\n     *\n     * @private\n     * @returns {boolean}\n     */\n  }, {\n    key: \"isEditorOpened\",\n    value: function isEditorOpened() {\n      var editor = this.hot.getActiveEditor();\n      return editor && editor.isOpened();\n    }\n    /**\n     * Prepares new values to populate them into datasource.\n     *\n     * @private\n     * @param {Array} inputArray An array of the data to populate.\n     * @param {Array} [selection] The selection which indicates from what position the data will be populated.\n     * @returns {Array} Range coordinates after populate data.\n     */\n  }, {\n    key: \"populateValues\",\n    value: function populateValues(inputArray) {\n      var selection = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.hot.getSelectedRangeLast();\n      if (!inputArray.length) {\n        return;\n      }\n      var populatedRowsLength = inputArray.length;\n      var populatedColumnsLength = inputArray[0].length;\n      var newRows = [];\n      var _selection$getTopLeft = selection.getTopLeftCorner(),\n        startRow = _selection$getTopLeft.row,\n        startColumn = _selection$getTopLeft.col;\n      var _selection$getBottomR = selection.getBottomRightCorner(),\n        endRowFromSelection = _selection$getBottomR.row,\n        endColumnFromSelection = _selection$getBottomR.col;\n      var visualRowForPopulatedData = startRow;\n      var visualColumnForPopulatedData = startColumn;\n      var lastVisualRow = startRow;\n      var lastVisualColumn = startColumn; // We try to populate just all copied data or repeat copied data within a selection. Please keep in mind that we\n      // don't know whether populated data is bigger than selection on start as there are some cells for which values\n      // should be not inserted (it's known right after getting cell meta).\n\n      while (newRows.length < populatedRowsLength || visualRowForPopulatedData <= endRowFromSelection) {\n        var _this$hot$getCellMeta = this.hot.getCellMeta(visualRowForPopulatedData, startColumn),\n          skipRowOnPaste = _this$hot$getCellMeta.skipRowOnPaste,\n          visualRow = _this$hot$getCellMeta.visualRow;\n        visualRowForPopulatedData = visualRow + 1;\n        if (skipRowOnPaste === true) {\n          /* eslint-disable no-continue */\n          continue;\n        }\n        lastVisualRow = visualRow;\n        visualColumnForPopulatedData = startColumn;\n        var newRow = [];\n        var insertedRow = newRows.length % populatedRowsLength;\n        while (newRow.length < populatedColumnsLength || visualColumnForPopulatedData <= endColumnFromSelection) {\n          var _this$hot$getCellMeta2 = this.hot.getCellMeta(startRow, visualColumnForPopulatedData),\n            skipColumnOnPaste = _this$hot$getCellMeta2.skipColumnOnPaste,\n            visualCol = _this$hot$getCellMeta2.visualCol;\n          visualColumnForPopulatedData = visualCol + 1;\n          if (skipColumnOnPaste === true) {\n            /* eslint-disable no-continue */\n            continue;\n          }\n          lastVisualColumn = visualCol;\n          var insertedColumn = newRow.length % populatedColumnsLength;\n          newRow.push(inputArray[insertedRow][insertedColumn]);\n        }\n        newRows.push(newRow);\n      }\n      this.hot.populateFromArray(startRow, startColumn, newRows, void 0, void 0, 'CopyPaste.paste', this.pasteMode);\n      return [startRow, startColumn, lastVisualRow, lastVisualColumn];\n    }\n    /**\n     * `copy` event callback on textarea element.\n     *\n     * @param {Event} event ClipboardEvent.\n     * @private\n     */\n  }, {\n    key: \"onCopy\",\n    value: function onCopy(event) {\n      var priv = privatePool.get(this);\n      if (!this.hot.isListening() && !priv.isTriggeredByCopy || this.isEditorOpened()) {\n        return;\n      }\n      this.setCopyableText();\n      priv.isTriggeredByCopy = false;\n      var rangedData = this.getRangedData(this.copyableRanges);\n      var allowCopying = !!this.hot.runHooks('beforeCopy', rangedData, this.copyableRanges);\n      if (allowCopying) {\n        var textPlain = stringify(rangedData);\n        if (event && event.clipboardData) {\n          var textHTML = _dataToHTML(rangedData, this.hot.rootDocument);\n          event.clipboardData.setData('text/plain', textPlain);\n          event.clipboardData.setData('text/html', [META_HEAD, textHTML].join(''));\n        } else if (typeof ClipboardEvent === 'undefined') {\n          this.hot.rootWindow.clipboardData.setData('Text', textPlain);\n        }\n        this.hot.runHooks('afterCopy', rangedData, this.copyableRanges);\n      }\n      event.preventDefault();\n    }\n    /**\n     * `cut` event callback on textarea element.\n     *\n     * @param {Event} event ClipboardEvent.\n     * @private\n     */\n  }, {\n    key: \"onCut\",\n    value: function onCut(event) {\n      var priv = privatePool.get(this);\n      if (!this.hot.isListening() && !priv.isTriggeredByCut || this.isEditorOpened()) {\n        return;\n      }\n      this.setCopyableText();\n      priv.isTriggeredByCut = false;\n      var rangedData = this.getRangedData(this.copyableRanges);\n      var allowCuttingOut = !!this.hot.runHooks('beforeCut', rangedData, this.copyableRanges);\n      if (allowCuttingOut) {\n        var textPlain = stringify(rangedData);\n        if (event && event.clipboardData) {\n          var textHTML = _dataToHTML(rangedData, this.hot.rootDocument);\n          event.clipboardData.setData('text/plain', textPlain);\n          event.clipboardData.setData('text/html', [META_HEAD, textHTML].join(''));\n        } else if (typeof ClipboardEvent === 'undefined') {\n          this.hot.rootWindow.clipboardData.setData('Text', textPlain);\n        }\n        this.hot.emptySelectedCells('CopyPaste.cut');\n        this.hot.runHooks('afterCut', rangedData, this.copyableRanges);\n      }\n      event.preventDefault();\n    }\n    /**\n     * `paste` event callback on textarea element.\n     *\n     * @param {Event} event ClipboardEvent or pseudo ClipboardEvent, if paste was called manually.\n     * @private\n     */\n  }, {\n    key: \"onPaste\",\n    value: function onPaste(event) {\n      if (!this.hot.isListening() || this.isEditorOpened()) {\n        return;\n      }\n      if (event && event.preventDefault) {\n        event.preventDefault();\n      }\n      var pastedData;\n      if (event && typeof event.clipboardData !== 'undefined') {\n        var textHTML = sanitize(event.clipboardData.getData('text/html'), {\n          ADD_TAGS: ['meta'],\n          ADD_ATTR: ['content'],\n          FORCE_BODY: true\n        });\n        if (textHTML && /(<table)|(<TABLE)/g.test(textHTML)) {\n          var parsedConfig = htmlToGridSettings(textHTML, this.hot.rootDocument);\n          pastedData = parsedConfig.data;\n        } else {\n          pastedData = event.clipboardData.getData('text/plain');\n        }\n      } else if (typeof ClipboardEvent === 'undefined' && typeof this.hot.rootWindow.clipboardData !== 'undefined') {\n        pastedData = this.hot.rootWindow.clipboardData.getData('Text');\n      }\n      if (typeof pastedData === 'string') {\n        pastedData = parse(pastedData);\n      }\n      if (pastedData && pastedData.length === 0) {\n        return;\n      }\n      if (this.hot.runHooks('beforePaste', pastedData, this.copyableRanges) === false) {\n        return;\n      }\n      var _this$populateValues = this.populateValues(pastedData),\n        _this$populateValues2 = _slicedToArray(_this$populateValues, 4),\n        startRow = _this$populateValues2[0],\n        startColumn = _this$populateValues2[1],\n        endRow = _this$populateValues2[2],\n        endColumn = _this$populateValues2[3];\n      this.hot.selectCell(startRow, startColumn, Math.min(this.hot.countRows() - 1, endRow), Math.min(this.hot.countCols() - 1, endColumn));\n      this.hot.runHooks('afterPaste', pastedData, this.copyableRanges);\n    }\n    /**\n     * Add copy and cut options to the Context Menu.\n     *\n     * @private\n     * @param {object} options Contains default added options of the Context Menu.\n     */\n  }, {\n    key: \"onAfterContextMenuDefaultOptions\",\n    value: function onAfterContextMenuDefaultOptions(options) {\n      options.items.push({\n        name: '---------'\n      }, copyItem(this), cutItem(this));\n    }\n    /**\n     * Force focus on focusableElement.\n     *\n     * @private\n     */\n  }, {\n    key: \"onAfterOnCellMouseUp\",\n    value: function onAfterOnCellMouseUp() {\n      // Changing focused element will remove current selection. It's unnecessary in case when we give possibility\n      // for fragment selection\n      if (!this.hot.isListening() || this.isEditorOpened() || this.hot.getSettings().fragmentSelection) {\n        return;\n      }\n      this.getOrCreateFocusableElement();\n      this.focusableElement.focus();\n    }\n    /**\n     * Force focus on focusableElement after end of the selection.\n     *\n     * @private\n     */\n  }, {\n    key: \"onAfterSelectionEnd\",\n    value: function onAfterSelectionEnd() {\n      var _privatePool$get = privatePool.get(this),\n        isFragmentSelectionEnabled = _privatePool$get.isFragmentSelectionEnabled;\n      if (this.isEditorOpened()) {\n        return;\n      }\n      this.getOrCreateFocusableElement();\n      if (isFragmentSelectionEnabled && this.focusableElement.getFocusableElement() !== this.hot.rootDocument.activeElement && getSelectionText()) {\n        return;\n      }\n      this.setCopyableText();\n      this.focusableElement.focus();\n    }\n    /**\n     * `beforeKeyDown` listener to force focus of focusableElement.\n     *\n     * @private\n     */\n  }, {\n    key: \"onBeforeKeyDown\",\n    value: function onBeforeKeyDown() {\n      if (!this.hot.isListening() || this.isEditorOpened()) {\n        return;\n      }\n      var activeElement = this.hot.rootDocument.activeElement;\n      var activeEditor = this.hot.getActiveEditor();\n      if (!activeEditor || activeElement !== this.focusableElement.getFocusableElement() && activeElement !== activeEditor.select) {\n        return;\n      }\n      this.getOrCreateFocusableElement();\n      this.focusableElement.focus();\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.focusableElement) {\n        destroyElement(this.focusableElement);\n        this.focusableElement = null;\n      }\n      _get(_getPrototypeOf(CopyPaste.prototype), \"destroy\", this).call(this);\n    }\n  }], [{\n    key: \"PLUGIN_KEY\",\n    get: function get() {\n      return PLUGIN_KEY;\n    }\n  }, {\n    key: \"PLUGIN_PRIORITY\",\n    get: function get() {\n      return PLUGIN_PRIORITY;\n    }\n  }]);\n  return CopyPaste;\n}(BasePlugin);","map":{"version":3,"names":["_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","len","length","arr2","_i","Symbol","iterator","_arr","_n","_d","_s","_e","next","done","push","value","err","isArray","_typeof","obj","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","_get","Reflect","get","property","receiver","base","_superPropBase","desc","getOwnPropertyDescriptor","arguments","apply","object","hasOwnProperty","_getPrototypeOf","_inherits","subClass","superClass","create","_setPrototypeOf","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","construct","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","BasePlugin","Hooks","stringify","parse","arrayEach","rangeEach","sanitize","getSelectionText","copyItem","cutItem","PasteEvent","createElement","destroyElement","_dataToHTML","htmlToGridSettings","getSingleton","register","PLUGIN_KEY","PLUGIN_PRIORITY","ROWS_LIMIT","Infinity","COLUMNS_LIMIT","privatePool","WeakMap","META_HEAD","join","CopyPaste","_BasePlugin","_super","hotInstance","_this","columnsLimit","copyableRanges","focusableElement","pasteMode","rowsLimit","uiContainer","hot","rootDocument","body","set","isTriggeredByCopy","isTriggeredByCut","isBeginEditing","isFragmentSelectionEnabled","isEnabled","getSettings","enablePlugin","_this2","enabled","_this$hot$getSettings","settings","fragmentSelection","priv","isNaN","addHook","options","onAfterContextMenuDefaultOptions","onAfterOnCellMouseUp","onAfterSelectionEnd","onBeforeKeyDown","addLocalHook","event","onCopy","onCut","onPaste","updatePlugin","disablePlugin","getOrCreateFocusableElement","copy","focus","execCommand","cut","getRangedCopyableData","ranges","_this3","dataSet","copyableRows","copyableColumns","range","startRow","endRow","row","indexOf","startCol","endCol","column","rowSet","getCopyableData","getRangedData","_this4","paste","pastableText","undefined","pastableHtml","pasteData","clipboardData","setData","setCopyableText","selRange","getSelectedRangeLast","topLeft","getTopLeftCorner","bottomRight","getBottomRightCorner","col","finalEndRow","Math","min","finalEndCol","runHooks","editor","getActiveEditor","editableElement","TEXTAREA","setFocusableElement","useSecondaryElement","isEditorOpened","isOpened","populateValues","inputArray","selection","populatedRowsLength","populatedColumnsLength","newRows","_selection$getTopLeft","startColumn","_selection$getBottomR","endRowFromSelection","endColumnFromSelection","visualRowForPopulatedData","visualColumnForPopulatedData","lastVisualRow","lastVisualColumn","_this$hot$getCellMeta","getCellMeta","skipRowOnPaste","visualRow","newRow","insertedRow","_this$hot$getCellMeta2","skipColumnOnPaste","visualCol","insertedColumn","populateFromArray","isListening","rangedData","allowCopying","textPlain","textHTML","ClipboardEvent","rootWindow","preventDefault","allowCuttingOut","emptySelectedCells","pastedData","getData","ADD_TAGS","ADD_ATTR","FORCE_BODY","parsedConfig","data","_this$populateValues","_this$populateValues2","endColumn","selectCell","countRows","countCols","items","_privatePool$get","getFocusableElement","activeElement","activeEditor","select","destroy"],"sources":["/Users/priyadeliwala/Desktop/sales-dashboard/node_modules/handsontable/plugins/copyPaste/copyPaste.mjs"],"sourcesContent":["function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _get() { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.weak-map.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.object.set-prototype-of.js\";\nimport \"core-js/modules/es.object.get-prototype-of.js\";\nimport \"core-js/modules/es.reflect.construct.js\";\nimport \"core-js/modules/es.reflect.get.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport { BasePlugin } from \"../base/index.mjs\";\nimport Hooks from \"../../pluginHooks.mjs\";\nimport { stringify, parse } from \"../../3rdparty/SheetClip/index.mjs\";\nimport { arrayEach } from \"../../helpers/array.mjs\";\nimport { rangeEach } from \"../../helpers/number.mjs\";\nimport { sanitize } from \"../../helpers/string.mjs\";\nimport { getSelectionText } from \"../../helpers/dom/element.mjs\";\nimport copyItem from \"./contextMenuItem/copy.mjs\";\nimport cutItem from \"./contextMenuItem/cut.mjs\";\nimport PasteEvent from \"./pasteEvent.mjs\";\nimport { createElement, destroyElement } from \"./focusableElement.mjs\";\nimport { _dataToHTML, htmlToGridSettings } from \"../../utils/parseTable.mjs\";\nHooks.getSingleton().register('afterCopyLimit');\nHooks.getSingleton().register('modifyCopyableRange');\nHooks.getSingleton().register('beforeCut');\nHooks.getSingleton().register('afterCut');\nHooks.getSingleton().register('beforePaste');\nHooks.getSingleton().register('afterPaste');\nHooks.getSingleton().register('beforeCopy');\nHooks.getSingleton().register('afterCopy');\nexport var PLUGIN_KEY = 'copyPaste';\nexport var PLUGIN_PRIORITY = 80;\nvar ROWS_LIMIT = Infinity;\nvar COLUMNS_LIMIT = Infinity;\nvar privatePool = new WeakMap();\nvar META_HEAD = ['<meta name=\"generator\" content=\"Handsontable\"/>', '<style type=\"text/css\">td{white-space:normal}br{mso-data-placement:same-cell}</style>'].join('');\n/* eslint-disable jsdoc/require-description-complete-sentence */\n\n/**\n * @description\n * This plugin enables the copy/paste functionality in the Handsontable. The functionality works for API, Context Menu,\n * using keyboard shortcuts and menu bar from the browser.\n * Possible values:\n * * `true` (to enable default options),\n * * `false` (to disable completely).\n *\n * or an object with values:\n * * `'columnsLimit'` (see {@link CopyPaste#columnsLimit})\n * * `'rowsLimit'` (see {@link CopyPaste#rowsLimit})\n * * `'pasteMode'` (see {@link CopyPaste#pasteMode})\n * * `'uiContainer'` (see {@link CopyPaste#uiContainer}).\n *\n * See [the copy/paste demo](@/guides/cell-features/clipboard.md) for examples.\n *\n * @example\n * ```js\n * // Enables the plugin with default values\n * copyPaste: true,\n * // Enables the plugin with custom values\n * copyPaste: {\n *   columnsLimit: 25,\n *   rowsLimit: 50,\n *   pasteMode: 'shift_down',\n *   uiContainer: document.body,\n * },\n * ```\n * @class CopyPaste\n * @plugin CopyPaste\n */\n\n/* eslint-enable jsdoc/require-description-complete-sentence */\n\nexport var CopyPaste = /*#__PURE__*/function (_BasePlugin) {\n  _inherits(CopyPaste, _BasePlugin);\n\n  var _super = _createSuper(CopyPaste);\n\n  function CopyPaste(hotInstance) {\n    var _this;\n\n    _classCallCheck(this, CopyPaste);\n\n    _this = _super.call(this, hotInstance);\n    /**\n     * Maximum number of columns than can be copied to clipboard using <kbd>CTRL</kbd> + <kbd>C</kbd>.\n     *\n     * @type {number}\n     * @default Infinity\n     */\n\n    _this.columnsLimit = COLUMNS_LIMIT;\n    /**\n     * Ranges of the cells coordinates, which should be used to copy/cut/paste actions.\n     *\n     * @private\n     * @type {Array}\n     */\n\n    _this.copyableRanges = [];\n    /**\n     * Provides focusable element to support IME and copy/paste/cut actions.\n     *\n     * @private\n     * @type {FocusableWrapper}\n     */\n\n    _this.focusableElement = void 0;\n    /**\n     * Defines paste (<kbd>CTRL</kbd> + <kbd>V</kbd>) behavior.\n     * * Default value `\"overwrite\"` will paste clipboard value over current selection.\n     * * When set to `\"shift_down\"`, clipboard data will be pasted in place of current selection, while all selected cells are moved down.\n     * * When set to `\"shift_right\"`, clipboard data will be pasted in place of current selection, while all selected cells are moved right.\n     *\n     * @type {string}\n     * @default 'overwrite'\n     */\n\n    _this.pasteMode = 'overwrite';\n    /**\n     * Maximum number of rows than can be copied to clipboard using <kbd>CTRL</kbd> + <kbd>C</kbd>.\n     *\n     * @type {number}\n     * @default Infinity\n     */\n\n    _this.rowsLimit = ROWS_LIMIT;\n    /**\n     * UI container for the secondary focusable element.\n     *\n     * @type {HTMLElement}\n     */\n\n    _this.uiContainer = _this.hot.rootDocument.body;\n    privatePool.set(_assertThisInitialized(_this), {\n      isTriggeredByCopy: false,\n      isTriggeredByCut: false,\n      isBeginEditing: false,\n      isFragmentSelectionEnabled: false\n    });\n    return _this;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` than the {@link CopyPaste#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n\n\n  _createClass(CopyPaste, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return !!this.hot.getSettings()[PLUGIN_KEY];\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n\n      if (this.enabled) {\n        return;\n      }\n\n      var _this$hot$getSettings = this.hot.getSettings(),\n          settings = _this$hot$getSettings[PLUGIN_KEY],\n          fragmentSelection = _this$hot$getSettings.fragmentSelection;\n\n      var priv = privatePool.get(this);\n      priv.isFragmentSelectionEnabled = !!fragmentSelection;\n\n      if (_typeof(settings) === 'object') {\n        this.pasteMode = settings.pasteMode || this.pasteMode;\n        this.rowsLimit = isNaN(settings.rowsLimit) ? this.rowsLimit : settings.rowsLimit;\n        this.columnsLimit = isNaN(settings.columnsLimit) ? this.columnsLimit : settings.columnsLimit;\n        this.uiContainer = settings.uiContainer || this.uiContainer;\n      }\n\n      this.addHook('afterContextMenuDefaultOptions', function (options) {\n        return _this2.onAfterContextMenuDefaultOptions(options);\n      });\n      this.addHook('afterOnCellMouseUp', function () {\n        return _this2.onAfterOnCellMouseUp();\n      });\n      this.addHook('afterSelectionEnd', function () {\n        return _this2.onAfterSelectionEnd();\n      });\n      this.addHook('beforeKeyDown', function () {\n        return _this2.onBeforeKeyDown();\n      });\n      this.focusableElement = createElement(this.uiContainer);\n      this.focusableElement.addLocalHook('copy', function (event) {\n        return _this2.onCopy(event);\n      }).addLocalHook('cut', function (event) {\n        return _this2.onCut(event);\n      }).addLocalHook('paste', function (event) {\n        return _this2.onPaste(event);\n      });\n\n      _get(_getPrototypeOf(CopyPaste.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Updates the plugin state. This method is executed when {@link Core#updateSettings} is invoked.\n     */\n\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n      this.getOrCreateFocusableElement();\n\n      _get(_getPrototypeOf(CopyPaste.prototype), \"updatePlugin\", this).call(this);\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      if (this.focusableElement) {\n        destroyElement(this.focusableElement);\n      }\n\n      _get(_getPrototypeOf(CopyPaste.prototype), \"disablePlugin\", this).call(this);\n    }\n    /**\n     * Copies the selected cell into the clipboard.\n     */\n\n  }, {\n    key: \"copy\",\n    value: function copy() {\n      var priv = privatePool.get(this);\n      priv.isTriggeredByCopy = true;\n      this.getOrCreateFocusableElement();\n      this.focusableElement.focus();\n      this.hot.rootDocument.execCommand('copy');\n    }\n    /**\n     * Cuts the selected cell into the clipboard.\n     */\n\n  }, {\n    key: \"cut\",\n    value: function cut() {\n      var priv = privatePool.get(this);\n      priv.isTriggeredByCut = true;\n      this.getOrCreateFocusableElement();\n      this.focusableElement.focus();\n      this.hot.rootDocument.execCommand('cut');\n    }\n    /**\n     * Creates copyable text releated to range objects.\n     *\n     * @param {object[]} ranges Array of objects with properties `startRow`, `endRow`, `startCol` and `endCol`.\n     * @returns {string} Returns string which will be copied into clipboard.\n     */\n\n  }, {\n    key: \"getRangedCopyableData\",\n    value: function getRangedCopyableData(ranges) {\n      var _this3 = this;\n\n      var dataSet = [];\n      var copyableRows = [];\n      var copyableColumns = []; // Count all copyable rows and columns\n\n      arrayEach(ranges, function (range) {\n        rangeEach(range.startRow, range.endRow, function (row) {\n          if (copyableRows.indexOf(row) === -1) {\n            copyableRows.push(row);\n          }\n        });\n        rangeEach(range.startCol, range.endCol, function (column) {\n          if (copyableColumns.indexOf(column) === -1) {\n            copyableColumns.push(column);\n          }\n        });\n      }); // Concat all rows and columns data defined in ranges into one copyable string\n\n      arrayEach(copyableRows, function (row) {\n        var rowSet = [];\n        arrayEach(copyableColumns, function (column) {\n          rowSet.push(_this3.hot.getCopyableData(row, column));\n        });\n        dataSet.push(rowSet);\n      });\n      return stringify(dataSet);\n    }\n    /**\n     * Creates copyable text releated to range objects.\n     *\n     * @param {object[]} ranges Array of objects with properties `startRow`, `startCol`, `endRow` and `endCol`.\n     * @returns {Array[]} Returns array of arrays which will be copied into clipboard.\n     */\n\n  }, {\n    key: \"getRangedData\",\n    value: function getRangedData(ranges) {\n      var _this4 = this;\n\n      var dataSet = [];\n      var copyableRows = [];\n      var copyableColumns = []; // Count all copyable rows and columns\n\n      arrayEach(ranges, function (range) {\n        rangeEach(range.startRow, range.endRow, function (row) {\n          if (copyableRows.indexOf(row) === -1) {\n            copyableRows.push(row);\n          }\n        });\n        rangeEach(range.startCol, range.endCol, function (column) {\n          if (copyableColumns.indexOf(column) === -1) {\n            copyableColumns.push(column);\n          }\n        });\n      }); // Concat all rows and columns data defined in ranges into one copyable string\n\n      arrayEach(copyableRows, function (row) {\n        var rowSet = [];\n        arrayEach(copyableColumns, function (column) {\n          rowSet.push(_this4.hot.getCopyableData(row, column));\n        });\n        dataSet.push(rowSet);\n      });\n      return dataSet;\n    }\n    /**\n     * Simulates the paste action.\n     *\n     * @param {string} pastableText Value as raw string to paste.\n     * @param {string} [pastableHtml=''] Value as HTML to paste.\n     */\n\n  }, {\n    key: \"paste\",\n    value: function paste() {\n      var pastableText = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var pastableHtml = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : pastableText;\n\n      if (!pastableText && !pastableHtml) {\n        return;\n      }\n\n      var pasteData = new PasteEvent();\n\n      if (pastableText) {\n        pasteData.clipboardData.setData('text/plain', pastableText);\n      }\n\n      if (pastableHtml) {\n        pasteData.clipboardData.setData('text/html', pastableHtml);\n      }\n\n      this.getOrCreateFocusableElement();\n      this.onPaste(pasteData);\n    }\n    /**\n     * Prepares copyable text from the cells selection in the invisible textarea.\n     */\n\n  }, {\n    key: \"setCopyableText\",\n    value: function setCopyableText() {\n      var selRange = this.hot.getSelectedRangeLast();\n\n      if (!selRange) {\n        return;\n      }\n\n      var topLeft = selRange.getTopLeftCorner();\n      var bottomRight = selRange.getBottomRightCorner();\n      var startRow = topLeft.row;\n      var startCol = topLeft.col;\n      var endRow = bottomRight.row;\n      var endCol = bottomRight.col;\n      var finalEndRow = Math.min(endRow, startRow + this.rowsLimit - 1);\n      var finalEndCol = Math.min(endCol, startCol + this.columnsLimit - 1);\n      this.copyableRanges.length = 0;\n      this.copyableRanges.push({\n        startRow: startRow,\n        startCol: startCol,\n        endRow: finalEndRow,\n        endCol: finalEndCol\n      });\n      this.copyableRanges = this.hot.runHooks('modifyCopyableRange', this.copyableRanges);\n\n      if (endRow !== finalEndRow || endCol !== finalEndCol) {\n        this.hot.runHooks('afterCopyLimit', endRow - startRow + 1, endCol - startCol + 1, this.rowsLimit, this.columnsLimit);\n      }\n    }\n    /**\n     * Force focus on editable element.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"getOrCreateFocusableElement\",\n    value: function getOrCreateFocusableElement() {\n      var editor = this.hot.getActiveEditor();\n      var editableElement = editor ? editor.TEXTAREA : void 0;\n\n      if (editableElement) {\n        this.focusableElement.setFocusableElement(editableElement);\n      } else {\n        this.focusableElement.useSecondaryElement();\n      }\n    }\n    /**\n     * Verifies if editor exists and is open.\n     *\n     * @private\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isEditorOpened\",\n    value: function isEditorOpened() {\n      var editor = this.hot.getActiveEditor();\n      return editor && editor.isOpened();\n    }\n    /**\n     * Prepares new values to populate them into datasource.\n     *\n     * @private\n     * @param {Array} inputArray An array of the data to populate.\n     * @param {Array} [selection] The selection which indicates from what position the data will be populated.\n     * @returns {Array} Range coordinates after populate data.\n     */\n\n  }, {\n    key: \"populateValues\",\n    value: function populateValues(inputArray) {\n      var selection = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.hot.getSelectedRangeLast();\n\n      if (!inputArray.length) {\n        return;\n      }\n\n      var populatedRowsLength = inputArray.length;\n      var populatedColumnsLength = inputArray[0].length;\n      var newRows = [];\n\n      var _selection$getTopLeft = selection.getTopLeftCorner(),\n          startRow = _selection$getTopLeft.row,\n          startColumn = _selection$getTopLeft.col;\n\n      var _selection$getBottomR = selection.getBottomRightCorner(),\n          endRowFromSelection = _selection$getBottomR.row,\n          endColumnFromSelection = _selection$getBottomR.col;\n\n      var visualRowForPopulatedData = startRow;\n      var visualColumnForPopulatedData = startColumn;\n      var lastVisualRow = startRow;\n      var lastVisualColumn = startColumn; // We try to populate just all copied data or repeat copied data within a selection. Please keep in mind that we\n      // don't know whether populated data is bigger than selection on start as there are some cells for which values\n      // should be not inserted (it's known right after getting cell meta).\n\n      while (newRows.length < populatedRowsLength || visualRowForPopulatedData <= endRowFromSelection) {\n        var _this$hot$getCellMeta = this.hot.getCellMeta(visualRowForPopulatedData, startColumn),\n            skipRowOnPaste = _this$hot$getCellMeta.skipRowOnPaste,\n            visualRow = _this$hot$getCellMeta.visualRow;\n\n        visualRowForPopulatedData = visualRow + 1;\n\n        if (skipRowOnPaste === true) {\n          /* eslint-disable no-continue */\n          continue;\n        }\n\n        lastVisualRow = visualRow;\n        visualColumnForPopulatedData = startColumn;\n        var newRow = [];\n        var insertedRow = newRows.length % populatedRowsLength;\n\n        while (newRow.length < populatedColumnsLength || visualColumnForPopulatedData <= endColumnFromSelection) {\n          var _this$hot$getCellMeta2 = this.hot.getCellMeta(startRow, visualColumnForPopulatedData),\n              skipColumnOnPaste = _this$hot$getCellMeta2.skipColumnOnPaste,\n              visualCol = _this$hot$getCellMeta2.visualCol;\n\n          visualColumnForPopulatedData = visualCol + 1;\n\n          if (skipColumnOnPaste === true) {\n            /* eslint-disable no-continue */\n            continue;\n          }\n\n          lastVisualColumn = visualCol;\n          var insertedColumn = newRow.length % populatedColumnsLength;\n          newRow.push(inputArray[insertedRow][insertedColumn]);\n        }\n\n        newRows.push(newRow);\n      }\n\n      this.hot.populateFromArray(startRow, startColumn, newRows, void 0, void 0, 'CopyPaste.paste', this.pasteMode);\n      return [startRow, startColumn, lastVisualRow, lastVisualColumn];\n    }\n    /**\n     * `copy` event callback on textarea element.\n     *\n     * @param {Event} event ClipboardEvent.\n     * @private\n     */\n\n  }, {\n    key: \"onCopy\",\n    value: function onCopy(event) {\n      var priv = privatePool.get(this);\n\n      if (!this.hot.isListening() && !priv.isTriggeredByCopy || this.isEditorOpened()) {\n        return;\n      }\n\n      this.setCopyableText();\n      priv.isTriggeredByCopy = false;\n      var rangedData = this.getRangedData(this.copyableRanges);\n      var allowCopying = !!this.hot.runHooks('beforeCopy', rangedData, this.copyableRanges);\n\n      if (allowCopying) {\n        var textPlain = stringify(rangedData);\n\n        if (event && event.clipboardData) {\n          var textHTML = _dataToHTML(rangedData, this.hot.rootDocument);\n\n          event.clipboardData.setData('text/plain', textPlain);\n          event.clipboardData.setData('text/html', [META_HEAD, textHTML].join(''));\n        } else if (typeof ClipboardEvent === 'undefined') {\n          this.hot.rootWindow.clipboardData.setData('Text', textPlain);\n        }\n\n        this.hot.runHooks('afterCopy', rangedData, this.copyableRanges);\n      }\n\n      event.preventDefault();\n    }\n    /**\n     * `cut` event callback on textarea element.\n     *\n     * @param {Event} event ClipboardEvent.\n     * @private\n     */\n\n  }, {\n    key: \"onCut\",\n    value: function onCut(event) {\n      var priv = privatePool.get(this);\n\n      if (!this.hot.isListening() && !priv.isTriggeredByCut || this.isEditorOpened()) {\n        return;\n      }\n\n      this.setCopyableText();\n      priv.isTriggeredByCut = false;\n      var rangedData = this.getRangedData(this.copyableRanges);\n      var allowCuttingOut = !!this.hot.runHooks('beforeCut', rangedData, this.copyableRanges);\n\n      if (allowCuttingOut) {\n        var textPlain = stringify(rangedData);\n\n        if (event && event.clipboardData) {\n          var textHTML = _dataToHTML(rangedData, this.hot.rootDocument);\n\n          event.clipboardData.setData('text/plain', textPlain);\n          event.clipboardData.setData('text/html', [META_HEAD, textHTML].join(''));\n        } else if (typeof ClipboardEvent === 'undefined') {\n          this.hot.rootWindow.clipboardData.setData('Text', textPlain);\n        }\n\n        this.hot.emptySelectedCells('CopyPaste.cut');\n        this.hot.runHooks('afterCut', rangedData, this.copyableRanges);\n      }\n\n      event.preventDefault();\n    }\n    /**\n     * `paste` event callback on textarea element.\n     *\n     * @param {Event} event ClipboardEvent or pseudo ClipboardEvent, if paste was called manually.\n     * @private\n     */\n\n  }, {\n    key: \"onPaste\",\n    value: function onPaste(event) {\n      if (!this.hot.isListening() || this.isEditorOpened()) {\n        return;\n      }\n\n      if (event && event.preventDefault) {\n        event.preventDefault();\n      }\n\n      var pastedData;\n\n      if (event && typeof event.clipboardData !== 'undefined') {\n        var textHTML = sanitize(event.clipboardData.getData('text/html'), {\n          ADD_TAGS: ['meta'],\n          ADD_ATTR: ['content'],\n          FORCE_BODY: true\n        });\n\n        if (textHTML && /(<table)|(<TABLE)/g.test(textHTML)) {\n          var parsedConfig = htmlToGridSettings(textHTML, this.hot.rootDocument);\n          pastedData = parsedConfig.data;\n        } else {\n          pastedData = event.clipboardData.getData('text/plain');\n        }\n      } else if (typeof ClipboardEvent === 'undefined' && typeof this.hot.rootWindow.clipboardData !== 'undefined') {\n        pastedData = this.hot.rootWindow.clipboardData.getData('Text');\n      }\n\n      if (typeof pastedData === 'string') {\n        pastedData = parse(pastedData);\n      }\n\n      if (pastedData && pastedData.length === 0) {\n        return;\n      }\n\n      if (this.hot.runHooks('beforePaste', pastedData, this.copyableRanges) === false) {\n        return;\n      }\n\n      var _this$populateValues = this.populateValues(pastedData),\n          _this$populateValues2 = _slicedToArray(_this$populateValues, 4),\n          startRow = _this$populateValues2[0],\n          startColumn = _this$populateValues2[1],\n          endRow = _this$populateValues2[2],\n          endColumn = _this$populateValues2[3];\n\n      this.hot.selectCell(startRow, startColumn, Math.min(this.hot.countRows() - 1, endRow), Math.min(this.hot.countCols() - 1, endColumn));\n      this.hot.runHooks('afterPaste', pastedData, this.copyableRanges);\n    }\n    /**\n     * Add copy and cut options to the Context Menu.\n     *\n     * @private\n     * @param {object} options Contains default added options of the Context Menu.\n     */\n\n  }, {\n    key: \"onAfterContextMenuDefaultOptions\",\n    value: function onAfterContextMenuDefaultOptions(options) {\n      options.items.push({\n        name: '---------'\n      }, copyItem(this), cutItem(this));\n    }\n    /**\n     * Force focus on focusableElement.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onAfterOnCellMouseUp\",\n    value: function onAfterOnCellMouseUp() {\n      // Changing focused element will remove current selection. It's unnecessary in case when we give possibility\n      // for fragment selection\n      if (!this.hot.isListening() || this.isEditorOpened() || this.hot.getSettings().fragmentSelection) {\n        return;\n      }\n\n      this.getOrCreateFocusableElement();\n      this.focusableElement.focus();\n    }\n    /**\n     * Force focus on focusableElement after end of the selection.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onAfterSelectionEnd\",\n    value: function onAfterSelectionEnd() {\n      var _privatePool$get = privatePool.get(this),\n          isFragmentSelectionEnabled = _privatePool$get.isFragmentSelectionEnabled;\n\n      if (this.isEditorOpened()) {\n        return;\n      }\n\n      this.getOrCreateFocusableElement();\n\n      if (isFragmentSelectionEnabled && this.focusableElement.getFocusableElement() !== this.hot.rootDocument.activeElement && getSelectionText()) {\n        return;\n      }\n\n      this.setCopyableText();\n      this.focusableElement.focus();\n    }\n    /**\n     * `beforeKeyDown` listener to force focus of focusableElement.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onBeforeKeyDown\",\n    value: function onBeforeKeyDown() {\n      if (!this.hot.isListening() || this.isEditorOpened()) {\n        return;\n      }\n\n      var activeElement = this.hot.rootDocument.activeElement;\n      var activeEditor = this.hot.getActiveEditor();\n\n      if (!activeEditor || activeElement !== this.focusableElement.getFocusableElement() && activeElement !== activeEditor.select) {\n        return;\n      }\n\n      this.getOrCreateFocusableElement();\n      this.focusableElement.focus();\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.focusableElement) {\n        destroyElement(this.focusableElement);\n        this.focusableElement = null;\n      }\n\n      _get(_getPrototypeOf(CopyPaste.prototype), \"destroy\", this).call(this);\n    }\n  }], [{\n    key: \"PLUGIN_KEY\",\n    get: function get() {\n      return PLUGIN_KEY;\n    }\n  }, {\n    key: \"PLUGIN_PRIORITY\",\n    get: function get() {\n      return PLUGIN_PRIORITY;\n    }\n  }]);\n\n  return CopyPaste;\n}(BasePlugin);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
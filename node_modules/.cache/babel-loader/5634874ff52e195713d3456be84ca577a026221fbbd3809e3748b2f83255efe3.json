{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) {\n  _checkPrivateRedeclaration(obj, privateMap);\n  privateMap.set(obj, value);\n}\nfunction _checkPrivateRedeclaration(obj, privateCollection) {\n  if (privateCollection.has(obj)) {\n    throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n  }\n}\nfunction _classPrivateFieldSet(receiver, privateMap, value) {\n  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\");\n  _classApplyDescriptorSet(receiver, descriptor, value);\n  return value;\n}\nfunction _classApplyDescriptorSet(receiver, descriptor, value) {\n  if (descriptor.set) {\n    descriptor.set.call(receiver, value);\n  } else {\n    if (!descriptor.writable) {\n      throw new TypeError(\"attempted to set read only private field\");\n    }\n    descriptor.value = value;\n  }\n}\nfunction _classPrivateFieldGet(receiver, privateMap) {\n  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\");\n  return _classApplyDescriptorGet(receiver, descriptor);\n}\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n  }\n  return privateMap.get(receiver);\n}\nfunction _classApplyDescriptorGet(receiver, descriptor) {\n  if (descriptor.get) {\n    return descriptor.get.call(receiver);\n  }\n  return descriptor.value;\n}\nimport { mixin } from \"../../helpers/object.mjs\";\nimport localHooks from \"../../mixins/localHooks.mjs\";\n/**\n * The ChangesObserver module is an object that represents a disposable resource\n * provided by the ChangesObservable module.\n *\n * @private\n * @class ChangesObserver\n */\n\nvar _currentInitialChanges = /*#__PURE__*/new WeakMap();\nexport var ChangesObserver = /*#__PURE__*/function () {\n  function ChangesObserver() {\n    _classCallCheck(this, ChangesObserver);\n    _classPrivateFieldInitSpec(this, _currentInitialChanges, {\n      writable: true,\n      value: []\n    });\n  }\n  _createClass(ChangesObserver, [{\n    key: \"subscribe\",\n    value:\n    /**\n     * Subscribes to the observer.\n     *\n     * @param {Function} callback A function that will be called when the new changes will appear.\n     * @returns {ChangesObserver}\n     */\n    function subscribe(callback) {\n      this.addLocalHook('change', callback);\n      this._write(_classPrivateFieldGet(this, _currentInitialChanges));\n      return this;\n    }\n    /**\n     * Unsubscribes all subscriptions. After the method call, the observer would not produce\n     * any new events.\n     *\n     * @returns {ChangesObserver}\n     */\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      this.runLocalHooks('unsubscribe');\n      this.clearLocalHooks();\n      return this;\n    }\n    /**\n     * The write method is executed by the ChangesObservable module. The module produces all\n     * changes events that are distributed further by the observer.\n     *\n     * @private\n     * @param {object} changes The chunk of changes produced by the ChangesObservable module.\n     * @returns {ChangesObserver}\n     */\n  }, {\n    key: \"_write\",\n    value: function _write(changes) {\n      if (changes.length > 0) {\n        this.runLocalHooks('change', changes);\n      }\n      return this;\n    }\n    /**\n     * The write method is executed by the ChangesObservable module. The module produces initial\n     * changes that will be used to notify new subscribers.\n     *\n     * @private\n     * @param {object} initialChanges The chunk of changes produced by the ChangesObservable module.\n     */\n  }, {\n    key: \"_writeInitialChanges\",\n    value: function _writeInitialChanges(initialChanges) {\n      _classPrivateFieldSet(this, _currentInitialChanges, initialChanges);\n    }\n  }]);\n  return ChangesObserver;\n}();\nmixin(ChangesObserver, localHooks);","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_classPrivateFieldInitSpec","obj","privateMap","value","_checkPrivateRedeclaration","set","privateCollection","has","_classPrivateFieldSet","receiver","_classExtractFieldDescriptor","_classApplyDescriptorSet","call","_classPrivateFieldGet","_classApplyDescriptorGet","action","get","mixin","localHooks","_currentInitialChanges","WeakMap","ChangesObserver","subscribe","callback","addLocalHook","_write","unsubscribe","runLocalHooks","clearLocalHooks","changes","_writeInitialChanges","initialChanges"],"sources":["/Users/priyadeliwala/Desktop/sales-dashboard/node_modules/handsontable/translations/changesObservable/observer.mjs"],"sourcesContent":["import \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.weak-map.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\n\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\n\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\n\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError(\"attempted to set read only private field\"); } descriptor.value = value; } }\n\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\n\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\n\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\n\nimport { mixin } from \"../../helpers/object.mjs\";\nimport localHooks from \"../../mixins/localHooks.mjs\";\n/**\n * The ChangesObserver module is an object that represents a disposable resource\n * provided by the ChangesObservable module.\n *\n * @private\n * @class ChangesObserver\n */\n\nvar _currentInitialChanges = /*#__PURE__*/new WeakMap();\n\nexport var ChangesObserver = /*#__PURE__*/function () {\n  function ChangesObserver() {\n    _classCallCheck(this, ChangesObserver);\n\n    _classPrivateFieldInitSpec(this, _currentInitialChanges, {\n      writable: true,\n      value: []\n    });\n  }\n\n  _createClass(ChangesObserver, [{\n    key: \"subscribe\",\n    value:\n    /**\n     * Subscribes to the observer.\n     *\n     * @param {Function} callback A function that will be called when the new changes will appear.\n     * @returns {ChangesObserver}\n     */\n    function subscribe(callback) {\n      this.addLocalHook('change', callback);\n\n      this._write(_classPrivateFieldGet(this, _currentInitialChanges));\n\n      return this;\n    }\n    /**\n     * Unsubscribes all subscriptions. After the method call, the observer would not produce\n     * any new events.\n     *\n     * @returns {ChangesObserver}\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      this.runLocalHooks('unsubscribe');\n      this.clearLocalHooks();\n      return this;\n    }\n    /**\n     * The write method is executed by the ChangesObservable module. The module produces all\n     * changes events that are distributed further by the observer.\n     *\n     * @private\n     * @param {object} changes The chunk of changes produced by the ChangesObservable module.\n     * @returns {ChangesObserver}\n     */\n\n  }, {\n    key: \"_write\",\n    value: function _write(changes) {\n      if (changes.length > 0) {\n        this.runLocalHooks('change', changes);\n      }\n\n      return this;\n    }\n    /**\n     * The write method is executed by the ChangesObservable module. The module produces initial\n     * changes that will be used to notify new subscribers.\n     *\n     * @private\n     * @param {object} initialChanges The chunk of changes produced by the ChangesObservable module.\n     */\n\n  }, {\n    key: \"_writeInitialChanges\",\n    value: function _writeInitialChanges(initialChanges) {\n      _classPrivateFieldSet(this, _currentInitialChanges, initialChanges);\n    }\n  }]);\n\n  return ChangesObserver;\n}();\nmixin(ChangesObserver, localHooks);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
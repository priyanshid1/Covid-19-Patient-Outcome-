{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _construct(Parent, args, Class) {\n  if (_isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport { addClass, getScrollbarWidth, getScrollTop, getWindowScrollLeft, hasClass, outerHeight, removeClass, setOverlayPosition, resetCssTransform } from \"./../../../../helpers/dom/element.mjs\";\nimport TopOverlayTable from \"./../table/top.mjs\";\nimport { Overlay } from \"./_base.mjs\";\nimport { CLONE_TOP } from \"./constants.mjs\";\n/**\n * @class TopOverlay\n */\n\nexport var TopOverlay = /*#__PURE__*/function (_Overlay) {\n  _inherits(TopOverlay, _Overlay);\n  var _super = _createSuper(TopOverlay);\n\n  /**\n   * @param {Walkontable} wotInstance The Walkontable instance.\n   */\n  function TopOverlay(wotInstance) {\n    var _this;\n    _classCallCheck(this, TopOverlay);\n    _this = _super.call(this, wotInstance);\n    _defineProperty(_assertThisInitialized(_this), \"cachedFixedRowsTop\", -1);\n    _this.clone = _this.makeClone(CLONE_TOP);\n    _this.cachedFixedRowsTop = _this.wot.getSetting('fixedRowsTop');\n    return _this;\n  }\n  /**\n   * Factory method to create a subclass of `Table` that is relevant to this overlay.\n   *\n   * @see Table#constructor\n   * @param {...*} args Parameters that will be forwarded to the `Table` constructor.\n   * @returns {Table}\n   */\n\n  _createClass(TopOverlay, [{\n    key: \"createTable\",\n    value: function createTable() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      return _construct(TopOverlayTable, args);\n    }\n    /**\n     * Checks if overlay should be fully rendered.\n     *\n     * @returns {boolean}\n     */\n  }, {\n    key: \"shouldBeRendered\",\n    value: function shouldBeRendered() {\n      return this.wot.getSetting('shouldRenderTopOverlay');\n    }\n    /**\n     * Updates the top overlay position.\n     *\n     * @returns {boolean}\n     */\n  }, {\n    key: \"resetFixedPosition\",\n    value: function resetFixedPosition() {\n      if (!this.needFullRender || !this.wot.wtTable.holder.parentNode) {\n        // removed from DOM\n        return;\n      }\n      var overlayRoot = this.clone.wtTable.holder.parentNode;\n      var preventOverflow = this.wot.getSetting('preventOverflow');\n      var headerPosition = 0;\n      var skipInnerBorderAdjusting = false;\n      if (this.trimmingContainer === this.wot.rootWindow && (!preventOverflow || preventOverflow !== 'vertical')) {\n        var wtTable = this.wot.wtTable;\n        var hiderRect = wtTable.hider.getBoundingClientRect();\n        var top = Math.ceil(hiderRect.top);\n        var bottom = Math.ceil(hiderRect.bottom);\n        var rootHeight = overlayRoot.offsetHeight; // This checks if the overlay is going to an infinite loop caused by added (or removed)\n        // `innerBorderTop` class name. Toggling the class name shifts the viewport by 1px and\n        // triggers the `scroll` event. It causes the table to render. The new render cycle takes into,\n        // account the shift and toggles the class name again. This causes the next loops. This\n        // happens only on Chrome (#7256).\n        //\n        // When we detect that the table bottom position is the same as the overlay bottom,\n        // do not toggle the class name.\n        //\n        // This workaround will be able to be cleared after merging the SVG borders, which introduces\n        // frozen lines (no more `innerBorderTop` workaround).\n\n        skipInnerBorderAdjusting = bottom === rootHeight;\n        var finalLeft;\n        var finalTop;\n        finalLeft = wtTable.hider.style.left;\n        finalLeft = finalLeft === '' ? 0 : finalLeft;\n        if (top < 0 && bottom - rootHeight > 0) {\n          finalTop = -top;\n        } else {\n          finalTop = 0;\n        }\n        headerPosition = finalTop;\n        finalTop += 'px';\n        setOverlayPosition(overlayRoot, finalLeft, finalTop);\n      } else {\n        headerPosition = this.getScrollPosition();\n        resetCssTransform(overlayRoot);\n      }\n      var positionChanged = this.adjustHeaderBordersPosition(headerPosition, skipInnerBorderAdjusting);\n      this.adjustElementsSize();\n      return positionChanged;\n    }\n    /**\n     * Sets the main overlay's vertical scroll position.\n     *\n     * @param {number} pos The scroll position.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"setScrollPosition\",\n    value: function setScrollPosition(pos) {\n      var rootWindow = this.wot.rootWindow;\n      var result = false;\n      if (this.mainTableScrollableElement === rootWindow && rootWindow.scrollY !== pos) {\n        rootWindow.scrollTo(getWindowScrollLeft(rootWindow), pos);\n        result = true;\n      } else if (this.mainTableScrollableElement.scrollTop !== pos) {\n        this.mainTableScrollableElement.scrollTop = pos;\n        result = true;\n      }\n      return result;\n    }\n    /**\n     * Triggers onScroll hook callback.\n     */\n  }, {\n    key: \"onScroll\",\n    value: function onScroll() {\n      this.wot.getSetting('onScrollHorizontally');\n    }\n    /**\n     * Calculates total sum cells height.\n     *\n     * @param {number} from Row index which calculates started from.\n     * @param {number} to Row index where calculation is finished.\n     * @returns {number} Height sum.\n     */\n  }, {\n    key: \"sumCellSizes\",\n    value: function sumCellSizes(from, to) {\n      var defaultRowHeight = this.wot.wtSettings.settings.defaultRowHeight;\n      var row = from;\n      var sum = 0;\n      while (row < to) {\n        var height = this.wot.wtTable.getRowHeight(row);\n        sum += height === void 0 ? defaultRowHeight : height;\n        row += 1;\n      }\n      return sum;\n    }\n    /**\n     * Adjust overlay root element, childs and master table element sizes (width, height).\n     *\n     * @param {boolean} [force=false] When `true`, it adjusts the DOM nodes sizes for that overlay.\n     */\n  }, {\n    key: \"adjustElementsSize\",\n    value: function adjustElementsSize() {\n      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      this.updateTrimmingContainer();\n      if (this.needFullRender || force) {\n        this.adjustRootElementSize();\n        this.adjustRootChildrenSize();\n      }\n    }\n    /**\n     * Adjust overlay root element size (width and height).\n     */\n  }, {\n    key: \"adjustRootElementSize\",\n    value: function adjustRootElementSize() {\n      var _this$wot = this.wot,\n        wtTable = _this$wot.wtTable,\n        rootDocument = _this$wot.rootDocument,\n        rootWindow = _this$wot.rootWindow;\n      var scrollbarWidth = getScrollbarWidth(rootDocument);\n      var overlayRoot = this.clone.wtTable.holder.parentNode;\n      var overlayRootStyle = overlayRoot.style;\n      var preventOverflow = this.wot.getSetting('preventOverflow');\n      if (this.trimmingContainer !== rootWindow || preventOverflow === 'horizontal') {\n        var width = this.wot.wtViewport.getWorkspaceWidth();\n        if (this.wot.wtOverlays.hasScrollbarRight) {\n          width -= scrollbarWidth;\n        }\n        width = Math.min(width, wtTable.wtRootElement.scrollWidth);\n        overlayRootStyle.width = \"\".concat(width, \"px\");\n      } else {\n        overlayRootStyle.width = '';\n      }\n      this.clone.wtTable.holder.style.width = overlayRootStyle.width;\n      var tableHeight = outerHeight(this.clone.wtTable.TABLE);\n      if (!this.wot.wtTable.hasDefinedSize()) {\n        tableHeight = 0;\n      }\n      overlayRootStyle.height = \"\".concat(tableHeight, \"px\");\n    }\n    /**\n     * Adjust overlay root childs size.\n     */\n  }, {\n    key: \"adjustRootChildrenSize\",\n    value: function adjustRootChildrenSize() {\n      var _selections$getCell$g;\n      var holder = this.clone.wtTable.holder;\n      var selections = this.wot.selections;\n      var selectionCornerOffset = Math.abs((_selections$getCell$g = selections === null || selections === void 0 ? void 0 : selections.getCell().getBorder(this.wot).cornerCenterPointOffset) !== null && _selections$getCell$g !== void 0 ? _selections$getCell$g : 0);\n      this.clone.wtTable.hider.style.width = this.hider.style.width;\n      holder.style.width = holder.parentNode.style.width; // Add selection corner protruding part to the holder total height to make sure that\n      // borders' corner won't be cut after vertical scroll (#6937).\n\n      holder.style.height = \"\".concat(parseInt(holder.parentNode.style.height, 10) + selectionCornerOffset, \"px\");\n    }\n    /**\n     * Adjust the overlay dimensions and position.\n     */\n  }, {\n    key: \"applyToDOM\",\n    value: function applyToDOM() {\n      var total = this.wot.getSetting('totalRows');\n      if (typeof this.wot.wtViewport.rowsRenderCalculator.startPosition === 'number') {\n        this.spreader.style.top = \"\".concat(this.wot.wtViewport.rowsRenderCalculator.startPosition, \"px\");\n      } else if (total === 0) {\n        // can happen if there are 0 rows\n        this.spreader.style.top = '0';\n      } else {\n        throw new Error('Incorrect value of the rowsRenderCalculator');\n      }\n      this.spreader.style.bottom = '';\n      if (this.needFullRender) {\n        this.syncOverlayOffset();\n      }\n    }\n    /**\n     * Synchronize calculated left position to an element.\n     */\n  }, {\n    key: \"syncOverlayOffset\",\n    value: function syncOverlayOffset() {\n      if (typeof this.wot.wtViewport.columnsRenderCalculator.startPosition === 'number') {\n        this.clone.wtTable.spreader.style.left = \"\".concat(this.wot.wtViewport.columnsRenderCalculator.startPosition, \"px\");\n      } else {\n        this.clone.wtTable.spreader.style.left = '';\n      }\n    }\n    /**\n     * Scrolls vertically to a row.\n     *\n     * @param {number} sourceRow Row index which you want to scroll to.\n     * @param {boolean} [bottomEdge] If `true`, scrolls according to the bottom edge (top edge is by default).\n     * @returns {boolean}\n     */\n  }, {\n    key: \"scrollTo\",\n    value: function scrollTo(sourceRow, bottomEdge) {\n      var wot = this.wot;\n      var sourceInstance = wot.cloneSource ? wot.cloneSource : wot;\n      var mainHolder = sourceInstance.wtTable.holder;\n      var newY = this.getTableParentOffset();\n      var scrollbarCompensation = 0;\n      if (bottomEdge && mainHolder.offsetHeight !== mainHolder.clientHeight) {\n        scrollbarCompensation = getScrollbarWidth(wot.rootDocument);\n      }\n      if (bottomEdge) {\n        var fixedRowsBottom = wot.getSetting('fixedRowsBottom');\n        var totalRows = wot.getSetting('totalRows');\n        newY += this.sumCellSizes(0, sourceRow + 1);\n        newY -= wot.wtViewport.getViewportHeight() - this.sumCellSizes(totalRows - fixedRowsBottom, totalRows); // Fix 1 pixel offset when cell is selected\n\n        newY += 1;\n      } else {\n        newY += this.sumCellSizes(wot.getSetting('fixedRowsTop'), sourceRow);\n      }\n      newY += scrollbarCompensation;\n      return this.setScrollPosition(newY);\n    }\n    /**\n     * Gets table parent top position.\n     *\n     * @returns {number}\n     */\n  }, {\n    key: \"getTableParentOffset\",\n    value: function getTableParentOffset() {\n      if (this.mainTableScrollableElement === this.wot.rootWindow) {\n        return this.wot.wtTable.holderOffset.top;\n      }\n      return 0;\n    }\n    /**\n     * Gets the main overlay's vertical scroll position.\n     *\n     * @returns {number} Main table's vertical scroll position.\n     */\n  }, {\n    key: \"getScrollPosition\",\n    value: function getScrollPosition() {\n      return getScrollTop(this.mainTableScrollableElement, this.wot.rootWindow);\n    }\n    /**\n     * Adds css classes to hide the header border's header (cell-selection border hiding issue).\n     *\n     * @param {number} position Header Y position if trimming container is window or scroll top if not.\n     * @param {boolean} [skipInnerBorderAdjusting=false] If `true` the inner border adjusting will be skipped.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"adjustHeaderBordersPosition\",\n    value: function adjustHeaderBordersPosition(position) {\n      var skipInnerBorderAdjusting = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var masterParent = this.wot.wtTable.holder.parentNode;\n      var totalColumns = this.wot.getSetting('totalColumns');\n      if (totalColumns) {\n        removeClass(masterParent, 'emptyColumns');\n      } else {\n        addClass(masterParent, 'emptyColumns');\n      }\n      var positionChanged = false;\n      if (!skipInnerBorderAdjusting) {\n        var fixedRowsTop = this.wot.getSetting('fixedRowsTop');\n        var areFixedRowsTopChanged = this.cachedFixedRowsTop !== fixedRowsTop;\n        var columnHeaders = this.wot.getSetting('columnHeaders');\n        if ((areFixedRowsTopChanged || fixedRowsTop === 0) && columnHeaders.length > 0) {\n          var previousState = hasClass(masterParent, 'innerBorderTop');\n          this.cachedFixedRowsTop = this.wot.getSetting('fixedRowsTop');\n          if (position || this.wot.getSetting('totalRows') === 0) {\n            addClass(masterParent, 'innerBorderTop');\n            positionChanged = !previousState;\n          } else {\n            removeClass(masterParent, 'innerBorderTop');\n            positionChanged = previousState;\n          }\n        }\n      }\n      return positionChanged;\n    }\n  }], [{\n    key: \"OVERLAY_NAME\",\n    get: function get() {\n      return CLONE_TOP;\n    }\n    /**\n     * Cached value which holds the previous value of the `fixedRowsTop` option.\n     * It is used as a comparison value that can be used to detect changes in this value.\n     *\n     * @type {number}\n     */\n  }]);\n  return TopOverlay;\n}(Overlay);","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_construct","Parent","args","Class","_isNativeReflectConstruct","Reflect","construct","a","push","apply","Constructor","Function","bind","instance","_setPrototypeOf","arguments","_classCallCheck","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_inherits","subClass","superClass","create","value","o","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","_possibleConstructorReturn","self","call","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","_defineProperty","addClass","getScrollbarWidth","getScrollTop","getWindowScrollLeft","hasClass","outerHeight","removeClass","setOverlayPosition","resetCssTransform","TopOverlayTable","Overlay","CLONE_TOP","TopOverlay","_Overlay","_super","wotInstance","_this","clone","makeClone","cachedFixedRowsTop","wot","getSetting","createTable","_len","Array","_key","shouldBeRendered","resetFixedPosition","needFullRender","wtTable","holder","parentNode","overlayRoot","preventOverflow","headerPosition","skipInnerBorderAdjusting","trimmingContainer","rootWindow","hiderRect","hider","getBoundingClientRect","top","Math","ceil","bottom","rootHeight","offsetHeight","finalLeft","finalTop","style","left","getScrollPosition","positionChanged","adjustHeaderBordersPosition","adjustElementsSize","setScrollPosition","pos","mainTableScrollableElement","scrollY","scrollTo","scrollTop","onScroll","sumCellSizes","from","to","defaultRowHeight","wtSettings","settings","row","sum","height","getRowHeight","force","undefined","updateTrimmingContainer","adjustRootElementSize","adjustRootChildrenSize","_this$wot","rootDocument","scrollbarWidth","overlayRootStyle","width","wtViewport","getWorkspaceWidth","wtOverlays","hasScrollbarRight","min","wtRootElement","scrollWidth","concat","tableHeight","TABLE","hasDefinedSize","_selections$getCell$g","selections","selectionCornerOffset","abs","getCell","getBorder","cornerCenterPointOffset","parseInt","applyToDOM","total","rowsRenderCalculator","startPosition","spreader","Error","syncOverlayOffset","columnsRenderCalculator","sourceRow","bottomEdge","sourceInstance","cloneSource","mainHolder","newY","getTableParentOffset","scrollbarCompensation","clientHeight","fixedRowsBottom","totalRows","getViewportHeight","holderOffset","position","masterParent","totalColumns","fixedRowsTop","areFixedRowsTopChanged","columnHeaders","previousState","get"],"sources":["/Users/priyadeliwala/Desktop/sales-dashboard/node_modules/handsontable/3rdparty/walkontable/src/overlay/top.mjs"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nimport \"core-js/modules/es.object.set-prototype-of.js\";\nimport \"core-js/modules/es.object.get-prototype-of.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.reflect.construct.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { addClass, getScrollbarWidth, getScrollTop, getWindowScrollLeft, hasClass, outerHeight, removeClass, setOverlayPosition, resetCssTransform } from \"./../../../../helpers/dom/element.mjs\";\nimport TopOverlayTable from \"./../table/top.mjs\";\nimport { Overlay } from \"./_base.mjs\";\nimport { CLONE_TOP } from \"./constants.mjs\";\n/**\n * @class TopOverlay\n */\n\nexport var TopOverlay = /*#__PURE__*/function (_Overlay) {\n  _inherits(TopOverlay, _Overlay);\n\n  var _super = _createSuper(TopOverlay);\n\n  /**\n   * @param {Walkontable} wotInstance The Walkontable instance.\n   */\n  function TopOverlay(wotInstance) {\n    var _this;\n\n    _classCallCheck(this, TopOverlay);\n\n    _this = _super.call(this, wotInstance);\n\n    _defineProperty(_assertThisInitialized(_this), \"cachedFixedRowsTop\", -1);\n\n    _this.clone = _this.makeClone(CLONE_TOP);\n    _this.cachedFixedRowsTop = _this.wot.getSetting('fixedRowsTop');\n    return _this;\n  }\n  /**\n   * Factory method to create a subclass of `Table` that is relevant to this overlay.\n   *\n   * @see Table#constructor\n   * @param {...*} args Parameters that will be forwarded to the `Table` constructor.\n   * @returns {Table}\n   */\n\n\n  _createClass(TopOverlay, [{\n    key: \"createTable\",\n    value: function createTable() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _construct(TopOverlayTable, args);\n    }\n    /**\n     * Checks if overlay should be fully rendered.\n     *\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"shouldBeRendered\",\n    value: function shouldBeRendered() {\n      return this.wot.getSetting('shouldRenderTopOverlay');\n    }\n    /**\n     * Updates the top overlay position.\n     *\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"resetFixedPosition\",\n    value: function resetFixedPosition() {\n      if (!this.needFullRender || !this.wot.wtTable.holder.parentNode) {\n        // removed from DOM\n        return;\n      }\n\n      var overlayRoot = this.clone.wtTable.holder.parentNode;\n      var preventOverflow = this.wot.getSetting('preventOverflow');\n      var headerPosition = 0;\n      var skipInnerBorderAdjusting = false;\n\n      if (this.trimmingContainer === this.wot.rootWindow && (!preventOverflow || preventOverflow !== 'vertical')) {\n        var wtTable = this.wot.wtTable;\n        var hiderRect = wtTable.hider.getBoundingClientRect();\n        var top = Math.ceil(hiderRect.top);\n        var bottom = Math.ceil(hiderRect.bottom);\n        var rootHeight = overlayRoot.offsetHeight; // This checks if the overlay is going to an infinite loop caused by added (or removed)\n        // `innerBorderTop` class name. Toggling the class name shifts the viewport by 1px and\n        // triggers the `scroll` event. It causes the table to render. The new render cycle takes into,\n        // account the shift and toggles the class name again. This causes the next loops. This\n        // happens only on Chrome (#7256).\n        //\n        // When we detect that the table bottom position is the same as the overlay bottom,\n        // do not toggle the class name.\n        //\n        // This workaround will be able to be cleared after merging the SVG borders, which introduces\n        // frozen lines (no more `innerBorderTop` workaround).\n\n        skipInnerBorderAdjusting = bottom === rootHeight;\n        var finalLeft;\n        var finalTop;\n        finalLeft = wtTable.hider.style.left;\n        finalLeft = finalLeft === '' ? 0 : finalLeft;\n\n        if (top < 0 && bottom - rootHeight > 0) {\n          finalTop = -top;\n        } else {\n          finalTop = 0;\n        }\n\n        headerPosition = finalTop;\n        finalTop += 'px';\n        setOverlayPosition(overlayRoot, finalLeft, finalTop);\n      } else {\n        headerPosition = this.getScrollPosition();\n        resetCssTransform(overlayRoot);\n      }\n\n      var positionChanged = this.adjustHeaderBordersPosition(headerPosition, skipInnerBorderAdjusting);\n      this.adjustElementsSize();\n      return positionChanged;\n    }\n    /**\n     * Sets the main overlay's vertical scroll position.\n     *\n     * @param {number} pos The scroll position.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"setScrollPosition\",\n    value: function setScrollPosition(pos) {\n      var rootWindow = this.wot.rootWindow;\n      var result = false;\n\n      if (this.mainTableScrollableElement === rootWindow && rootWindow.scrollY !== pos) {\n        rootWindow.scrollTo(getWindowScrollLeft(rootWindow), pos);\n        result = true;\n      } else if (this.mainTableScrollableElement.scrollTop !== pos) {\n        this.mainTableScrollableElement.scrollTop = pos;\n        result = true;\n      }\n\n      return result;\n    }\n    /**\n     * Triggers onScroll hook callback.\n     */\n\n  }, {\n    key: \"onScroll\",\n    value: function onScroll() {\n      this.wot.getSetting('onScrollHorizontally');\n    }\n    /**\n     * Calculates total sum cells height.\n     *\n     * @param {number} from Row index which calculates started from.\n     * @param {number} to Row index where calculation is finished.\n     * @returns {number} Height sum.\n     */\n\n  }, {\n    key: \"sumCellSizes\",\n    value: function sumCellSizes(from, to) {\n      var defaultRowHeight = this.wot.wtSettings.settings.defaultRowHeight;\n      var row = from;\n      var sum = 0;\n\n      while (row < to) {\n        var height = this.wot.wtTable.getRowHeight(row);\n        sum += height === void 0 ? defaultRowHeight : height;\n        row += 1;\n      }\n\n      return sum;\n    }\n    /**\n     * Adjust overlay root element, childs and master table element sizes (width, height).\n     *\n     * @param {boolean} [force=false] When `true`, it adjusts the DOM nodes sizes for that overlay.\n     */\n\n  }, {\n    key: \"adjustElementsSize\",\n    value: function adjustElementsSize() {\n      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      this.updateTrimmingContainer();\n\n      if (this.needFullRender || force) {\n        this.adjustRootElementSize();\n        this.adjustRootChildrenSize();\n      }\n    }\n    /**\n     * Adjust overlay root element size (width and height).\n     */\n\n  }, {\n    key: \"adjustRootElementSize\",\n    value: function adjustRootElementSize() {\n      var _this$wot = this.wot,\n          wtTable = _this$wot.wtTable,\n          rootDocument = _this$wot.rootDocument,\n          rootWindow = _this$wot.rootWindow;\n      var scrollbarWidth = getScrollbarWidth(rootDocument);\n      var overlayRoot = this.clone.wtTable.holder.parentNode;\n      var overlayRootStyle = overlayRoot.style;\n      var preventOverflow = this.wot.getSetting('preventOverflow');\n\n      if (this.trimmingContainer !== rootWindow || preventOverflow === 'horizontal') {\n        var width = this.wot.wtViewport.getWorkspaceWidth();\n\n        if (this.wot.wtOverlays.hasScrollbarRight) {\n          width -= scrollbarWidth;\n        }\n\n        width = Math.min(width, wtTable.wtRootElement.scrollWidth);\n        overlayRootStyle.width = \"\".concat(width, \"px\");\n      } else {\n        overlayRootStyle.width = '';\n      }\n\n      this.clone.wtTable.holder.style.width = overlayRootStyle.width;\n      var tableHeight = outerHeight(this.clone.wtTable.TABLE);\n\n      if (!this.wot.wtTable.hasDefinedSize()) {\n        tableHeight = 0;\n      }\n\n      overlayRootStyle.height = \"\".concat(tableHeight, \"px\");\n    }\n    /**\n     * Adjust overlay root childs size.\n     */\n\n  }, {\n    key: \"adjustRootChildrenSize\",\n    value: function adjustRootChildrenSize() {\n      var _selections$getCell$g;\n\n      var holder = this.clone.wtTable.holder;\n      var selections = this.wot.selections;\n      var selectionCornerOffset = Math.abs((_selections$getCell$g = selections === null || selections === void 0 ? void 0 : selections.getCell().getBorder(this.wot).cornerCenterPointOffset) !== null && _selections$getCell$g !== void 0 ? _selections$getCell$g : 0);\n      this.clone.wtTable.hider.style.width = this.hider.style.width;\n      holder.style.width = holder.parentNode.style.width; // Add selection corner protruding part to the holder total height to make sure that\n      // borders' corner won't be cut after vertical scroll (#6937).\n\n      holder.style.height = \"\".concat(parseInt(holder.parentNode.style.height, 10) + selectionCornerOffset, \"px\");\n    }\n    /**\n     * Adjust the overlay dimensions and position.\n     */\n\n  }, {\n    key: \"applyToDOM\",\n    value: function applyToDOM() {\n      var total = this.wot.getSetting('totalRows');\n\n      if (typeof this.wot.wtViewport.rowsRenderCalculator.startPosition === 'number') {\n        this.spreader.style.top = \"\".concat(this.wot.wtViewport.rowsRenderCalculator.startPosition, \"px\");\n      } else if (total === 0) {\n        // can happen if there are 0 rows\n        this.spreader.style.top = '0';\n      } else {\n        throw new Error('Incorrect value of the rowsRenderCalculator');\n      }\n\n      this.spreader.style.bottom = '';\n\n      if (this.needFullRender) {\n        this.syncOverlayOffset();\n      }\n    }\n    /**\n     * Synchronize calculated left position to an element.\n     */\n\n  }, {\n    key: \"syncOverlayOffset\",\n    value: function syncOverlayOffset() {\n      if (typeof this.wot.wtViewport.columnsRenderCalculator.startPosition === 'number') {\n        this.clone.wtTable.spreader.style.left = \"\".concat(this.wot.wtViewport.columnsRenderCalculator.startPosition, \"px\");\n      } else {\n        this.clone.wtTable.spreader.style.left = '';\n      }\n    }\n    /**\n     * Scrolls vertically to a row.\n     *\n     * @param {number} sourceRow Row index which you want to scroll to.\n     * @param {boolean} [bottomEdge] If `true`, scrolls according to the bottom edge (top edge is by default).\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"scrollTo\",\n    value: function scrollTo(sourceRow, bottomEdge) {\n      var wot = this.wot;\n      var sourceInstance = wot.cloneSource ? wot.cloneSource : wot;\n      var mainHolder = sourceInstance.wtTable.holder;\n      var newY = this.getTableParentOffset();\n      var scrollbarCompensation = 0;\n\n      if (bottomEdge && mainHolder.offsetHeight !== mainHolder.clientHeight) {\n        scrollbarCompensation = getScrollbarWidth(wot.rootDocument);\n      }\n\n      if (bottomEdge) {\n        var fixedRowsBottom = wot.getSetting('fixedRowsBottom');\n        var totalRows = wot.getSetting('totalRows');\n        newY += this.sumCellSizes(0, sourceRow + 1);\n        newY -= wot.wtViewport.getViewportHeight() - this.sumCellSizes(totalRows - fixedRowsBottom, totalRows); // Fix 1 pixel offset when cell is selected\n\n        newY += 1;\n      } else {\n        newY += this.sumCellSizes(wot.getSetting('fixedRowsTop'), sourceRow);\n      }\n\n      newY += scrollbarCompensation;\n      return this.setScrollPosition(newY);\n    }\n    /**\n     * Gets table parent top position.\n     *\n     * @returns {number}\n     */\n\n  }, {\n    key: \"getTableParentOffset\",\n    value: function getTableParentOffset() {\n      if (this.mainTableScrollableElement === this.wot.rootWindow) {\n        return this.wot.wtTable.holderOffset.top;\n      }\n\n      return 0;\n    }\n    /**\n     * Gets the main overlay's vertical scroll position.\n     *\n     * @returns {number} Main table's vertical scroll position.\n     */\n\n  }, {\n    key: \"getScrollPosition\",\n    value: function getScrollPosition() {\n      return getScrollTop(this.mainTableScrollableElement, this.wot.rootWindow);\n    }\n    /**\n     * Adds css classes to hide the header border's header (cell-selection border hiding issue).\n     *\n     * @param {number} position Header Y position if trimming container is window or scroll top if not.\n     * @param {boolean} [skipInnerBorderAdjusting=false] If `true` the inner border adjusting will be skipped.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"adjustHeaderBordersPosition\",\n    value: function adjustHeaderBordersPosition(position) {\n      var skipInnerBorderAdjusting = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var masterParent = this.wot.wtTable.holder.parentNode;\n      var totalColumns = this.wot.getSetting('totalColumns');\n\n      if (totalColumns) {\n        removeClass(masterParent, 'emptyColumns');\n      } else {\n        addClass(masterParent, 'emptyColumns');\n      }\n\n      var positionChanged = false;\n\n      if (!skipInnerBorderAdjusting) {\n        var fixedRowsTop = this.wot.getSetting('fixedRowsTop');\n        var areFixedRowsTopChanged = this.cachedFixedRowsTop !== fixedRowsTop;\n        var columnHeaders = this.wot.getSetting('columnHeaders');\n\n        if ((areFixedRowsTopChanged || fixedRowsTop === 0) && columnHeaders.length > 0) {\n          var previousState = hasClass(masterParent, 'innerBorderTop');\n          this.cachedFixedRowsTop = this.wot.getSetting('fixedRowsTop');\n\n          if (position || this.wot.getSetting('totalRows') === 0) {\n            addClass(masterParent, 'innerBorderTop');\n            positionChanged = !previousState;\n          } else {\n            removeClass(masterParent, 'innerBorderTop');\n            positionChanged = previousState;\n          }\n        }\n      }\n\n      return positionChanged;\n    }\n  }], [{\n    key: \"OVERLAY_NAME\",\n    get: function get() {\n      return CLONE_TOP;\n    }\n    /**\n     * Cached value which holds the previous value of the `fixedRowsTop` option.\n     * It is used as a comparison value that can be used to detect changes in this value.\n     *\n     * @type {number}\n     */\n\n  }]);\n\n  return TopOverlay;\n}(Overlay);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
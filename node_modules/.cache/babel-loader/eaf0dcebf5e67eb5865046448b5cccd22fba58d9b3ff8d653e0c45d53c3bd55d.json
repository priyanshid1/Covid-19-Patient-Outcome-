{"ast":null,"code":"import Core from \"./core.mjs\";\nimport { rootInstanceSymbol } from \"./utils/rootInstance.mjs\";\nimport { metaSchemaFactory } from \"./dataMap/index.mjs\";\nimport Hooks from \"./pluginHooks.mjs\"; // FIXME: Bug in eslint-plugin-import: https://github.com/benmosher/eslint-plugin-import/issues/1883\n\n/* eslint-disable import/named */\n\nimport { dictionaryKeys, getTranslatedPhrase, registerLanguageDictionary, getLanguagesDictionaries, getLanguageDictionary } from \"./i18n/registry.mjs\";\n/* eslint-enable import/named */\n\nimport { registerCellType } from \"./cellTypes/registry.mjs\";\nimport { TextCellType } from \"./cellTypes/textType/index.mjs\";\nimport { BaseEditor } from \"./editors/baseEditor/index.mjs\"; // register default mandatory cell type for the Base package\n\nregisterCellType(TextCellType); // export the `BaseEditor` class to the Handsontable global namespace\n\nHandsontable.editors = {\n  BaseEditor: BaseEditor\n};\n/**\n * @param {HTMLElement} rootElement The element to which the Handsontable instance is injected.\n * @param {object} userSettings The user defined options.\n * @returns {Core}\n */\n\nfunction Handsontable(rootElement, userSettings) {\n  var instance = new Core(rootElement, userSettings || {}, rootInstanceSymbol);\n  instance.init();\n  return instance;\n}\nHandsontable.Core = function (rootElement) {\n  var userSettings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return new Core(rootElement, userSettings, rootInstanceSymbol);\n};\nHandsontable.DefaultSettings = metaSchemaFactory();\nHandsontable.hooks = Hooks.getSingleton();\nHandsontable.packageName = 'handsontable';\nHandsontable.buildDate = \"13/01/2022 12:30:03\";\nHandsontable.version = \"11.1.0\";\nHandsontable.languages = {\n  dictionaryKeys: dictionaryKeys,\n  getLanguageDictionary: getLanguageDictionary,\n  getLanguagesDictionaries: getLanguagesDictionaries,\n  registerLanguageDictionary: registerLanguageDictionary,\n  getTranslatedPhrase: getTranslatedPhrase\n};\nexport default Handsontable;","map":{"version":3,"names":["Core","rootInstanceSymbol","metaSchemaFactory","Hooks","dictionaryKeys","getTranslatedPhrase","registerLanguageDictionary","getLanguagesDictionaries","getLanguageDictionary","registerCellType","TextCellType","BaseEditor","Handsontable","editors","rootElement","userSettings","instance","init","arguments","length","undefined","DefaultSettings","hooks","getSingleton","packageName","buildDate","version","languages"],"sources":["/Users/priyadeliwala/Desktop/sales-dashboard/node_modules/handsontable/base.mjs"],"sourcesContent":["import Core from \"./core.mjs\";\nimport { rootInstanceSymbol } from \"./utils/rootInstance.mjs\";\nimport { metaSchemaFactory } from \"./dataMap/index.mjs\";\nimport Hooks from \"./pluginHooks.mjs\"; // FIXME: Bug in eslint-plugin-import: https://github.com/benmosher/eslint-plugin-import/issues/1883\n\n/* eslint-disable import/named */\n\nimport { dictionaryKeys, getTranslatedPhrase, registerLanguageDictionary, getLanguagesDictionaries, getLanguageDictionary } from \"./i18n/registry.mjs\";\n/* eslint-enable import/named */\n\nimport { registerCellType } from \"./cellTypes/registry.mjs\";\nimport { TextCellType } from \"./cellTypes/textType/index.mjs\";\nimport { BaseEditor } from \"./editors/baseEditor/index.mjs\"; // register default mandatory cell type for the Base package\n\nregisterCellType(TextCellType); // export the `BaseEditor` class to the Handsontable global namespace\n\nHandsontable.editors = {\n  BaseEditor: BaseEditor\n};\n/**\n * @param {HTMLElement} rootElement The element to which the Handsontable instance is injected.\n * @param {object} userSettings The user defined options.\n * @returns {Core}\n */\n\nfunction Handsontable(rootElement, userSettings) {\n  var instance = new Core(rootElement, userSettings || {}, rootInstanceSymbol);\n  instance.init();\n  return instance;\n}\n\nHandsontable.Core = function (rootElement) {\n  var userSettings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return new Core(rootElement, userSettings, rootInstanceSymbol);\n};\n\nHandsontable.DefaultSettings = metaSchemaFactory();\nHandsontable.hooks = Hooks.getSingleton();\nHandsontable.packageName = 'handsontable';\nHandsontable.buildDate = \"13/01/2022 12:30:03\";\nHandsontable.version = \"11.1.0\";\nHandsontable.languages = {\n  dictionaryKeys: dictionaryKeys,\n  getLanguageDictionary: getLanguageDictionary,\n  getLanguagesDictionaries: getLanguagesDictionaries,\n  registerLanguageDictionary: registerLanguageDictionary,\n  getTranslatedPhrase: getTranslatedPhrase\n};\nexport default Handsontable;"],"mappings":"AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,SAASC,kBAAkB,QAAQ,0BAA0B;AAC7D,SAASC,iBAAiB,QAAQ,qBAAqB;AACvD,OAAOC,KAAK,MAAM,mBAAmB,CAAC,CAAC;;AAEvC;;AAEA,SAASC,cAAc,EAAEC,mBAAmB,EAAEC,0BAA0B,EAAEC,wBAAwB,EAAEC,qBAAqB,QAAQ,qBAAqB;AACtJ;;AAEA,SAASC,gBAAgB,QAAQ,0BAA0B;AAC3D,SAASC,YAAY,QAAQ,gCAAgC;AAC7D,SAASC,UAAU,QAAQ,gCAAgC,CAAC,CAAC;;AAE7DF,gBAAgB,CAACC,YAAY,CAAC,CAAC,CAAC;;AAEhCE,YAAY,CAACC,OAAO,GAAG;EACrBF,UAAU,EAAEA;AACd,CAAC;AACD;AACA;AACA;AACA;AACA;;AAEA,SAASC,YAAYA,CAACE,WAAW,EAAEC,YAAY,EAAE;EAC/C,IAAIC,QAAQ,GAAG,IAAIhB,IAAI,CAACc,WAAW,EAAEC,YAAY,IAAI,CAAC,CAAC,EAAEd,kBAAkB,CAAC;EAC5Ee,QAAQ,CAACC,IAAI,CAAC,CAAC;EACf,OAAOD,QAAQ;AACjB;AAEAJ,YAAY,CAACZ,IAAI,GAAG,UAAUc,WAAW,EAAE;EACzC,IAAIC,YAAY,GAAGG,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACzF,OAAO,IAAIlB,IAAI,CAACc,WAAW,EAAEC,YAAY,EAAEd,kBAAkB,CAAC;AAChE,CAAC;AAEDW,YAAY,CAACS,eAAe,GAAGnB,iBAAiB,CAAC,CAAC;AAClDU,YAAY,CAACU,KAAK,GAAGnB,KAAK,CAACoB,YAAY,CAAC,CAAC;AACzCX,YAAY,CAACY,WAAW,GAAG,cAAc;AACzCZ,YAAY,CAACa,SAAS,GAAG,qBAAqB;AAC9Cb,YAAY,CAACc,OAAO,GAAG,QAAQ;AAC/Bd,YAAY,CAACe,SAAS,GAAG;EACvBvB,cAAc,EAAEA,cAAc;EAC9BI,qBAAqB,EAAEA,qBAAqB;EAC5CD,wBAAwB,EAAEA,wBAAwB;EAClDD,0BAA0B,EAAEA,0BAA0B;EACtDD,mBAAmB,EAAEA;AACvB,CAAC;AACD,eAAeO,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"/**\n * Adds appropriate CSS class to table cell, based on cellProperties.\n */\nimport { addClass, removeClass } from \"../../helpers/dom/element.mjs\";\nexport var RENDERER_TYPE = 'base';\n/**\n * @param {Core} instance The Handsontable instance.\n * @param {HTMLTableCellElement} TD The rendered cell element.\n * @param {number} row The visual row index.\n * @param {number} col The visual column index.\n * @param {number|string} prop The column property (passed when datasource is an array of objects).\n * @param {*} value The rendered value.\n * @param {object} cellProperties The cell meta object ({@see Core#getCellMeta}).\n */\n\nexport function baseRenderer(instance, TD, row, col, prop, value, cellProperties) {\n  var classesToAdd = [];\n  var classesToRemove = [];\n  if (cellProperties.className) {\n    addClass(TD, cellProperties.className);\n  }\n  if (cellProperties.readOnly) {\n    classesToAdd.push(cellProperties.readOnlyCellClassName);\n  }\n  if (cellProperties.valid === false && cellProperties.invalidCellClassName) {\n    classesToAdd.push(cellProperties.invalidCellClassName);\n  } else {\n    classesToRemove.push(cellProperties.invalidCellClassName);\n  }\n  if (cellProperties.wordWrap === false && cellProperties.noWordWrapClassName) {\n    classesToAdd.push(cellProperties.noWordWrapClassName);\n  }\n  if (!value && cellProperties.placeholder) {\n    classesToAdd.push(cellProperties.placeholderCellClassName);\n  }\n  removeClass(TD, classesToRemove);\n  addClass(TD, classesToAdd);\n}\nbaseRenderer.RENDERER_TYPE = RENDERER_TYPE;","map":{"version":3,"names":["addClass","removeClass","RENDERER_TYPE","baseRenderer","instance","TD","row","col","prop","value","cellProperties","classesToAdd","classesToRemove","className","readOnly","push","readOnlyCellClassName","valid","invalidCellClassName","wordWrap","noWordWrapClassName","placeholder","placeholderCellClassName"],"sources":["/Users/priyadeliwala/Desktop/sales-dashboard/node_modules/handsontable/renderers/baseRenderer/baseRenderer.mjs"],"sourcesContent":["/**\n * Adds appropriate CSS class to table cell, based on cellProperties.\n */\nimport { addClass, removeClass } from \"../../helpers/dom/element.mjs\";\nexport var RENDERER_TYPE = 'base';\n/**\n * @param {Core} instance The Handsontable instance.\n * @param {HTMLTableCellElement} TD The rendered cell element.\n * @param {number} row The visual row index.\n * @param {number} col The visual column index.\n * @param {number|string} prop The column property (passed when datasource is an array of objects).\n * @param {*} value The rendered value.\n * @param {object} cellProperties The cell meta object ({@see Core#getCellMeta}).\n */\n\nexport function baseRenderer(instance, TD, row, col, prop, value, cellProperties) {\n  var classesToAdd = [];\n  var classesToRemove = [];\n\n  if (cellProperties.className) {\n    addClass(TD, cellProperties.className);\n  }\n\n  if (cellProperties.readOnly) {\n    classesToAdd.push(cellProperties.readOnlyCellClassName);\n  }\n\n  if (cellProperties.valid === false && cellProperties.invalidCellClassName) {\n    classesToAdd.push(cellProperties.invalidCellClassName);\n  } else {\n    classesToRemove.push(cellProperties.invalidCellClassName);\n  }\n\n  if (cellProperties.wordWrap === false && cellProperties.noWordWrapClassName) {\n    classesToAdd.push(cellProperties.noWordWrapClassName);\n  }\n\n  if (!value && cellProperties.placeholder) {\n    classesToAdd.push(cellProperties.placeholderCellClassName);\n  }\n\n  removeClass(TD, classesToRemove);\n  addClass(TD, classesToAdd);\n}\nbaseRenderer.RENDERER_TYPE = RENDERER_TYPE;"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,+BAA+B;AACrE,OAAO,IAAIC,aAAa,GAAG,MAAM;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,YAAYA,CAACC,QAAQ,EAAEC,EAAE,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAEC,KAAK,EAAEC,cAAc,EAAE;EAChF,IAAIC,YAAY,GAAG,EAAE;EACrB,IAAIC,eAAe,GAAG,EAAE;EAExB,IAAIF,cAAc,CAACG,SAAS,EAAE;IAC5Bb,QAAQ,CAACK,EAAE,EAAEK,cAAc,CAACG,SAAS,CAAC;EACxC;EAEA,IAAIH,cAAc,CAACI,QAAQ,EAAE;IAC3BH,YAAY,CAACI,IAAI,CAACL,cAAc,CAACM,qBAAqB,CAAC;EACzD;EAEA,IAAIN,cAAc,CAACO,KAAK,KAAK,KAAK,IAAIP,cAAc,CAACQ,oBAAoB,EAAE;IACzEP,YAAY,CAACI,IAAI,CAACL,cAAc,CAACQ,oBAAoB,CAAC;EACxD,CAAC,MAAM;IACLN,eAAe,CAACG,IAAI,CAACL,cAAc,CAACQ,oBAAoB,CAAC;EAC3D;EAEA,IAAIR,cAAc,CAACS,QAAQ,KAAK,KAAK,IAAIT,cAAc,CAACU,mBAAmB,EAAE;IAC3ET,YAAY,CAACI,IAAI,CAACL,cAAc,CAACU,mBAAmB,CAAC;EACvD;EAEA,IAAI,CAACX,KAAK,IAAIC,cAAc,CAACW,WAAW,EAAE;IACxCV,YAAY,CAACI,IAAI,CAACL,cAAc,CAACY,wBAAwB,CAAC;EAC5D;EAEArB,WAAW,CAACI,EAAE,EAAEO,eAAe,CAAC;EAChCZ,QAAQ,CAACK,EAAE,EAAEM,YAAY,CAAC;AAC5B;AACAR,YAAY,CAACD,aAAa,GAAGA,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
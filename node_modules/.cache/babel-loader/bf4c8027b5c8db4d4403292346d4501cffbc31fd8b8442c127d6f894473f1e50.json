{"ast":null,"code":"import { textRenderer } from \"../textRenderer/index.mjs\";\nimport { fastInnerHTML } from \"../../helpers/dom/element.mjs\";\nimport { rangeEach } from \"../../helpers/number.mjs\";\nexport var RENDERER_TYPE = 'password';\n/**\n * @private\n * @param {Core} instance The Handsontable instance.\n * @param {HTMLTableCellElement} TD The rendered cell element.\n * @param {number} row The visual row index.\n * @param {number} col The visual column index.\n * @param {number|string} prop The column property (passed when datasource is an array of objects).\n * @param {*} value The rendered value.\n * @param {object} cellProperties The cell meta object ({@see Core#getCellMeta}).\n */\n\nexport function passwordRenderer(instance, TD, row, col, prop, value, cellProperties) {\n  textRenderer.apply(this, [instance, TD, row, col, prop, value, cellProperties]);\n  var hashLength = cellProperties.hashLength || TD.innerHTML.length;\n  var hashSymbol = cellProperties.hashSymbol || '*';\n  var hash = '';\n  rangeEach(hashLength - 1, function () {\n    hash += hashSymbol;\n  });\n  fastInnerHTML(TD, hash);\n}\npasswordRenderer.RENDERER_TYPE = RENDERER_TYPE;","map":{"version":3,"names":["textRenderer","fastInnerHTML","rangeEach","RENDERER_TYPE","passwordRenderer","instance","TD","row","col","prop","value","cellProperties","apply","hashLength","innerHTML","length","hashSymbol","hash"],"sources":["/Users/priyadeliwala/Desktop/sales-dashboard/node_modules/handsontable/renderers/passwordRenderer/passwordRenderer.mjs"],"sourcesContent":["import { textRenderer } from \"../textRenderer/index.mjs\";\nimport { fastInnerHTML } from \"../../helpers/dom/element.mjs\";\nimport { rangeEach } from \"../../helpers/number.mjs\";\nexport var RENDERER_TYPE = 'password';\n/**\n * @private\n * @param {Core} instance The Handsontable instance.\n * @param {HTMLTableCellElement} TD The rendered cell element.\n * @param {number} row The visual row index.\n * @param {number} col The visual column index.\n * @param {number|string} prop The column property (passed when datasource is an array of objects).\n * @param {*} value The rendered value.\n * @param {object} cellProperties The cell meta object ({@see Core#getCellMeta}).\n */\n\nexport function passwordRenderer(instance, TD, row, col, prop, value, cellProperties) {\n  textRenderer.apply(this, [instance, TD, row, col, prop, value, cellProperties]);\n  var hashLength = cellProperties.hashLength || TD.innerHTML.length;\n  var hashSymbol = cellProperties.hashSymbol || '*';\n  var hash = '';\n  rangeEach(hashLength - 1, function () {\n    hash += hashSymbol;\n  });\n  fastInnerHTML(TD, hash);\n}\npasswordRenderer.RENDERER_TYPE = RENDERER_TYPE;"],"mappings":"AAAA,SAASA,YAAY,QAAQ,2BAA2B;AACxD,SAASC,aAAa,QAAQ,+BAA+B;AAC7D,SAASC,SAAS,QAAQ,0BAA0B;AACpD,OAAO,IAAIC,aAAa,GAAG,UAAU;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,gBAAgBA,CAACC,QAAQ,EAAEC,EAAE,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAEC,KAAK,EAAEC,cAAc,EAAE;EACpFX,YAAY,CAACY,KAAK,CAAC,IAAI,EAAE,CAACP,QAAQ,EAAEC,EAAE,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAEC,KAAK,EAAEC,cAAc,CAAC,CAAC;EAC/E,IAAIE,UAAU,GAAGF,cAAc,CAACE,UAAU,IAAIP,EAAE,CAACQ,SAAS,CAACC,MAAM;EACjE,IAAIC,UAAU,GAAGL,cAAc,CAACK,UAAU,IAAI,GAAG;EACjD,IAAIC,IAAI,GAAG,EAAE;EACbf,SAAS,CAACW,UAAU,GAAG,CAAC,EAAE,YAAY;IACpCI,IAAI,IAAID,UAAU;EACpB,CAAC,CAAC;EACFf,aAAa,CAACK,EAAE,EAAEW,IAAI,CAAC;AACzB;AACAb,gBAAgB,CAACD,aAAa,GAAGA,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"export var VALIDATOR_TYPE = 'autocomplete';\n/**\n * The Autocomplete cell validator.\n *\n * @private\n * @param {*} value Value of edited cell.\n * @param {Function} callback Callback called with validation result.\n */\n\nexport function autocompleteValidator(value, callback) {\n  var valueToValidate = value;\n  if (valueToValidate === null || valueToValidate === void 0) {\n    valueToValidate = '';\n  }\n  if (this.allowEmpty && valueToValidate === '') {\n    callback(true);\n    return;\n  }\n  if (this.strict && this.source) {\n    if (typeof this.source === 'function') {\n      this.source(valueToValidate, process(valueToValidate, callback));\n    } else {\n      process(valueToValidate, callback)(this.source);\n    }\n  } else {\n    callback(true);\n  }\n}\nautocompleteValidator.VALIDATOR_TYPE = VALIDATOR_TYPE;\n/**\n * Function responsible for validation of autocomplete value.\n *\n * @param {*} value Value of edited cell.\n * @param {Function} callback Callback called with validation result.\n * @returns {Function}\n */\n\nfunction process(value, callback) {\n  var originalVal = value;\n  return function (source) {\n    var found = false;\n    for (var s = 0, slen = source.length; s < slen; s++) {\n      if (originalVal === source[s]) {\n        found = true; // perfect match\n\n        break;\n      }\n    }\n    callback(found);\n  };\n}","map":{"version":3,"names":["VALIDATOR_TYPE","autocompleteValidator","value","callback","valueToValidate","allowEmpty","strict","source","process","originalVal","found","s","slen","length"],"sources":["/Users/priyadeliwala/Desktop/sales-dashboard/node_modules/handsontable/validators/autocompleteValidator/autocompleteValidator.mjs"],"sourcesContent":["export var VALIDATOR_TYPE = 'autocomplete';\n/**\n * The Autocomplete cell validator.\n *\n * @private\n * @param {*} value Value of edited cell.\n * @param {Function} callback Callback called with validation result.\n */\n\nexport function autocompleteValidator(value, callback) {\n  var valueToValidate = value;\n\n  if (valueToValidate === null || valueToValidate === void 0) {\n    valueToValidate = '';\n  }\n\n  if (this.allowEmpty && valueToValidate === '') {\n    callback(true);\n    return;\n  }\n\n  if (this.strict && this.source) {\n    if (typeof this.source === 'function') {\n      this.source(valueToValidate, process(valueToValidate, callback));\n    } else {\n      process(valueToValidate, callback)(this.source);\n    }\n  } else {\n    callback(true);\n  }\n}\nautocompleteValidator.VALIDATOR_TYPE = VALIDATOR_TYPE;\n/**\n * Function responsible for validation of autocomplete value.\n *\n * @param {*} value Value of edited cell.\n * @param {Function} callback Callback called with validation result.\n * @returns {Function}\n */\n\nfunction process(value, callback) {\n  var originalVal = value;\n  return function (source) {\n    var found = false;\n\n    for (var s = 0, slen = source.length; s < slen; s++) {\n      if (originalVal === source[s]) {\n        found = true; // perfect match\n\n        break;\n      }\n    }\n\n    callback(found);\n  };\n}"],"mappings":"AAAA,OAAO,IAAIA,cAAc,GAAG,cAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,qBAAqBA,CAACC,KAAK,EAAEC,QAAQ,EAAE;EACrD,IAAIC,eAAe,GAAGF,KAAK;EAE3B,IAAIE,eAAe,KAAK,IAAI,IAAIA,eAAe,KAAK,KAAK,CAAC,EAAE;IAC1DA,eAAe,GAAG,EAAE;EACtB;EAEA,IAAI,IAAI,CAACC,UAAU,IAAID,eAAe,KAAK,EAAE,EAAE;IAC7CD,QAAQ,CAAC,IAAI,CAAC;IACd;EACF;EAEA,IAAI,IAAI,CAACG,MAAM,IAAI,IAAI,CAACC,MAAM,EAAE;IAC9B,IAAI,OAAO,IAAI,CAACA,MAAM,KAAK,UAAU,EAAE;MACrC,IAAI,CAACA,MAAM,CAACH,eAAe,EAAEI,OAAO,CAACJ,eAAe,EAAED,QAAQ,CAAC,CAAC;IAClE,CAAC,MAAM;MACLK,OAAO,CAACJ,eAAe,EAAED,QAAQ,CAAC,CAAC,IAAI,CAACI,MAAM,CAAC;IACjD;EACF,CAAC,MAAM;IACLJ,QAAQ,CAAC,IAAI,CAAC;EAChB;AACF;AACAF,qBAAqB,CAACD,cAAc,GAAGA,cAAc;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASQ,OAAOA,CAACN,KAAK,EAAEC,QAAQ,EAAE;EAChC,IAAIM,WAAW,GAAGP,KAAK;EACvB,OAAO,UAAUK,MAAM,EAAE;IACvB,IAAIG,KAAK,GAAG,KAAK;IAEjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,IAAI,GAAGL,MAAM,CAACM,MAAM,EAAEF,CAAC,GAAGC,IAAI,EAAED,CAAC,EAAE,EAAE;MACnD,IAAIF,WAAW,KAAKF,MAAM,CAACI,CAAC,CAAC,EAAE;QAC7BD,KAAK,GAAG,IAAI,CAAC,CAAC;;QAEd;MACF;IACF;IAEAP,QAAQ,CAACO,KAAK,CAAC;EACjB,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
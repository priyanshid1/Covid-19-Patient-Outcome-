{"ast":null,"code":"import { checkSelectionConsistency, markLabelAsSelected } from \"../utils.mjs\";\nimport { arrayEach } from \"../../../helpers/array.mjs\";\nimport * as C from \"../../../i18n/constants.mjs\";\nexport const KEY = 'make_read_only';\n\n/**\n * @returns {object}\n */\nexport default function readOnlyItem() {\n  return {\n    key: KEY,\n    checkable: true,\n    ariaChecked() {\n      const atLeastOneReadOnly = checkSelectionConsistency(this.getSelectedRange(), (row, col) => this.getCellMeta(row, col).readOnly);\n      return atLeastOneReadOnly;\n    },\n    ariaLabel() {\n      return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_READ_ONLY);\n    },\n    name() {\n      let label = this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_READ_ONLY);\n      const atLeastOneReadOnly = checkSelectionConsistency(this.getSelectedRange(), (row, col) => this.getCellMeta(row, col).readOnly);\n      if (atLeastOneReadOnly) {\n        label = markLabelAsSelected(label);\n      }\n      return label;\n    },\n    callback() {\n      const ranges = this.getSelectedRange();\n      const atLeastOneReadOnly = checkSelectionConsistency(ranges, (row, col) => this.getCellMeta(row, col).readOnly);\n      arrayEach(ranges, range => {\n        range.forAll((row, col) => {\n          if (row >= 0 && col >= 0) {\n            this.setCellMeta(row, col, 'readOnly', !atLeastOneReadOnly);\n          }\n        });\n      });\n      this.render();\n    },\n    disabled() {\n      const range = this.getSelectedRangeLast();\n      if (!range) {\n        return true;\n      }\n      if (range.isSingleHeader()) {\n        return true;\n      }\n      if (this.selection.isSelectedByCorner()) {\n        return true;\n      }\n      if (this.countRows() === 0 || this.countCols() === 0) {\n        return true;\n      }\n      if (!this.getSelectedRange() || this.getSelectedRange().length === 0) {\n        return true;\n      }\n      return false;\n    }\n  };\n}","map":{"version":3,"names":["checkSelectionConsistency","markLabelAsSelected","arrayEach","C","KEY","readOnlyItem","key","checkable","ariaChecked","atLeastOneReadOnly","getSelectedRange","row","col","getCellMeta","readOnly","ariaLabel","getTranslatedPhrase","CONTEXTMENU_ITEMS_READ_ONLY","name","label","callback","ranges","range","forAll","setCellMeta","render","disabled","getSelectedRangeLast","isSingleHeader","selection","isSelectedByCorner","countRows","countCols","length"],"sources":["/Users/priyadeliwala/node_modules/handsontable/plugins/contextMenu/predefinedItems/readOnly.mjs"],"sourcesContent":["import { checkSelectionConsistency, markLabelAsSelected } from \"../utils.mjs\";\nimport { arrayEach } from \"../../../helpers/array.mjs\";\nimport * as C from \"../../../i18n/constants.mjs\";\nexport const KEY = 'make_read_only';\n\n/**\n * @returns {object}\n */\nexport default function readOnlyItem() {\n  return {\n    key: KEY,\n    checkable: true,\n    ariaChecked() {\n      const atLeastOneReadOnly = checkSelectionConsistency(this.getSelectedRange(), (row, col) => this.getCellMeta(row, col).readOnly);\n      return atLeastOneReadOnly;\n    },\n    ariaLabel() {\n      return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_READ_ONLY);\n    },\n    name() {\n      let label = this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_READ_ONLY);\n      const atLeastOneReadOnly = checkSelectionConsistency(this.getSelectedRange(), (row, col) => this.getCellMeta(row, col).readOnly);\n      if (atLeastOneReadOnly) {\n        label = markLabelAsSelected(label);\n      }\n      return label;\n    },\n    callback() {\n      const ranges = this.getSelectedRange();\n      const atLeastOneReadOnly = checkSelectionConsistency(ranges, (row, col) => this.getCellMeta(row, col).readOnly);\n      arrayEach(ranges, range => {\n        range.forAll((row, col) => {\n          if (row >= 0 && col >= 0) {\n            this.setCellMeta(row, col, 'readOnly', !atLeastOneReadOnly);\n          }\n        });\n      });\n      this.render();\n    },\n    disabled() {\n      const range = this.getSelectedRangeLast();\n      if (!range) {\n        return true;\n      }\n      if (range.isSingleHeader()) {\n        return true;\n      }\n      if (this.selection.isSelectedByCorner()) {\n        return true;\n      }\n      if (this.countRows() === 0 || this.countCols() === 0) {\n        return true;\n      }\n      if (!this.getSelectedRange() || this.getSelectedRange().length === 0) {\n        return true;\n      }\n      return false;\n    }\n  };\n}"],"mappings":"AAAA,SAASA,yBAAyB,EAAEC,mBAAmB,QAAQ,cAAc;AAC7E,SAASC,SAAS,QAAQ,4BAA4B;AACtD,OAAO,KAAKC,CAAC,MAAM,6BAA6B;AAChD,OAAO,MAAMC,GAAG,GAAG,gBAAgB;;AAEnC;AACA;AACA;AACA,eAAe,SAASC,YAAYA,CAAA,EAAG;EACrC,OAAO;IACLC,GAAG,EAAEF,GAAG;IACRG,SAAS,EAAE,IAAI;IACfC,WAAWA,CAAA,EAAG;MACZ,MAAMC,kBAAkB,GAAGT,yBAAyB,CAAC,IAAI,CAACU,gBAAgB,CAAC,CAAC,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK,IAAI,CAACC,WAAW,CAACF,GAAG,EAAEC,GAAG,CAAC,CAACE,QAAQ,CAAC;MAChI,OAAOL,kBAAkB;IAC3B,CAAC;IACDM,SAASA,CAAA,EAAG;MACV,OAAO,IAAI,CAACC,mBAAmB,CAACb,CAAC,CAACc,2BAA2B,CAAC;IAChE,CAAC;IACDC,IAAIA,CAAA,EAAG;MACL,IAAIC,KAAK,GAAG,IAAI,CAACH,mBAAmB,CAACb,CAAC,CAACc,2BAA2B,CAAC;MACnE,MAAMR,kBAAkB,GAAGT,yBAAyB,CAAC,IAAI,CAACU,gBAAgB,CAAC,CAAC,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK,IAAI,CAACC,WAAW,CAACF,GAAG,EAAEC,GAAG,CAAC,CAACE,QAAQ,CAAC;MAChI,IAAIL,kBAAkB,EAAE;QACtBU,KAAK,GAAGlB,mBAAmB,CAACkB,KAAK,CAAC;MACpC;MACA,OAAOA,KAAK;IACd,CAAC;IACDC,QAAQA,CAAA,EAAG;MACT,MAAMC,MAAM,GAAG,IAAI,CAACX,gBAAgB,CAAC,CAAC;MACtC,MAAMD,kBAAkB,GAAGT,yBAAyB,CAACqB,MAAM,EAAE,CAACV,GAAG,EAAEC,GAAG,KAAK,IAAI,CAACC,WAAW,CAACF,GAAG,EAAEC,GAAG,CAAC,CAACE,QAAQ,CAAC;MAC/GZ,SAAS,CAACmB,MAAM,EAAEC,KAAK,IAAI;QACzBA,KAAK,CAACC,MAAM,CAAC,CAACZ,GAAG,EAAEC,GAAG,KAAK;UACzB,IAAID,GAAG,IAAI,CAAC,IAAIC,GAAG,IAAI,CAAC,EAAE;YACxB,IAAI,CAACY,WAAW,CAACb,GAAG,EAAEC,GAAG,EAAE,UAAU,EAAE,CAACH,kBAAkB,CAAC;UAC7D;QACF,CAAC,CAAC;MACJ,CAAC,CAAC;MACF,IAAI,CAACgB,MAAM,CAAC,CAAC;IACf,CAAC;IACDC,QAAQA,CAAA,EAAG;MACT,MAAMJ,KAAK,GAAG,IAAI,CAACK,oBAAoB,CAAC,CAAC;MACzC,IAAI,CAACL,KAAK,EAAE;QACV,OAAO,IAAI;MACb;MACA,IAAIA,KAAK,CAACM,cAAc,CAAC,CAAC,EAAE;QAC1B,OAAO,IAAI;MACb;MACA,IAAI,IAAI,CAACC,SAAS,CAACC,kBAAkB,CAAC,CAAC,EAAE;QACvC,OAAO,IAAI;MACb;MACA,IAAI,IAAI,CAACC,SAAS,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAACC,SAAS,CAAC,CAAC,KAAK,CAAC,EAAE;QACpD,OAAO,IAAI;MACb;MACA,IAAI,CAAC,IAAI,CAACtB,gBAAgB,CAAC,CAAC,IAAI,IAAI,CAACA,gBAAgB,CAAC,CAAC,CAACuB,MAAM,KAAK,CAAC,EAAE;QACpE,OAAO,IAAI;MACb;MACA,OAAO,KAAK;IACd;EACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
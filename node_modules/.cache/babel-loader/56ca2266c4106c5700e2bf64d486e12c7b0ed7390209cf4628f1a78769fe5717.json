{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _s, _e;\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n  return _arr;\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nimport { BasePlugin } from \"../base/index.mjs\";\nimport { hasOwnProperty, objectEach } from \"../../helpers/object.mjs\";\nimport { rangeEach } from \"../../helpers/number.mjs\";\nimport { arrayEach, arrayReduce, arrayMap } from \"../../helpers/array.mjs\";\nimport { CellRange, CellCoords } from \"../../3rdparty/walkontable/src/index.mjs\";\nimport * as C from \"../../i18n/constants.mjs\";\nimport { bottom, left, noBorders, right, top } from \"./contextMenuItem/index.mjs\";\nimport { createId, createDefaultCustomBorder, createSingleEmptyBorder, createEmptyBorders, extendDefaultBorder } from \"./utils.mjs\";\nimport { detectSelectionType, normalizeSelectionFactory } from \"../../selection/index.mjs\";\nexport var PLUGIN_KEY = 'customBorders';\nexport var PLUGIN_PRIORITY = 90;\n/**\n * @plugin CustomBorders\n * @class CustomBorders\n *\n * @description\n * This plugin enables an option to apply custom borders through the context menu (configurable with context menu key\n * `borders`).\n *\n * To initialize Handsontable with predefined custom borders, provide cell coordinates and border styles in a form\n * of an array.\n *\n * See [Custom Borders](@/guides/cell-features/formatting-cells.md#custom-cell-borders) demo for more examples.\n *\n * @example\n * ```js\n * customBorders: [\n *   {\n *    range: {\n *      from: {\n *        row: 1,\n *        col: 1\n *      },\n *      to: {\n *        row: 3,\n *        col: 4\n *      },\n *    },\n *    left: {},\n *    right: {},\n *    top: {},\n *    bottom: {},\n *   },\n * ],\n *\n * // or\n * customBorders: [\n *   { row: 2,\n *     col: 2,\n *     left: {\n *       width: 2,\n *       color: 'red',\n *     },\n *     right: {\n *       width: 1,\n *       color: 'green',\n *     },\n *     top: '',\n *     bottom: '',\n *   }\n * ],\n * ```\n */\n\nexport var CustomBorders = /*#__PURE__*/function (_BasePlugin) {\n  _inherits(CustomBorders, _BasePlugin);\n  var _super = _createSuper(CustomBorders);\n  function CustomBorders(hotInstance) {\n    var _this;\n    _classCallCheck(this, CustomBorders);\n    _this = _super.call(this, hotInstance);\n    /**\n     * Saved borders.\n     *\n     * @private\n     * @type {Array}\n     */\n\n    _this.savedBorders = [];\n    return _this;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` than the {@link CustomBorders#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n\n  _createClass(CustomBorders, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return !!this.hot.getSettings()[PLUGIN_KEY];\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n      if (this.enabled) {\n        return;\n      }\n      this.addHook('afterContextMenuDefaultOptions', function (options) {\n        return _this2.onAfterContextMenuDefaultOptions(options);\n      });\n      this.addHook('init', function () {\n        return _this2.onAfterInit();\n      });\n      _get(_getPrototypeOf(CustomBorders.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      this.hideBorders();\n      _get(_getPrototypeOf(CustomBorders.prototype), \"disablePlugin\", this).call(this);\n    }\n    /**\n     * Updates the plugin state. This method is executed when {@link Core#updateSettings} is invoked.\n     */\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n      this.changeBorderSettings();\n      _get(_getPrototypeOf(CustomBorders.prototype), \"updatePlugin\", this).call(this);\n    }\n    /**\n     * Set custom borders.\n     *\n     * @example\n     * ```js\n     * const customBordersPlugin = hot.getPlugin('customBorders');\n     *\n     * // Using an array of arrays (produced by `.getSelected()` method).\n     * customBordersPlugin.setBorders([[1, 1, 2, 2], [6, 2, 0, 2]], {left: {width: 2, color: 'blue'}});\n     *\n     * // Using an array of CellRange objects (produced by `.getSelectedRange()` method).\n     * //  Selecting a cell range.\n     * hot.selectCell(0, 0, 2, 2);\n     * // Returning selected cells' range with the getSelectedRange method.\n     * customBordersPlugin.setBorders(hot.getSelectedRange(), {left: {hide: false, width: 2, color: 'blue'}});\n     * ```\n     *\n     * @param {Array[]|CellRange[]} selectionRanges Array of selection ranges.\n     * @param {object} borderObject Object with `top`, `right`, `bottom` and `left` properties.\n     */\n  }, {\n    key: \"setBorders\",\n    value: function setBorders(selectionRanges, borderObject) {\n      var _this3 = this;\n      var defaultBorderKeys = ['top', 'right', 'bottom', 'left'];\n      var borderKeys = borderObject ? Object.keys(borderObject) : defaultBorderKeys;\n      var selectionType = detectSelectionType(selectionRanges);\n      var selectionSchemaNormalizer = normalizeSelectionFactory(selectionType);\n      arrayEach(selectionRanges, function (selection) {\n        var _selectionSchemaNorma = selectionSchemaNormalizer(selection),\n          _selectionSchemaNorma2 = _slicedToArray(_selectionSchemaNorma, 4),\n          rowStart = _selectionSchemaNorma2[0],\n          columnStart = _selectionSchemaNorma2[1],\n          rowEnd = _selectionSchemaNorma2[2],\n          columnEnd = _selectionSchemaNorma2[3];\n        var _loop = function _loop(row) {\n          var _loop2 = function _loop2(col) {\n            arrayEach(borderKeys, function (borderKey) {\n              _this3.prepareBorderFromCustomAdded(row, col, borderObject, borderKey);\n            });\n          };\n          for (var col = columnStart; col <= columnEnd; col += 1) {\n            _loop2(col);\n          }\n        };\n        for (var row = rowStart; row <= rowEnd; row += 1) {\n          _loop(row);\n        }\n      });\n      /*\n      The line below triggers a re-render of Handsontable. This will be a \"fastDraw\"\n      render, because that is the default for the TableView class.\n       The re-render is needed for borders on cells that did not have a border before.\n      The way this call works is that it calls Table.refreshSelections, which calls\n      Selection.getBorder, which creates a new instance of Border.\n       Seems wise to keep this single-direction flow of creating new Borders\n      */\n\n      this.hot.view.render();\n    }\n    /**\n     * Get custom borders.\n     *\n     * @example\n     * ```js\n     * const customBordersPlugin = hot.getPlugin('customBorders');\n     *\n     * // Using an array of arrays (produced by `.getSelected()` method).\n     * customBordersPlugin.getBorders([[1, 1, 2, 2], [6, 2, 0, 2]]);\n     * // Using an array of CellRange objects (produced by `.getSelectedRange()` method).\n     * customBordersPlugin.getBorders(hot.getSelectedRange());\n     * // Using without param - return all customBorders.\n     * customBordersPlugin.getBorders();\n     * ```\n     *\n     * @param {Array[]|CellRange[]} selectionRanges Array of selection ranges.\n     * @returns {object[]} Returns array of border objects.\n     */\n  }, {\n    key: \"getBorders\",\n    value: function getBorders(selectionRanges) {\n      var _this4 = this;\n      if (!Array.isArray(selectionRanges)) {\n        return this.savedBorders;\n      }\n      var selectionType = detectSelectionType(selectionRanges);\n      var selectionSchemaNormalizer = normalizeSelectionFactory(selectionType);\n      var selectedBorders = [];\n      arrayEach(selectionRanges, function (selection) {\n        var _selectionSchemaNorma3 = selectionSchemaNormalizer(selection),\n          _selectionSchemaNorma4 = _slicedToArray(_selectionSchemaNorma3, 4),\n          rowStart = _selectionSchemaNorma4[0],\n          columnStart = _selectionSchemaNorma4[1],\n          rowEnd = _selectionSchemaNorma4[2],\n          columnEnd = _selectionSchemaNorma4[3];\n        var _loop3 = function _loop3(row) {\n          var _loop4 = function _loop4(col) {\n            arrayEach(_this4.savedBorders, function (border) {\n              if (border.row === row && border.col === col) {\n                selectedBorders.push(border);\n              }\n            });\n          };\n          for (var col = columnStart; col <= columnEnd; col += 1) {\n            _loop4(col);\n          }\n        };\n        for (var row = rowStart; row <= rowEnd; row += 1) {\n          _loop3(row);\n        }\n      });\n      return selectedBorders;\n    }\n    /**\n     * Clear custom borders.\n     *\n     * @example\n     * ```js\n     * const customBordersPlugin = hot.getPlugin('customBorders');\n     *\n     * // Using an array of arrays (produced by `.getSelected()` method).\n     * customBordersPlugin.clearBorders([[1, 1, 2, 2], [6, 2, 0, 2]]);\n     * // Using an array of CellRange objects (produced by `.getSelectedRange()` method).\n     * customBordersPlugin.clearBorders(hot.getSelectedRange());\n     * // Using without param - clear all customBorders.\n     * customBordersPlugin.clearBorders();\n     * ```\n     *\n     * @param {Array[]|CellRange[]} selectionRanges Array of selection ranges.\n     */\n  }, {\n    key: \"clearBorders\",\n    value: function clearBorders(selectionRanges) {\n      var _this5 = this;\n      if (selectionRanges) {\n        this.setBorders(selectionRanges);\n      } else {\n        arrayEach(this.savedBorders, function (border) {\n          _this5.clearBordersFromSelectionSettings(border.id);\n          _this5.clearNullCellRange();\n          _this5.hot.removeCellMeta(border.row, border.col, 'borders');\n        });\n        this.savedBorders.length = 0;\n      }\n    }\n    /**\n     * Insert WalkontableSelection instance into Walkontable settings.\n     *\n     * @private\n     * @param {object} border Object with `row` and `col`, `left`, `right`, `top` and `bottom`, `id` and `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n     * @param {string} place Coordinate where add/remove border - `top`, `bottom`, `left`, `right`.\n     */\n  }, {\n    key: \"insertBorderIntoSettings\",\n    value: function insertBorderIntoSettings(border, place) {\n      var hasSavedBorders = this.checkSavedBorders(border);\n      if (!hasSavedBorders) {\n        this.savedBorders.push(border);\n      }\n      var visualCellRange = new CellRange(new CellCoords(border.row, border.col));\n      var hasCustomSelections = this.checkCustomSelections(border, visualCellRange, place);\n      if (!hasCustomSelections) {\n        this.hot.selection.highlight.addCustomSelection({\n          border: border,\n          visualCellRange: visualCellRange\n        });\n      }\n    }\n    /**\n     * Prepare borders from setting (single cell).\n     *\n     * @private\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @param {object} borderDescriptor Object with `row` and `col`, `left`, `right`, `top` and `bottom` properties.\n     * @param {string} place Coordinate where add/remove border - `top`, `bottom`, `left`, `right`.\n     */\n  }, {\n    key: \"prepareBorderFromCustomAdded\",\n    value: function prepareBorderFromCustomAdded(row, column, borderDescriptor, place) {\n      var nrOfRows = this.hot.countRows();\n      var nrOfColumns = this.hot.countCols();\n      if (row >= nrOfRows || column >= nrOfColumns) {\n        return;\n      }\n      var border = createEmptyBorders(row, column);\n      if (borderDescriptor) {\n        border = extendDefaultBorder(border, borderDescriptor);\n        arrayEach(this.hot.selection.highlight.customSelections, function (customSelection) {\n          if (border.id === customSelection.settings.id) {\n            Object.assign(customSelection.settings, borderDescriptor);\n            border.id = customSelection.settings.id;\n            border.left = customSelection.settings.left;\n            border.right = customSelection.settings.right;\n            border.top = customSelection.settings.top;\n            border.bottom = customSelection.settings.bottom;\n            return false; // breaks forAll\n          }\n        });\n      }\n      this.hot.setCellMeta(row, column, 'borders', border);\n      this.insertBorderIntoSettings(border, place);\n    }\n    /**\n     * Prepare borders from setting (object).\n     *\n     * @private\n     * @param {object} rowDecriptor Object with `range`, `left`, `right`, `top` and `bottom` properties.\n     */\n  }, {\n    key: \"prepareBorderFromCustomAddedRange\",\n    value: function prepareBorderFromCustomAddedRange(rowDecriptor) {\n      var _this6 = this;\n      var range = rowDecriptor.range;\n      var lastRowIndex = Math.min(range.to.row, this.hot.countRows() - 1);\n      var lastColumnIndex = Math.min(range.to.col, this.hot.countCols() - 1);\n      rangeEach(range.from.row, lastRowIndex, function (rowIndex) {\n        rangeEach(range.from.col, lastColumnIndex, function (colIndex) {\n          var border = createEmptyBorders(rowIndex, colIndex);\n          var add = 0;\n          if (rowIndex === range.from.row) {\n            if (hasOwnProperty(rowDecriptor, 'top')) {\n              add += 1;\n              border.top = rowDecriptor.top;\n            }\n          } // Please keep in mind that `range.to.row` may be beyond the table boundaries. The border won't be rendered.\n\n          if (rowIndex === range.to.row) {\n            if (hasOwnProperty(rowDecriptor, 'bottom')) {\n              add += 1;\n              border.bottom = rowDecriptor.bottom;\n            }\n          }\n          if (colIndex === range.from.col) {\n            if (hasOwnProperty(rowDecriptor, 'left')) {\n              add += 1;\n              border.left = rowDecriptor.left;\n            }\n          } // Please keep in mind that `range.to.col` may be beyond the table boundaries. The border won't be rendered.\n\n          if (colIndex === range.to.col) {\n            if (hasOwnProperty(rowDecriptor, 'right')) {\n              add += 1;\n              border.right = rowDecriptor.right;\n            }\n          }\n          if (add > 0) {\n            _this6.hot.setCellMeta(rowIndex, colIndex, 'borders', border);\n            _this6.insertBorderIntoSettings(border);\n          } else {// TODO sometimes it enters here. Why?\n          }\n        });\n      });\n    }\n    /**\n     * Remove border (triggered from context menu).\n     *\n     * @private\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     */\n  }, {\n    key: \"removeAllBorders\",\n    value: function removeAllBorders(row, column) {\n      var borderId = createId(row, column);\n      this.spliceBorder(borderId);\n      this.clearBordersFromSelectionSettings(borderId);\n      this.clearNullCellRange();\n      this.hot.removeCellMeta(row, column, 'borders');\n    }\n    /**\n     * Set borders for each cell re. To border position.\n     *\n     * @private\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @param {string} place Coordinate where add/remove border - `top`, `bottom`, `left`, `right` and `noBorders`.\n     * @param {boolean} remove True when remove borders, and false when add borders.\n     */\n  }, {\n    key: \"setBorder\",\n    value: function setBorder(row, column, place, remove) {\n      var bordersMeta = this.hot.getCellMeta(row, column).borders;\n      if (!bordersMeta || bordersMeta.border === void 0) {\n        bordersMeta = createEmptyBorders(row, column);\n      }\n      if (remove) {\n        bordersMeta[place] = createSingleEmptyBorder();\n        var hideCount = this.countHide(bordersMeta);\n        if (hideCount === 4) {\n          this.removeAllBorders(row, column);\n        } else {\n          var customSelectionsChecker = this.checkCustomSelectionsFromContextMenu(bordersMeta, place, remove);\n          if (!customSelectionsChecker) {\n            this.insertBorderIntoSettings(bordersMeta);\n          }\n          this.hot.setCellMeta(row, column, 'borders', bordersMeta);\n        }\n      } else {\n        bordersMeta[place] = createDefaultCustomBorder();\n        var _customSelectionsChecker = this.checkCustomSelectionsFromContextMenu(bordersMeta, place, remove);\n        if (!_customSelectionsChecker) {\n          this.insertBorderIntoSettings(bordersMeta);\n        }\n        this.hot.setCellMeta(row, column, 'borders', bordersMeta);\n      }\n    }\n    /**\n     * Prepare borders based on cell and border position.\n     *\n     * @private\n     * @param {CellRange[]} selected An array of CellRange objects.\n     * @param {string} place Coordinate where add/remove border - `top`, `bottom`, `left`, `right` and `noBorders`.\n     * @param {boolean} remove True when remove borders, and false when add borders.\n     */\n  }, {\n    key: \"prepareBorder\",\n    value: function prepareBorder(selected, place, remove) {\n      var _this7 = this;\n      arrayEach(selected, function (_ref) {\n        var start = _ref.start,\n          end = _ref.end;\n        if (start.row === end.row && start.col === end.col) {\n          if (place === 'noBorders') {\n            _this7.removeAllBorders(start.row, start.col);\n          } else {\n            _this7.setBorder(start.row, start.col, place, remove);\n          }\n        } else {\n          switch (place) {\n            case 'noBorders':\n              rangeEach(start.col, end.col, function (colIndex) {\n                rangeEach(start.row, end.row, function (rowIndex) {\n                  _this7.removeAllBorders(rowIndex, colIndex);\n                });\n              });\n              break;\n            case 'top':\n              rangeEach(start.col, end.col, function (topCol) {\n                _this7.setBorder(start.row, topCol, place, remove);\n              });\n              break;\n            case 'right':\n              rangeEach(start.row, end.row, function (rowRight) {\n                _this7.setBorder(rowRight, end.col, place, remove);\n              });\n              break;\n            case 'bottom':\n              rangeEach(start.col, end.col, function (bottomCol) {\n                _this7.setBorder(end.row, bottomCol, place, remove);\n              });\n              break;\n            case 'left':\n              rangeEach(start.row, end.row, function (rowLeft) {\n                _this7.setBorder(rowLeft, start.col, place, remove);\n              });\n              break;\n            default:\n              break;\n          }\n        }\n      });\n    }\n    /**\n     * Create borders from settings.\n     *\n     * @private\n     * @param {Array} customBorders Object with `row` and `col`, `left`, `right`, `top` and `bottom` properties.\n     */\n  }, {\n    key: \"createCustomBorders\",\n    value: function createCustomBorders(customBorders) {\n      var _this8 = this;\n      arrayEach(customBorders, function (customBorder) {\n        if (customBorder.range) {\n          _this8.prepareBorderFromCustomAddedRange(customBorder);\n        } else {\n          _this8.prepareBorderFromCustomAdded(customBorder.row, customBorder.col, customBorder);\n        }\n      });\n    }\n    /**\n     * Count hide property in border object.\n     *\n     * @private\n     * @param {object} border Object with `row` and `col`, `left`, `right`, `top` and `bottom`, `id` and `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n     * @returns {number}\n     */\n  }, {\n    key: \"countHide\",\n    value: function countHide(border) {\n      var values = Object.values(border);\n      return arrayReduce(values, function (accumulator, value) {\n        var result = accumulator;\n        if (value.hide) {\n          result += 1;\n        }\n        return result;\n      }, 0);\n    }\n    /**\n     * Clear borders settings from custom selections.\n     *\n     * @private\n     * @param {string} borderId Border id name as string.\n     */\n  }, {\n    key: \"clearBordersFromSelectionSettings\",\n    value: function clearBordersFromSelectionSettings(borderId) {\n      var index = arrayMap(this.hot.selection.highlight.customSelections, function (customSelection) {\n        return customSelection.settings.id;\n      }).indexOf(borderId);\n      if (index > -1) {\n        this.hot.selection.highlight.customSelections[index].clear();\n      }\n    }\n    /**\n     * Clear cellRange with null value.\n     *\n     * @private\n     */\n  }, {\n    key: \"clearNullCellRange\",\n    value: function clearNullCellRange() {\n      var _this9 = this;\n      arrayEach(this.hot.selection.highlight.customSelections, function (customSelection, index) {\n        if (customSelection.cellRange === null) {\n          _this9.hot.selection.highlight.customSelections[index].destroy();\n          _this9.hot.selection.highlight.customSelections.splice(index, 1);\n          return false; // breaks forAll\n        }\n      });\n    }\n    /**\n     * Hide custom borders.\n     *\n     * @private\n     */\n  }, {\n    key: \"hideBorders\",\n    value: function hideBorders() {\n      var _this10 = this;\n      arrayEach(this.savedBorders, function (border) {\n        _this10.clearBordersFromSelectionSettings(border.id);\n        _this10.clearNullCellRange();\n      });\n    }\n    /**\n     * Splice border from savedBorders.\n     *\n     * @private\n     * @param {string} borderId Border id name as string.\n     */\n  }, {\n    key: \"spliceBorder\",\n    value: function spliceBorder(borderId) {\n      var index = arrayMap(this.savedBorders, function (border) {\n        return border.id;\n      }).indexOf(borderId);\n      if (index > -1) {\n        this.savedBorders.splice(index, 1);\n      }\n    }\n    /**\n     * Check if an border already exists in the savedBorders array, and if true update border in savedBorders.\n     *\n     * @private\n     * @param {object} border Object with `row` and `col`, `left`, `right`, `top` and `bottom`, `id` and `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n     *\n     * @returns {boolean}\n     */\n  }, {\n    key: \"checkSavedBorders\",\n    value: function checkSavedBorders(border) {\n      var _this11 = this;\n      var check = false;\n      var hideCount = this.countHide(border);\n      if (hideCount === 4) {\n        this.spliceBorder(border.id);\n        check = true;\n      } else {\n        arrayEach(this.savedBorders, function (savedBorder, index) {\n          if (border.id === savedBorder.id) {\n            _this11.savedBorders[index] = border;\n            check = true;\n            return false; // breaks forAll\n          }\n        });\n      }\n      return check;\n    }\n    /**\n     * Check if an border already exists in the customSelections, and if true call toggleHiddenClass method.\n     *\n     * @private\n     * @param {object} border Object with `row` and `col`, `left`, `right`, `top` and `bottom`, `id` and `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n     * @param {string} place Coordinate where add/remove border - `top`, `bottom`, `left`, `right` and `noBorders`.\n     * @param {boolean} remove True when remove borders, and false when add borders.\n     *\n     * @returns {boolean}\n     */\n  }, {\n    key: \"checkCustomSelectionsFromContextMenu\",\n    value: function checkCustomSelectionsFromContextMenu(border, place, remove) {\n      var check = false;\n      arrayEach(this.hot.selection.highlight.customSelections, function (customSelection) {\n        if (border.id === customSelection.settings.id) {\n          objectEach(customSelection.instanceBorders, function (borderObject) {\n            borderObject.toggleHiddenClass(place, remove); // TODO this also bad?\n          });\n          check = true;\n          return false; // breaks forAll\n        }\n      });\n      return check;\n    }\n    /**\n     * Check if an border already exists in the customSelections, and if true reset cellRange.\n     *\n     * @private\n     * @param {object} border Object with `row` and `col`, `left`, `right`, `top` and `bottom`, `id` and `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n     * @param {CellRange} cellRange The selection range to check.\n     * @param {string} place Coordinate where add/remove border - `top`, `bottom`, `left`, `right`.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"checkCustomSelections\",\n    value: function checkCustomSelections(border, cellRange, place) {\n      var hideCount = this.countHide(border);\n      var check = false;\n      if (hideCount === 4) {\n        this.removeAllBorders(border.row, border.col);\n        check = true;\n      } else {\n        arrayEach(this.hot.selection.highlight.customSelections, function (customSelection) {\n          if (border.id === customSelection.settings.id) {\n            customSelection.visualCellRange = cellRange;\n            customSelection.commit();\n            if (place) {\n              objectEach(customSelection.instanceBorders, function (borderObject) {\n                borderObject.changeBorderStyle(place, border);\n              });\n            }\n            check = true;\n            return false; // breaks forAll\n          }\n        });\n      }\n      return check;\n    }\n    /**\n     * Change borders from settings.\n     *\n     * @private\n     */\n  }, {\n    key: \"changeBorderSettings\",\n    value: function changeBorderSettings() {\n      var customBorders = this.hot.getSettings()[PLUGIN_KEY];\n      if (Array.isArray(customBorders)) {\n        if (!customBorders.length) {\n          this.savedBorders = customBorders;\n        }\n        this.createCustomBorders(customBorders);\n      } else if (customBorders !== void 0) {\n        this.createCustomBorders(this.savedBorders);\n      }\n    }\n    /**\n     * Add border options to context menu.\n     *\n     * @private\n     * @param {object} defaultOptions Context menu items.\n     */\n  }, {\n    key: \"onAfterContextMenuDefaultOptions\",\n    value: function onAfterContextMenuDefaultOptions(defaultOptions) {\n      if (!this.hot.getSettings()[PLUGIN_KEY]) {\n        return;\n      }\n      defaultOptions.items.push({\n        name: '---------'\n      }, {\n        key: 'borders',\n        name: function name() {\n          return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_BORDERS);\n        },\n        disabled: function disabled() {\n          return this.selection.isSelectedByCorner();\n        },\n        submenu: {\n          items: [top(this), right(this), bottom(this), left(this), noBorders(this)]\n        }\n      });\n    }\n    /**\n     * `afterInit` hook callback.\n     *\n     * @private\n     */\n  }, {\n    key: \"onAfterInit\",\n    value: function onAfterInit() {\n      this.changeBorderSettings();\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _get(_getPrototypeOf(CustomBorders.prototype), \"destroy\", this).call(this);\n    }\n  }], [{\n    key: \"PLUGIN_KEY\",\n    get: function get() {\n      return PLUGIN_KEY;\n    }\n  }, {\n    key: \"PLUGIN_PRIORITY\",\n    get: function get() {\n      return PLUGIN_PRIORITY;\n    }\n  }]);\n  return CustomBorders;\n}(BasePlugin);","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","Object","toString","call","slice","name","Array","from","test","len","length","arr2","_i","_arr","_n","_d","_s","_e","next","done","push","value","err","isArray","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","_get","Reflect","get","property","receiver","base","_superPropBase","desc","getOwnPropertyDescriptor","arguments","apply","object","hasOwnProperty","_getPrototypeOf","_inherits","subClass","superClass","create","_setPrototypeOf","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","construct","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","BasePlugin","objectEach","rangeEach","arrayEach","arrayReduce","arrayMap","CellRange","CellCoords","C","bottom","left","noBorders","right","top","createId","createDefaultCustomBorder","createSingleEmptyBorder","createEmptyBorders","extendDefaultBorder","detectSelectionType","normalizeSelectionFactory","PLUGIN_KEY","PLUGIN_PRIORITY","CustomBorders","_BasePlugin","_super","hotInstance","_this","savedBorders","isEnabled","hot","getSettings","enablePlugin","_this2","enabled","addHook","options","onAfterContextMenuDefaultOptions","onAfterInit","disablePlugin","hideBorders","updatePlugin","changeBorderSettings","setBorders","selectionRanges","borderObject","_this3","defaultBorderKeys","borderKeys","keys","selectionType","selectionSchemaNormalizer","selection","_selectionSchemaNorma","_selectionSchemaNorma2","rowStart","columnStart","rowEnd","columnEnd","_loop","row","_loop2","col","borderKey","prepareBorderFromCustomAdded","view","render","getBorders","_this4","selectedBorders","_selectionSchemaNorma3","_selectionSchemaNorma4","_loop3","_loop4","border","clearBorders","_this5","clearBordersFromSelectionSettings","id","clearNullCellRange","removeCellMeta","insertBorderIntoSettings","place","hasSavedBorders","checkSavedBorders","visualCellRange","hasCustomSelections","checkCustomSelections","highlight","addCustomSelection","column","borderDescriptor","nrOfRows","countRows","nrOfColumns","countCols","customSelections","customSelection","settings","assign","setCellMeta","prepareBorderFromCustomAddedRange","rowDecriptor","_this6","range","lastRowIndex","Math","min","to","lastColumnIndex","rowIndex","colIndex","add","removeAllBorders","borderId","spliceBorder","setBorder","remove","bordersMeta","getCellMeta","borders","hideCount","countHide","customSelectionsChecker","checkCustomSelectionsFromContextMenu","_customSelectionsChecker","prepareBorder","selected","_this7","_ref","start","end","topCol","rowRight","bottomCol","rowLeft","createCustomBorders","customBorders","_this8","customBorder","values","accumulator","hide","index","indexOf","clear","_this9","cellRange","destroy","splice","_this10","_this11","check","savedBorder","instanceBorders","toggleHiddenClass","commit","changeBorderStyle","defaultOptions","items","getTranslatedPhrase","CONTEXTMENU_ITEMS_BORDERS","disabled","isSelectedByCorner","submenu"],"sources":["/Users/priyadeliwala/Desktop/sales-dashboard/node_modules/handsontable/plugins/customBorders/customBorders.mjs"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.object.values.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.object.set-prototype-of.js\";\nimport \"core-js/modules/es.object.get-prototype-of.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.reflect.construct.js\";\nimport \"core-js/modules/es.reflect.get.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _get() { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport { BasePlugin } from \"../base/index.mjs\";\nimport { hasOwnProperty, objectEach } from \"../../helpers/object.mjs\";\nimport { rangeEach } from \"../../helpers/number.mjs\";\nimport { arrayEach, arrayReduce, arrayMap } from \"../../helpers/array.mjs\";\nimport { CellRange, CellCoords } from \"../../3rdparty/walkontable/src/index.mjs\";\nimport * as C from \"../../i18n/constants.mjs\";\nimport { bottom, left, noBorders, right, top } from \"./contextMenuItem/index.mjs\";\nimport { createId, createDefaultCustomBorder, createSingleEmptyBorder, createEmptyBorders, extendDefaultBorder } from \"./utils.mjs\";\nimport { detectSelectionType, normalizeSelectionFactory } from \"../../selection/index.mjs\";\nexport var PLUGIN_KEY = 'customBorders';\nexport var PLUGIN_PRIORITY = 90;\n/**\n * @plugin CustomBorders\n * @class CustomBorders\n *\n * @description\n * This plugin enables an option to apply custom borders through the context menu (configurable with context menu key\n * `borders`).\n *\n * To initialize Handsontable with predefined custom borders, provide cell coordinates and border styles in a form\n * of an array.\n *\n * See [Custom Borders](@/guides/cell-features/formatting-cells.md#custom-cell-borders) demo for more examples.\n *\n * @example\n * ```js\n * customBorders: [\n *   {\n *    range: {\n *      from: {\n *        row: 1,\n *        col: 1\n *      },\n *      to: {\n *        row: 3,\n *        col: 4\n *      },\n *    },\n *    left: {},\n *    right: {},\n *    top: {},\n *    bottom: {},\n *   },\n * ],\n *\n * // or\n * customBorders: [\n *   { row: 2,\n *     col: 2,\n *     left: {\n *       width: 2,\n *       color: 'red',\n *     },\n *     right: {\n *       width: 1,\n *       color: 'green',\n *     },\n *     top: '',\n *     bottom: '',\n *   }\n * ],\n * ```\n */\n\nexport var CustomBorders = /*#__PURE__*/function (_BasePlugin) {\n  _inherits(CustomBorders, _BasePlugin);\n\n  var _super = _createSuper(CustomBorders);\n\n  function CustomBorders(hotInstance) {\n    var _this;\n\n    _classCallCheck(this, CustomBorders);\n\n    _this = _super.call(this, hotInstance);\n    /**\n     * Saved borders.\n     *\n     * @private\n     * @type {Array}\n     */\n\n    _this.savedBorders = [];\n    return _this;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` than the {@link CustomBorders#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n\n\n  _createClass(CustomBorders, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return !!this.hot.getSettings()[PLUGIN_KEY];\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n\n      if (this.enabled) {\n        return;\n      }\n\n      this.addHook('afterContextMenuDefaultOptions', function (options) {\n        return _this2.onAfterContextMenuDefaultOptions(options);\n      });\n      this.addHook('init', function () {\n        return _this2.onAfterInit();\n      });\n\n      _get(_getPrototypeOf(CustomBorders.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      this.hideBorders();\n\n      _get(_getPrototypeOf(CustomBorders.prototype), \"disablePlugin\", this).call(this);\n    }\n    /**\n     * Updates the plugin state. This method is executed when {@link Core#updateSettings} is invoked.\n     */\n\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n      this.changeBorderSettings();\n\n      _get(_getPrototypeOf(CustomBorders.prototype), \"updatePlugin\", this).call(this);\n    }\n    /**\n     * Set custom borders.\n     *\n     * @example\n     * ```js\n     * const customBordersPlugin = hot.getPlugin('customBorders');\n     *\n     * // Using an array of arrays (produced by `.getSelected()` method).\n     * customBordersPlugin.setBorders([[1, 1, 2, 2], [6, 2, 0, 2]], {left: {width: 2, color: 'blue'}});\n     *\n     * // Using an array of CellRange objects (produced by `.getSelectedRange()` method).\n     * //  Selecting a cell range.\n     * hot.selectCell(0, 0, 2, 2);\n     * // Returning selected cells' range with the getSelectedRange method.\n     * customBordersPlugin.setBorders(hot.getSelectedRange(), {left: {hide: false, width: 2, color: 'blue'}});\n     * ```\n     *\n     * @param {Array[]|CellRange[]} selectionRanges Array of selection ranges.\n     * @param {object} borderObject Object with `top`, `right`, `bottom` and `left` properties.\n     */\n\n  }, {\n    key: \"setBorders\",\n    value: function setBorders(selectionRanges, borderObject) {\n      var _this3 = this;\n\n      var defaultBorderKeys = ['top', 'right', 'bottom', 'left'];\n      var borderKeys = borderObject ? Object.keys(borderObject) : defaultBorderKeys;\n      var selectionType = detectSelectionType(selectionRanges);\n      var selectionSchemaNormalizer = normalizeSelectionFactory(selectionType);\n      arrayEach(selectionRanges, function (selection) {\n        var _selectionSchemaNorma = selectionSchemaNormalizer(selection),\n            _selectionSchemaNorma2 = _slicedToArray(_selectionSchemaNorma, 4),\n            rowStart = _selectionSchemaNorma2[0],\n            columnStart = _selectionSchemaNorma2[1],\n            rowEnd = _selectionSchemaNorma2[2],\n            columnEnd = _selectionSchemaNorma2[3];\n\n        var _loop = function _loop(row) {\n          var _loop2 = function _loop2(col) {\n            arrayEach(borderKeys, function (borderKey) {\n              _this3.prepareBorderFromCustomAdded(row, col, borderObject, borderKey);\n            });\n          };\n\n          for (var col = columnStart; col <= columnEnd; col += 1) {\n            _loop2(col);\n          }\n        };\n\n        for (var row = rowStart; row <= rowEnd; row += 1) {\n          _loop(row);\n        }\n      });\n      /*\n      The line below triggers a re-render of Handsontable. This will be a \"fastDraw\"\n      render, because that is the default for the TableView class.\n       The re-render is needed for borders on cells that did not have a border before.\n      The way this call works is that it calls Table.refreshSelections, which calls\n      Selection.getBorder, which creates a new instance of Border.\n       Seems wise to keep this single-direction flow of creating new Borders\n      */\n\n      this.hot.view.render();\n    }\n    /**\n     * Get custom borders.\n     *\n     * @example\n     * ```js\n     * const customBordersPlugin = hot.getPlugin('customBorders');\n     *\n     * // Using an array of arrays (produced by `.getSelected()` method).\n     * customBordersPlugin.getBorders([[1, 1, 2, 2], [6, 2, 0, 2]]);\n     * // Using an array of CellRange objects (produced by `.getSelectedRange()` method).\n     * customBordersPlugin.getBorders(hot.getSelectedRange());\n     * // Using without param - return all customBorders.\n     * customBordersPlugin.getBorders();\n     * ```\n     *\n     * @param {Array[]|CellRange[]} selectionRanges Array of selection ranges.\n     * @returns {object[]} Returns array of border objects.\n     */\n\n  }, {\n    key: \"getBorders\",\n    value: function getBorders(selectionRanges) {\n      var _this4 = this;\n\n      if (!Array.isArray(selectionRanges)) {\n        return this.savedBorders;\n      }\n\n      var selectionType = detectSelectionType(selectionRanges);\n      var selectionSchemaNormalizer = normalizeSelectionFactory(selectionType);\n      var selectedBorders = [];\n      arrayEach(selectionRanges, function (selection) {\n        var _selectionSchemaNorma3 = selectionSchemaNormalizer(selection),\n            _selectionSchemaNorma4 = _slicedToArray(_selectionSchemaNorma3, 4),\n            rowStart = _selectionSchemaNorma4[0],\n            columnStart = _selectionSchemaNorma4[1],\n            rowEnd = _selectionSchemaNorma4[2],\n            columnEnd = _selectionSchemaNorma4[3];\n\n        var _loop3 = function _loop3(row) {\n          var _loop4 = function _loop4(col) {\n            arrayEach(_this4.savedBorders, function (border) {\n              if (border.row === row && border.col === col) {\n                selectedBorders.push(border);\n              }\n            });\n          };\n\n          for (var col = columnStart; col <= columnEnd; col += 1) {\n            _loop4(col);\n          }\n        };\n\n        for (var row = rowStart; row <= rowEnd; row += 1) {\n          _loop3(row);\n        }\n      });\n      return selectedBorders;\n    }\n    /**\n     * Clear custom borders.\n     *\n     * @example\n     * ```js\n     * const customBordersPlugin = hot.getPlugin('customBorders');\n     *\n     * // Using an array of arrays (produced by `.getSelected()` method).\n     * customBordersPlugin.clearBorders([[1, 1, 2, 2], [6, 2, 0, 2]]);\n     * // Using an array of CellRange objects (produced by `.getSelectedRange()` method).\n     * customBordersPlugin.clearBorders(hot.getSelectedRange());\n     * // Using without param - clear all customBorders.\n     * customBordersPlugin.clearBorders();\n     * ```\n     *\n     * @param {Array[]|CellRange[]} selectionRanges Array of selection ranges.\n     */\n\n  }, {\n    key: \"clearBorders\",\n    value: function clearBorders(selectionRanges) {\n      var _this5 = this;\n\n      if (selectionRanges) {\n        this.setBorders(selectionRanges);\n      } else {\n        arrayEach(this.savedBorders, function (border) {\n          _this5.clearBordersFromSelectionSettings(border.id);\n\n          _this5.clearNullCellRange();\n\n          _this5.hot.removeCellMeta(border.row, border.col, 'borders');\n        });\n        this.savedBorders.length = 0;\n      }\n    }\n    /**\n     * Insert WalkontableSelection instance into Walkontable settings.\n     *\n     * @private\n     * @param {object} border Object with `row` and `col`, `left`, `right`, `top` and `bottom`, `id` and `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n     * @param {string} place Coordinate where add/remove border - `top`, `bottom`, `left`, `right`.\n     */\n\n  }, {\n    key: \"insertBorderIntoSettings\",\n    value: function insertBorderIntoSettings(border, place) {\n      var hasSavedBorders = this.checkSavedBorders(border);\n\n      if (!hasSavedBorders) {\n        this.savedBorders.push(border);\n      }\n\n      var visualCellRange = new CellRange(new CellCoords(border.row, border.col));\n      var hasCustomSelections = this.checkCustomSelections(border, visualCellRange, place);\n\n      if (!hasCustomSelections) {\n        this.hot.selection.highlight.addCustomSelection({\n          border: border,\n          visualCellRange: visualCellRange\n        });\n      }\n    }\n    /**\n     * Prepare borders from setting (single cell).\n     *\n     * @private\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @param {object} borderDescriptor Object with `row` and `col`, `left`, `right`, `top` and `bottom` properties.\n     * @param {string} place Coordinate where add/remove border - `top`, `bottom`, `left`, `right`.\n     */\n\n  }, {\n    key: \"prepareBorderFromCustomAdded\",\n    value: function prepareBorderFromCustomAdded(row, column, borderDescriptor, place) {\n      var nrOfRows = this.hot.countRows();\n      var nrOfColumns = this.hot.countCols();\n\n      if (row >= nrOfRows || column >= nrOfColumns) {\n        return;\n      }\n\n      var border = createEmptyBorders(row, column);\n\n      if (borderDescriptor) {\n        border = extendDefaultBorder(border, borderDescriptor);\n        arrayEach(this.hot.selection.highlight.customSelections, function (customSelection) {\n          if (border.id === customSelection.settings.id) {\n            Object.assign(customSelection.settings, borderDescriptor);\n            border.id = customSelection.settings.id;\n            border.left = customSelection.settings.left;\n            border.right = customSelection.settings.right;\n            border.top = customSelection.settings.top;\n            border.bottom = customSelection.settings.bottom;\n            return false; // breaks forAll\n          }\n        });\n      }\n\n      this.hot.setCellMeta(row, column, 'borders', border);\n      this.insertBorderIntoSettings(border, place);\n    }\n    /**\n     * Prepare borders from setting (object).\n     *\n     * @private\n     * @param {object} rowDecriptor Object with `range`, `left`, `right`, `top` and `bottom` properties.\n     */\n\n  }, {\n    key: \"prepareBorderFromCustomAddedRange\",\n    value: function prepareBorderFromCustomAddedRange(rowDecriptor) {\n      var _this6 = this;\n\n      var range = rowDecriptor.range;\n      var lastRowIndex = Math.min(range.to.row, this.hot.countRows() - 1);\n      var lastColumnIndex = Math.min(range.to.col, this.hot.countCols() - 1);\n      rangeEach(range.from.row, lastRowIndex, function (rowIndex) {\n        rangeEach(range.from.col, lastColumnIndex, function (colIndex) {\n          var border = createEmptyBorders(rowIndex, colIndex);\n          var add = 0;\n\n          if (rowIndex === range.from.row) {\n            if (hasOwnProperty(rowDecriptor, 'top')) {\n              add += 1;\n              border.top = rowDecriptor.top;\n            }\n          } // Please keep in mind that `range.to.row` may be beyond the table boundaries. The border won't be rendered.\n\n\n          if (rowIndex === range.to.row) {\n            if (hasOwnProperty(rowDecriptor, 'bottom')) {\n              add += 1;\n              border.bottom = rowDecriptor.bottom;\n            }\n          }\n\n          if (colIndex === range.from.col) {\n            if (hasOwnProperty(rowDecriptor, 'left')) {\n              add += 1;\n              border.left = rowDecriptor.left;\n            }\n          } // Please keep in mind that `range.to.col` may be beyond the table boundaries. The border won't be rendered.\n\n\n          if (colIndex === range.to.col) {\n            if (hasOwnProperty(rowDecriptor, 'right')) {\n              add += 1;\n              border.right = rowDecriptor.right;\n            }\n          }\n\n          if (add > 0) {\n            _this6.hot.setCellMeta(rowIndex, colIndex, 'borders', border);\n\n            _this6.insertBorderIntoSettings(border);\n          } else {// TODO sometimes it enters here. Why?\n          }\n        });\n      });\n    }\n    /**\n     * Remove border (triggered from context menu).\n     *\n     * @private\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     */\n\n  }, {\n    key: \"removeAllBorders\",\n    value: function removeAllBorders(row, column) {\n      var borderId = createId(row, column);\n      this.spliceBorder(borderId);\n      this.clearBordersFromSelectionSettings(borderId);\n      this.clearNullCellRange();\n      this.hot.removeCellMeta(row, column, 'borders');\n    }\n    /**\n     * Set borders for each cell re. To border position.\n     *\n     * @private\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @param {string} place Coordinate where add/remove border - `top`, `bottom`, `left`, `right` and `noBorders`.\n     * @param {boolean} remove True when remove borders, and false when add borders.\n     */\n\n  }, {\n    key: \"setBorder\",\n    value: function setBorder(row, column, place, remove) {\n      var bordersMeta = this.hot.getCellMeta(row, column).borders;\n\n      if (!bordersMeta || bordersMeta.border === void 0) {\n        bordersMeta = createEmptyBorders(row, column);\n      }\n\n      if (remove) {\n        bordersMeta[place] = createSingleEmptyBorder();\n        var hideCount = this.countHide(bordersMeta);\n\n        if (hideCount === 4) {\n          this.removeAllBorders(row, column);\n        } else {\n          var customSelectionsChecker = this.checkCustomSelectionsFromContextMenu(bordersMeta, place, remove);\n\n          if (!customSelectionsChecker) {\n            this.insertBorderIntoSettings(bordersMeta);\n          }\n\n          this.hot.setCellMeta(row, column, 'borders', bordersMeta);\n        }\n      } else {\n        bordersMeta[place] = createDefaultCustomBorder();\n\n        var _customSelectionsChecker = this.checkCustomSelectionsFromContextMenu(bordersMeta, place, remove);\n\n        if (!_customSelectionsChecker) {\n          this.insertBorderIntoSettings(bordersMeta);\n        }\n\n        this.hot.setCellMeta(row, column, 'borders', bordersMeta);\n      }\n    }\n    /**\n     * Prepare borders based on cell and border position.\n     *\n     * @private\n     * @param {CellRange[]} selected An array of CellRange objects.\n     * @param {string} place Coordinate where add/remove border - `top`, `bottom`, `left`, `right` and `noBorders`.\n     * @param {boolean} remove True when remove borders, and false when add borders.\n     */\n\n  }, {\n    key: \"prepareBorder\",\n    value: function prepareBorder(selected, place, remove) {\n      var _this7 = this;\n\n      arrayEach(selected, function (_ref) {\n        var start = _ref.start,\n            end = _ref.end;\n\n        if (start.row === end.row && start.col === end.col) {\n          if (place === 'noBorders') {\n            _this7.removeAllBorders(start.row, start.col);\n          } else {\n            _this7.setBorder(start.row, start.col, place, remove);\n          }\n        } else {\n          switch (place) {\n            case 'noBorders':\n              rangeEach(start.col, end.col, function (colIndex) {\n                rangeEach(start.row, end.row, function (rowIndex) {\n                  _this7.removeAllBorders(rowIndex, colIndex);\n                });\n              });\n              break;\n\n            case 'top':\n              rangeEach(start.col, end.col, function (topCol) {\n                _this7.setBorder(start.row, topCol, place, remove);\n              });\n              break;\n\n            case 'right':\n              rangeEach(start.row, end.row, function (rowRight) {\n                _this7.setBorder(rowRight, end.col, place, remove);\n              });\n              break;\n\n            case 'bottom':\n              rangeEach(start.col, end.col, function (bottomCol) {\n                _this7.setBorder(end.row, bottomCol, place, remove);\n              });\n              break;\n\n            case 'left':\n              rangeEach(start.row, end.row, function (rowLeft) {\n                _this7.setBorder(rowLeft, start.col, place, remove);\n              });\n              break;\n\n            default:\n              break;\n          }\n        }\n      });\n    }\n    /**\n     * Create borders from settings.\n     *\n     * @private\n     * @param {Array} customBorders Object with `row` and `col`, `left`, `right`, `top` and `bottom` properties.\n     */\n\n  }, {\n    key: \"createCustomBorders\",\n    value: function createCustomBorders(customBorders) {\n      var _this8 = this;\n\n      arrayEach(customBorders, function (customBorder) {\n        if (customBorder.range) {\n          _this8.prepareBorderFromCustomAddedRange(customBorder);\n        } else {\n          _this8.prepareBorderFromCustomAdded(customBorder.row, customBorder.col, customBorder);\n        }\n      });\n    }\n    /**\n     * Count hide property in border object.\n     *\n     * @private\n     * @param {object} border Object with `row` and `col`, `left`, `right`, `top` and `bottom`, `id` and `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n     * @returns {number}\n     */\n\n  }, {\n    key: \"countHide\",\n    value: function countHide(border) {\n      var values = Object.values(border);\n      return arrayReduce(values, function (accumulator, value) {\n        var result = accumulator;\n\n        if (value.hide) {\n          result += 1;\n        }\n\n        return result;\n      }, 0);\n    }\n    /**\n     * Clear borders settings from custom selections.\n     *\n     * @private\n     * @param {string} borderId Border id name as string.\n     */\n\n  }, {\n    key: \"clearBordersFromSelectionSettings\",\n    value: function clearBordersFromSelectionSettings(borderId) {\n      var index = arrayMap(this.hot.selection.highlight.customSelections, function (customSelection) {\n        return customSelection.settings.id;\n      }).indexOf(borderId);\n\n      if (index > -1) {\n        this.hot.selection.highlight.customSelections[index].clear();\n      }\n    }\n    /**\n     * Clear cellRange with null value.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"clearNullCellRange\",\n    value: function clearNullCellRange() {\n      var _this9 = this;\n\n      arrayEach(this.hot.selection.highlight.customSelections, function (customSelection, index) {\n        if (customSelection.cellRange === null) {\n          _this9.hot.selection.highlight.customSelections[index].destroy();\n\n          _this9.hot.selection.highlight.customSelections.splice(index, 1);\n\n          return false; // breaks forAll\n        }\n      });\n    }\n    /**\n     * Hide custom borders.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"hideBorders\",\n    value: function hideBorders() {\n      var _this10 = this;\n\n      arrayEach(this.savedBorders, function (border) {\n        _this10.clearBordersFromSelectionSettings(border.id);\n\n        _this10.clearNullCellRange();\n      });\n    }\n    /**\n     * Splice border from savedBorders.\n     *\n     * @private\n     * @param {string} borderId Border id name as string.\n     */\n\n  }, {\n    key: \"spliceBorder\",\n    value: function spliceBorder(borderId) {\n      var index = arrayMap(this.savedBorders, function (border) {\n        return border.id;\n      }).indexOf(borderId);\n\n      if (index > -1) {\n        this.savedBorders.splice(index, 1);\n      }\n    }\n    /**\n     * Check if an border already exists in the savedBorders array, and if true update border in savedBorders.\n     *\n     * @private\n     * @param {object} border Object with `row` and `col`, `left`, `right`, `top` and `bottom`, `id` and `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n     *\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"checkSavedBorders\",\n    value: function checkSavedBorders(border) {\n      var _this11 = this;\n\n      var check = false;\n      var hideCount = this.countHide(border);\n\n      if (hideCount === 4) {\n        this.spliceBorder(border.id);\n        check = true;\n      } else {\n        arrayEach(this.savedBorders, function (savedBorder, index) {\n          if (border.id === savedBorder.id) {\n            _this11.savedBorders[index] = border;\n            check = true;\n            return false; // breaks forAll\n          }\n        });\n      }\n\n      return check;\n    }\n    /**\n     * Check if an border already exists in the customSelections, and if true call toggleHiddenClass method.\n     *\n     * @private\n     * @param {object} border Object with `row` and `col`, `left`, `right`, `top` and `bottom`, `id` and `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n     * @param {string} place Coordinate where add/remove border - `top`, `bottom`, `left`, `right` and `noBorders`.\n     * @param {boolean} remove True when remove borders, and false when add borders.\n     *\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"checkCustomSelectionsFromContextMenu\",\n    value: function checkCustomSelectionsFromContextMenu(border, place, remove) {\n      var check = false;\n      arrayEach(this.hot.selection.highlight.customSelections, function (customSelection) {\n        if (border.id === customSelection.settings.id) {\n          objectEach(customSelection.instanceBorders, function (borderObject) {\n            borderObject.toggleHiddenClass(place, remove); // TODO this also bad?\n          });\n          check = true;\n          return false; // breaks forAll\n        }\n      });\n      return check;\n    }\n    /**\n     * Check if an border already exists in the customSelections, and if true reset cellRange.\n     *\n     * @private\n     * @param {object} border Object with `row` and `col`, `left`, `right`, `top` and `bottom`, `id` and `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n     * @param {CellRange} cellRange The selection range to check.\n     * @param {string} place Coordinate where add/remove border - `top`, `bottom`, `left`, `right`.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"checkCustomSelections\",\n    value: function checkCustomSelections(border, cellRange, place) {\n      var hideCount = this.countHide(border);\n      var check = false;\n\n      if (hideCount === 4) {\n        this.removeAllBorders(border.row, border.col);\n        check = true;\n      } else {\n        arrayEach(this.hot.selection.highlight.customSelections, function (customSelection) {\n          if (border.id === customSelection.settings.id) {\n            customSelection.visualCellRange = cellRange;\n            customSelection.commit();\n\n            if (place) {\n              objectEach(customSelection.instanceBorders, function (borderObject) {\n                borderObject.changeBorderStyle(place, border);\n              });\n            }\n\n            check = true;\n            return false; // breaks forAll\n          }\n        });\n      }\n\n      return check;\n    }\n    /**\n     * Change borders from settings.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"changeBorderSettings\",\n    value: function changeBorderSettings() {\n      var customBorders = this.hot.getSettings()[PLUGIN_KEY];\n\n      if (Array.isArray(customBorders)) {\n        if (!customBorders.length) {\n          this.savedBorders = customBorders;\n        }\n\n        this.createCustomBorders(customBorders);\n      } else if (customBorders !== void 0) {\n        this.createCustomBorders(this.savedBorders);\n      }\n    }\n    /**\n     * Add border options to context menu.\n     *\n     * @private\n     * @param {object} defaultOptions Context menu items.\n     */\n\n  }, {\n    key: \"onAfterContextMenuDefaultOptions\",\n    value: function onAfterContextMenuDefaultOptions(defaultOptions) {\n      if (!this.hot.getSettings()[PLUGIN_KEY]) {\n        return;\n      }\n\n      defaultOptions.items.push({\n        name: '---------'\n      }, {\n        key: 'borders',\n        name: function name() {\n          return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_BORDERS);\n        },\n        disabled: function disabled() {\n          return this.selection.isSelectedByCorner();\n        },\n        submenu: {\n          items: [top(this), right(this), bottom(this), left(this), noBorders(this)]\n        }\n      });\n    }\n    /**\n     * `afterInit` hook callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onAfterInit\",\n    value: function onAfterInit() {\n      this.changeBorderSettings();\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _get(_getPrototypeOf(CustomBorders.prototype), \"destroy\", this).call(this);\n    }\n  }], [{\n    key: \"PLUGIN_KEY\",\n    get: function get() {\n      return PLUGIN_KEY;\n    }\n  }, {\n    key: \"PLUGIN_PRIORITY\",\n    get: function get() {\n      return PLUGIN_PRIORITY;\n    }\n  }]);\n\n  return CustomBorders;\n}(BasePlugin);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import staticRegister from \"../utils/staticRegister.mjs\";\nvar _staticRegister = staticRegister('validators'),\n  register = _staticRegister.register,\n  getItem = _staticRegister.getItem,\n  hasItem = _staticRegister.hasItem,\n  getNames = _staticRegister.getNames,\n  getValues = _staticRegister.getValues;\n/**\n * Retrieve validator function.\n *\n * @param {string} name Validator identification.\n * @returns {Function} Returns validator function.\n */\n\nfunction _getItem(name) {\n  if (typeof name === 'function') {\n    return name;\n  }\n  if (!hasItem(name)) {\n    throw Error(\"No registered validator found under \\\"\".concat(name, \"\\\" name\"));\n  }\n  return getItem(name);\n}\n/**\n * Register validator under its alias.\n *\n * @param {string|Function} name Validator's alias or validator function with its descriptor.\n * @param {Function} [validator] Validator function.\n */\n\nfunction _register(name, validator) {\n  if (typeof name !== 'string') {\n    validator = name;\n    name = validator.VALIDATOR_TYPE;\n  }\n  register(name, validator);\n}\nexport { _register as registerValidator, _getItem as getValidator, hasItem as hasValidator, getNames as getRegisteredValidatorNames, getValues as getRegisteredValidators };","map":{"version":3,"names":["staticRegister","_staticRegister","register","getItem","hasItem","getNames","getValues","_getItem","name","Error","concat","_register","validator","VALIDATOR_TYPE","registerValidator","getValidator","hasValidator","getRegisteredValidatorNames","getRegisteredValidators"],"sources":["/Users/priyadeliwala/Desktop/sales-dashboard/node_modules/handsontable/validators/registry.mjs"],"sourcesContent":["import staticRegister from \"../utils/staticRegister.mjs\";\n\nvar _staticRegister = staticRegister('validators'),\n    register = _staticRegister.register,\n    getItem = _staticRegister.getItem,\n    hasItem = _staticRegister.hasItem,\n    getNames = _staticRegister.getNames,\n    getValues = _staticRegister.getValues;\n/**\n * Retrieve validator function.\n *\n * @param {string} name Validator identification.\n * @returns {Function} Returns validator function.\n */\n\n\nfunction _getItem(name) {\n  if (typeof name === 'function') {\n    return name;\n  }\n\n  if (!hasItem(name)) {\n    throw Error(\"No registered validator found under \\\"\".concat(name, \"\\\" name\"));\n  }\n\n  return getItem(name);\n}\n/**\n * Register validator under its alias.\n *\n * @param {string|Function} name Validator's alias or validator function with its descriptor.\n * @param {Function} [validator] Validator function.\n */\n\n\nfunction _register(name, validator) {\n  if (typeof name !== 'string') {\n    validator = name;\n    name = validator.VALIDATOR_TYPE;\n  }\n\n  register(name, validator);\n}\n\nexport { _register as registerValidator, _getItem as getValidator, hasItem as hasValidator, getNames as getRegisteredValidatorNames, getValues as getRegisteredValidators };"],"mappings":"AAAA,OAAOA,cAAc,MAAM,6BAA6B;AAExD,IAAIC,eAAe,GAAGD,cAAc,CAAC,YAAY,CAAC;EAC9CE,QAAQ,GAAGD,eAAe,CAACC,QAAQ;EACnCC,OAAO,GAAGF,eAAe,CAACE,OAAO;EACjCC,OAAO,GAAGH,eAAe,CAACG,OAAO;EACjCC,QAAQ,GAAGJ,eAAe,CAACI,QAAQ;EACnCC,SAAS,GAAGL,eAAe,CAACK,SAAS;AACzC;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASC,QAAQA,CAACC,IAAI,EAAE;EACtB,IAAI,OAAOA,IAAI,KAAK,UAAU,EAAE;IAC9B,OAAOA,IAAI;EACb;EAEA,IAAI,CAACJ,OAAO,CAACI,IAAI,CAAC,EAAE;IAClB,MAAMC,KAAK,CAAC,wCAAwC,CAACC,MAAM,CAACF,IAAI,EAAE,SAAS,CAAC,CAAC;EAC/E;EAEA,OAAOL,OAAO,CAACK,IAAI,CAAC;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASG,SAASA,CAACH,IAAI,EAAEI,SAAS,EAAE;EAClC,IAAI,OAAOJ,IAAI,KAAK,QAAQ,EAAE;IAC5BI,SAAS,GAAGJ,IAAI;IAChBA,IAAI,GAAGI,SAAS,CAACC,cAAc;EACjC;EAEAX,QAAQ,CAACM,IAAI,EAAEI,SAAS,CAAC;AAC3B;AAEA,SAASD,SAAS,IAAIG,iBAAiB,EAAEP,QAAQ,IAAIQ,YAAY,EAAEX,OAAO,IAAIY,YAAY,EAAEX,QAAQ,IAAIY,2BAA2B,EAAEX,SAAS,IAAIY,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
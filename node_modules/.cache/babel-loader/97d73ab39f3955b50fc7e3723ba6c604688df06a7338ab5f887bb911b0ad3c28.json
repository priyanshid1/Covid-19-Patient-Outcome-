{"ast":null,"code":"export var command = {\n  name: 'extendCellsSelectionDown',\n  callback: function callback(hot) {\n    var _hot$getSelectedRange = hot.getSelectedRangeLast(),\n      highlight = _hot$getSelectedRange.highlight;\n    if (!hot.selection.isSelectedByColumnHeader() && !hot.selection.isSelectedByCorner() && (highlight.isCell() || highlight.isHeader() && hot.selection.isSelectedByRowHeader())) {\n      hot.selection.transformEnd(1, 0);\n    }\n  }\n};","map":{"version":3,"names":["command","name","callback","hot","_hot$getSelectedRange","getSelectedRangeLast","highlight","selection","isSelectedByColumnHeader","isSelectedByCorner","isCell","isHeader","isSelectedByRowHeader","transformEnd"],"sources":["/Users/priyadeliwala/node_modules/handsontable/shortcutContexts/commands/extendCellsSelection/down.mjs"],"sourcesContent":["export const command = {\n  name: 'extendCellsSelectionDown',\n  callback(hot) {\n    const {\n      highlight\n    } = hot.getSelectedRangeLast();\n    if (!hot.selection.isSelectedByColumnHeader() && !hot.selection.isSelectedByCorner() && (highlight.isCell() || highlight.isHeader() && hot.selection.isSelectedByRowHeader())) {\n      hot.selection.transformEnd(1, 0);\n    }\n  }\n};"],"mappings":"AAAA,OAAO,IAAMA,OAAO,GAAG;EACrBC,IAAI,EAAE,0BAA0B;EAChCC,QAAQ,WAARA,QAAQA,CAACC,GAAG,EAAE;IACZ,IAAAC,qBAAA,GAEID,GAAG,CAACE,oBAAoB,CAAC,CAAC;MAD5BC,SAAS,GAAAF,qBAAA,CAATE,SAAS;IAEX,IAAI,CAACH,GAAG,CAACI,SAAS,CAACC,wBAAwB,CAAC,CAAC,IAAI,CAACL,GAAG,CAACI,SAAS,CAACE,kBAAkB,CAAC,CAAC,KAAKH,SAAS,CAACI,MAAM,CAAC,CAAC,IAAIJ,SAAS,CAACK,QAAQ,CAAC,CAAC,IAAIR,GAAG,CAACI,SAAS,CAACK,qBAAqB,CAAC,CAAC,CAAC,EAAE;MAC7KT,GAAG,CAACI,SAAS,CAACM,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC;IAClC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nimport { CellRange } from \"./../3rdparty/walkontable/src/index.mjs\";\n/**\n * The SelectionRange class is a simple CellRanges collection designed for easy manipulation of the multiple\n * consecutive and non-consecutive selections.\n *\n * @class SelectionRange\n * @util\n */\n\nvar SelectionRange = /*#__PURE__*/function (_Symbol$iterator) {\n  function SelectionRange() {\n    _classCallCheck(this, SelectionRange);\n\n    /**\n     * List of all CellRanges added to the class instance.\n     *\n     * @type {CellRange[]}\n     */\n    this.ranges = [];\n  }\n  /**\n   * Check if selected range is empty.\n   *\n   * @returns {boolean}\n   */\n\n  _createClass(SelectionRange, [{\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return this.size() === 0;\n    }\n    /**\n     * Set coordinates to the class instance. It clears all previously added coordinates and push `coords`\n     * to the collection.\n     *\n     * @param {CellCoords} coords The CellCoords instance with defined visual coordinates.\n     * @returns {SelectionRange}\n     */\n  }, {\n    key: \"set\",\n    value: function set(coords) {\n      this.clear();\n      this.ranges.push(new CellRange(coords));\n      return this;\n    }\n    /**\n     * Add coordinates to the class instance. The new coordinates are added to the end of the range collection.\n     *\n     * @param {CellCoords} coords The CellCoords instance with defined visual coordinates.\n     * @returns {SelectionRange}\n     */\n  }, {\n    key: \"add\",\n    value: function add(coords) {\n      this.ranges.push(new CellRange(coords));\n      return this;\n    }\n    /**\n     * Removes from the stack the last added coordinates.\n     *\n     * @returns {SelectionRange}\n     */\n  }, {\n    key: \"pop\",\n    value: function pop() {\n      this.ranges.pop();\n      return this;\n    }\n    /**\n     * Get last added coordinates from ranges, it returns a CellRange instance.\n     *\n     * @returns {CellRange|undefined}\n     */\n  }, {\n    key: \"current\",\n    value: function current() {\n      return this.peekByIndex(0);\n    }\n    /**\n     * Get previously added coordinates from ranges, it returns a CellRange instance.\n     *\n     * @returns {CellRange|undefined}\n     */\n  }, {\n    key: \"previous\",\n    value: function previous() {\n      return this.peekByIndex(-1);\n    }\n    /**\n     * Returns `true` if coords is within selection coords. This method iterates through all selection layers to check if\n     * the coords object is within selection range.\n     *\n     * @param {CellCoords} coords The CellCoords instance with defined visual coordinates.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"includes\",\n    value: function includes(coords) {\n      return this.ranges.some(function (cellRange) {\n        return cellRange.includes(coords);\n      });\n    }\n    /**\n     * Clear collection.\n     *\n     * @returns {SelectionRange}\n     */\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.ranges.length = 0;\n      return this;\n    }\n    /**\n     * Get count of added all coordinates added to the selection.\n     *\n     * @returns {number}\n     */\n  }, {\n    key: \"size\",\n    value: function size() {\n      return this.ranges.length;\n    }\n    /**\n     * Peek the coordinates based on the offset where that coordinate resides in the collection.\n     *\n     * @param {number} [offset=0] An offset where the coordinate will be retrieved from.\n     * @returns {CellRange|undefined}\n     */\n  }, {\n    key: \"peekByIndex\",\n    value: function peekByIndex() {\n      var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var rangeIndex = this.size() + offset - 1;\n      var cellRange;\n      if (rangeIndex >= 0) {\n        cellRange = this.ranges[rangeIndex];\n      }\n      return cellRange;\n    }\n  }, {\n    key: _Symbol$iterator,\n    value: function value() {\n      return this.ranges[Symbol.iterator]();\n    }\n  }]);\n  return SelectionRange;\n}(Symbol.iterator);\nexport default SelectionRange;","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","CellRange","SelectionRange","_Symbol$iterator","ranges","value","isEmpty","size","set","coords","clear","push","add","pop","current","peekByIndex","previous","includes","some","cellRange","offset","arguments","undefined","rangeIndex","Symbol","iterator"],"sources":["/Users/priyadeliwala/Desktop/sales-dashboard/node_modules/handsontable/selection/range.mjs"],"sourcesContent":["import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nimport { CellRange } from \"./../3rdparty/walkontable/src/index.mjs\";\n/**\n * The SelectionRange class is a simple CellRanges collection designed for easy manipulation of the multiple\n * consecutive and non-consecutive selections.\n *\n * @class SelectionRange\n * @util\n */\n\nvar SelectionRange = /*#__PURE__*/function (_Symbol$iterator) {\n  function SelectionRange() {\n    _classCallCheck(this, SelectionRange);\n\n    /**\n     * List of all CellRanges added to the class instance.\n     *\n     * @type {CellRange[]}\n     */\n    this.ranges = [];\n  }\n  /**\n   * Check if selected range is empty.\n   *\n   * @returns {boolean}\n   */\n\n\n  _createClass(SelectionRange, [{\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return this.size() === 0;\n    }\n    /**\n     * Set coordinates to the class instance. It clears all previously added coordinates and push `coords`\n     * to the collection.\n     *\n     * @param {CellCoords} coords The CellCoords instance with defined visual coordinates.\n     * @returns {SelectionRange}\n     */\n\n  }, {\n    key: \"set\",\n    value: function set(coords) {\n      this.clear();\n      this.ranges.push(new CellRange(coords));\n      return this;\n    }\n    /**\n     * Add coordinates to the class instance. The new coordinates are added to the end of the range collection.\n     *\n     * @param {CellCoords} coords The CellCoords instance with defined visual coordinates.\n     * @returns {SelectionRange}\n     */\n\n  }, {\n    key: \"add\",\n    value: function add(coords) {\n      this.ranges.push(new CellRange(coords));\n      return this;\n    }\n    /**\n     * Removes from the stack the last added coordinates.\n     *\n     * @returns {SelectionRange}\n     */\n\n  }, {\n    key: \"pop\",\n    value: function pop() {\n      this.ranges.pop();\n      return this;\n    }\n    /**\n     * Get last added coordinates from ranges, it returns a CellRange instance.\n     *\n     * @returns {CellRange|undefined}\n     */\n\n  }, {\n    key: \"current\",\n    value: function current() {\n      return this.peekByIndex(0);\n    }\n    /**\n     * Get previously added coordinates from ranges, it returns a CellRange instance.\n     *\n     * @returns {CellRange|undefined}\n     */\n\n  }, {\n    key: \"previous\",\n    value: function previous() {\n      return this.peekByIndex(-1);\n    }\n    /**\n     * Returns `true` if coords is within selection coords. This method iterates through all selection layers to check if\n     * the coords object is within selection range.\n     *\n     * @param {CellCoords} coords The CellCoords instance with defined visual coordinates.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"includes\",\n    value: function includes(coords) {\n      return this.ranges.some(function (cellRange) {\n        return cellRange.includes(coords);\n      });\n    }\n    /**\n     * Clear collection.\n     *\n     * @returns {SelectionRange}\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.ranges.length = 0;\n      return this;\n    }\n    /**\n     * Get count of added all coordinates added to the selection.\n     *\n     * @returns {number}\n     */\n\n  }, {\n    key: \"size\",\n    value: function size() {\n      return this.ranges.length;\n    }\n    /**\n     * Peek the coordinates based on the offset where that coordinate resides in the collection.\n     *\n     * @param {number} [offset=0] An offset where the coordinate will be retrieved from.\n     * @returns {CellRange|undefined}\n     */\n\n  }, {\n    key: \"peekByIndex\",\n    value: function peekByIndex() {\n      var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var rangeIndex = this.size() + offset - 1;\n      var cellRange;\n\n      if (rangeIndex >= 0) {\n        cellRange = this.ranges[rangeIndex];\n      }\n\n      return cellRange;\n    }\n  }, {\n    key: _Symbol$iterator,\n    value: function value() {\n      return this.ranges[Symbol.iterator]();\n    }\n  }]);\n\n  return SelectionRange;\n}(Symbol.iterator);\n\nexport default SelectionRange;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
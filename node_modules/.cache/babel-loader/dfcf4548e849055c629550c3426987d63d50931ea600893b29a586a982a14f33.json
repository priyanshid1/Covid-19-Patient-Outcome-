{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nimport { arrayEach } from \"../../../helpers/array.mjs\";\nimport { mixin } from \"../../../helpers/object.mjs\";\nimport localHooks from \"../../../mixins/localHooks.mjs\";\nimport { LinkedPhysicalIndexToValueMap as IndexToValueMap } from \"../../../translations/index.mjs\";\n/**\n * @private\n * @class BaseComponent\n */\n\nvar BaseComponent = /*#__PURE__*/function () {\n  function BaseComponent(hotInstance, _ref) {\n    var id = _ref.id,\n      _ref$stateless = _ref.stateless,\n      stateless = _ref$stateless === void 0 ? true : _ref$stateless;\n    _classCallCheck(this, BaseComponent);\n\n    /**\n     * The Handsontable instance.\n     *\n     * @type {Core}\n     */\n    this.hot = hotInstance;\n    /**\n     * The component uniq id.\n     *\n     * @type {string}\n     */\n\n    this.id = id;\n    /**\n     * List of registered component UI elements.\n     *\n     * @type {Array}\n     */\n\n    this.elements = [];\n    /**\n     * Flag which determines if element is hidden.\n     *\n     * @type {boolean}\n     */\n\n    this.hidden = false;\n    /**\n     * The component states id.\n     *\n     * @type {string}\n     */\n\n    this.stateId = \"Filters.component.\".concat(this.id);\n    /**\n     * Index map which stores component states for each column.\n     *\n     * @type {LinkedPhysicalIndexToValueMap|null}\n     */\n\n    this.state = stateless ? null : this.hot.columnIndexMapper.registerMap(this.stateId, new IndexToValueMap());\n  }\n  /**\n   * Reset elements to its initial state.\n   */\n\n  _createClass(BaseComponent, [{\n    key: \"reset\",\n    value: function reset() {\n      arrayEach(this.elements, function (ui) {\n        return ui.reset();\n      });\n    }\n    /**\n     * Hide component.\n     */\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this.hidden = true;\n    }\n    /**\n     * Show component.\n     */\n  }, {\n    key: \"show\",\n    value: function show() {\n      this.hidden = false;\n    }\n    /**\n     * Check if component is hidden.\n     *\n     * @returns {boolean}\n     */\n  }, {\n    key: \"isHidden\",\n    value: function isHidden() {\n      return this.hot === null || this.hidden;\n    }\n    /**\n     * Restores the component state from the given physical column index. The method\n     * internally calls the `setState` method. The state then is individually processed\n     * by each component.\n     *\n     * @param {number} physicalColumn The physical column index.\n     */\n  }, {\n    key: \"restoreState\",\n    value: function restoreState(physicalColumn) {\n      if (this.state) {\n        this.setState(this.state.getValueAtIndex(physicalColumn));\n      }\n    }\n    /**\n     * The custom logic for component state restoring.\n     */\n  }, {\n    key: \"setState\",\n    value: function setState() {\n      throw new Error('The state setting logic is not implemented');\n    }\n    /**\n     * Saves the component state to the given physical column index. The method\n     * internally calls the `getState` method, which returns the current state of\n     * the component.\n     *\n     * @param {number} physicalColumn The physical column index.\n     */\n  }, {\n    key: \"saveState\",\n    value: function saveState(physicalColumn) {\n      if (this.state) {\n        this.state.setValueAtIndex(physicalColumn, this.getState());\n      }\n    }\n    /**\n     * The custom logic for component state gathering (for stateful components).\n     */\n  }, {\n    key: \"getState\",\n    value: function getState() {\n      throw new Error('The state gathering logic is not implemented');\n    }\n    /**\n     * Destroy element.\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.hot.columnIndexMapper.unregisterMap(this.stateId);\n      this.clearLocalHooks();\n      arrayEach(this.elements, function (ui) {\n        return ui.destroy();\n      });\n      this.state = null;\n      this.elements = null;\n      this.hot = null;\n    }\n  }]);\n  return BaseComponent;\n}();\nmixin(BaseComponent, localHooks);\nexport default BaseComponent;","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","arrayEach","mixin","localHooks","LinkedPhysicalIndexToValueMap","IndexToValueMap","BaseComponent","hotInstance","_ref","id","_ref$stateless","stateless","hot","elements","hidden","stateId","concat","state","columnIndexMapper","registerMap","value","reset","ui","hide","show","isHidden","restoreState","physicalColumn","setState","getValueAtIndex","Error","saveState","setValueAtIndex","getState","destroy","unregisterMap","clearLocalHooks"],"sources":["/Users/priyadeliwala/Desktop/sales-dashboard/node_modules/handsontable/plugins/filters/component/_base.mjs"],"sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nimport { arrayEach } from \"../../../helpers/array.mjs\";\nimport { mixin } from \"../../../helpers/object.mjs\";\nimport localHooks from \"../../../mixins/localHooks.mjs\";\nimport { LinkedPhysicalIndexToValueMap as IndexToValueMap } from \"../../../translations/index.mjs\";\n/**\n * @private\n * @class BaseComponent\n */\n\nvar BaseComponent = /*#__PURE__*/function () {\n  function BaseComponent(hotInstance, _ref) {\n    var id = _ref.id,\n        _ref$stateless = _ref.stateless,\n        stateless = _ref$stateless === void 0 ? true : _ref$stateless;\n\n    _classCallCheck(this, BaseComponent);\n\n    /**\n     * The Handsontable instance.\n     *\n     * @type {Core}\n     */\n    this.hot = hotInstance;\n    /**\n     * The component uniq id.\n     *\n     * @type {string}\n     */\n\n    this.id = id;\n    /**\n     * List of registered component UI elements.\n     *\n     * @type {Array}\n     */\n\n    this.elements = [];\n    /**\n     * Flag which determines if element is hidden.\n     *\n     * @type {boolean}\n     */\n\n    this.hidden = false;\n    /**\n     * The component states id.\n     *\n     * @type {string}\n     */\n\n    this.stateId = \"Filters.component.\".concat(this.id);\n    /**\n     * Index map which stores component states for each column.\n     *\n     * @type {LinkedPhysicalIndexToValueMap|null}\n     */\n\n    this.state = stateless ? null : this.hot.columnIndexMapper.registerMap(this.stateId, new IndexToValueMap());\n  }\n  /**\n   * Reset elements to its initial state.\n   */\n\n\n  _createClass(BaseComponent, [{\n    key: \"reset\",\n    value: function reset() {\n      arrayEach(this.elements, function (ui) {\n        return ui.reset();\n      });\n    }\n    /**\n     * Hide component.\n     */\n\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this.hidden = true;\n    }\n    /**\n     * Show component.\n     */\n\n  }, {\n    key: \"show\",\n    value: function show() {\n      this.hidden = false;\n    }\n    /**\n     * Check if component is hidden.\n     *\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isHidden\",\n    value: function isHidden() {\n      return this.hot === null || this.hidden;\n    }\n    /**\n     * Restores the component state from the given physical column index. The method\n     * internally calls the `setState` method. The state then is individually processed\n     * by each component.\n     *\n     * @param {number} physicalColumn The physical column index.\n     */\n\n  }, {\n    key: \"restoreState\",\n    value: function restoreState(physicalColumn) {\n      if (this.state) {\n        this.setState(this.state.getValueAtIndex(physicalColumn));\n      }\n    }\n    /**\n     * The custom logic for component state restoring.\n     */\n\n  }, {\n    key: \"setState\",\n    value: function setState() {\n      throw new Error('The state setting logic is not implemented');\n    }\n    /**\n     * Saves the component state to the given physical column index. The method\n     * internally calls the `getState` method, which returns the current state of\n     * the component.\n     *\n     * @param {number} physicalColumn The physical column index.\n     */\n\n  }, {\n    key: \"saveState\",\n    value: function saveState(physicalColumn) {\n      if (this.state) {\n        this.state.setValueAtIndex(physicalColumn, this.getState());\n      }\n    }\n    /**\n     * The custom logic for component state gathering (for stateful components).\n     */\n\n  }, {\n    key: \"getState\",\n    value: function getState() {\n      throw new Error('The state gathering logic is not implemented');\n    }\n    /**\n     * Destroy element.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.hot.columnIndexMapper.unregisterMap(this.stateId);\n      this.clearLocalHooks();\n      arrayEach(this.elements, function (ui) {\n        return ui.destroy();\n      });\n      this.state = null;\n      this.elements = null;\n      this.hot = null;\n    }\n  }]);\n\n  return BaseComponent;\n}();\n\nmixin(BaseComponent, localHooks);\nexport default BaseComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _classCallCheck from \"/Users/priyadeliwala/Desktop/sales-dashboard/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/priyadeliwala/Desktop/sales-dashboard/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport { arrayEach } from \"../../../helpers/array.mjs\";\nimport { mixin } from \"../../../helpers/object.mjs\";\nimport localHooks from \"../../../mixins/localHooks.mjs\";\nimport { LinkedPhysicalIndexToValueMap as IndexToValueMap } from \"../../../translations/index.mjs\";\n/**\n * @private\n * @class BaseComponent\n */\nexport var BaseComponent = /*#__PURE__*/function () {\n  function BaseComponent(hotInstance, _ref) {\n    _classCallCheck(this, BaseComponent);\n    var id = _ref.id,\n      _ref$stateless = _ref.stateless,\n      stateless = _ref$stateless === void 0 ? true : _ref$stateless;\n    /**\n     * The Handsontable instance.\n     *\n     * @type {Core}\n     */\n    _defineProperty(this, \"hot\", void 0);\n    /**\n     * The component uniq id.\n     *\n     * @type {string}\n     */\n    _defineProperty(this, \"id\", void 0);\n    /**\n     * List of registered component UI elements.\n     *\n     * @type {Array}\n     */\n    _defineProperty(this, \"elements\", []);\n    /**\n     * Flag which determines if element is hidden.\n     *\n     * @type {boolean}\n     */\n    _defineProperty(this, \"hidden\", false);\n    /**\n     * The component states id.\n     *\n     * @type {string}\n     */\n    _defineProperty(this, \"stateId\", '');\n    /**\n     * Index map which stores component states for each column.\n     *\n     * @type {LinkedPhysicalIndexToValueMap|null}\n     */\n    _defineProperty(this, \"state\", void 0);\n    this.hot = hotInstance;\n    this.id = id;\n    this.stateId = \"Filters.component.\".concat(this.id);\n    this.state = stateless ? null : this.hot.columnIndexMapper.registerMap(this.stateId, new IndexToValueMap());\n  }\n\n  /**\n   * Gets the list of elements from which the component is built.\n   *\n   * @returns {BaseUI[]}\n   */\n  return _createClass(BaseComponent, [{\n    key: \"getElements\",\n    value: function getElements() {\n      return this.elements;\n    }\n\n    /**\n     * Reset elements to its initial state.\n     */\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      arrayEach(this.elements, function (ui) {\n        return ui.reset();\n      });\n    }\n\n    /**\n     * Hide component.\n     */\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this.hidden = true;\n    }\n\n    /**\n     * Show component.\n     */\n  }, {\n    key: \"show\",\n    value: function show() {\n      this.hidden = false;\n    }\n\n    /**\n     * Check if component is hidden.\n     *\n     * @returns {boolean}\n     */\n  }, {\n    key: \"isHidden\",\n    value: function isHidden() {\n      return this.hot === null || this.hidden;\n    }\n\n    /**\n     * Restores the component state from the given physical column index. The method\n     * internally calls the `setState` method. The state then is individually processed\n     * by each component.\n     *\n     * @param {number} physicalColumn The physical column index.\n     */\n  }, {\n    key: \"restoreState\",\n    value: function restoreState(physicalColumn) {\n      if (this.state) {\n        this.setState(this.state.getValueAtIndex(physicalColumn));\n      }\n    }\n\n    /**\n     * The custom logic for component state restoring.\n     */\n  }, {\n    key: \"setState\",\n    value: function setState() {\n      throw new Error('The state setting logic is not implemented');\n    }\n\n    /**\n     * Saves the component state to the given physical column index. The method\n     * internally calls the `getState` method, which returns the current state of\n     * the component.\n     *\n     * @param {number} physicalColumn The physical column index.\n     */\n  }, {\n    key: \"saveState\",\n    value: function saveState(physicalColumn) {\n      if (this.state) {\n        this.state.setValueAtIndex(physicalColumn, this.getState());\n      }\n    }\n\n    /**\n     * The custom logic for component state gathering (for stateful components).\n     */\n  }, {\n    key: \"getState\",\n    value: function getState() {\n      throw new Error('The state gathering logic is not implemented');\n    }\n\n    /**\n     * Destroy element.\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.hot.columnIndexMapper.unregisterMap(this.stateId);\n      this.clearLocalHooks();\n      arrayEach(this.elements, function (ui) {\n        return ui.destroy();\n      });\n      this.state = null;\n      this.elements = null;\n      this.hot = null;\n    }\n  }]);\n}();\nmixin(BaseComponent, localHooks);","map":{"version":3,"names":["_defineProperty","e","r","t","_toPropertyKey","Object","defineProperty","value","enumerable","configurable","writable","i","_toPrimitive","Symbol","toPrimitive","call","TypeError","String","Number","arrayEach","mixin","localHooks","LinkedPhysicalIndexToValueMap","IndexToValueMap","BaseComponent","hotInstance","_ref","_classCallCheck","id","_ref$stateless","stateless","hot","stateId","concat","state","columnIndexMapper","registerMap","_createClass","key","getElements","elements","reset","ui","hide","hidden","show","isHidden","restoreState","physicalColumn","setState","getValueAtIndex","Error","saveState","setValueAtIndex","getState","destroy","unregisterMap","clearLocalHooks"],"sources":["/Users/priyadeliwala/node_modules/handsontable/plugins/filters/component/_base.mjs"],"sourcesContent":["import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport { arrayEach } from \"../../../helpers/array.mjs\";\nimport { mixin } from \"../../../helpers/object.mjs\";\nimport localHooks from \"../../../mixins/localHooks.mjs\";\nimport { LinkedPhysicalIndexToValueMap as IndexToValueMap } from \"../../../translations/index.mjs\";\n/**\n * @private\n * @class BaseComponent\n */\nexport class BaseComponent {\n  constructor(hotInstance, _ref) {\n    let {\n      id,\n      stateless = true\n    } = _ref;\n    /**\n     * The Handsontable instance.\n     *\n     * @type {Core}\n     */\n    _defineProperty(this, \"hot\", void 0);\n    /**\n     * The component uniq id.\n     *\n     * @type {string}\n     */\n    _defineProperty(this, \"id\", void 0);\n    /**\n     * List of registered component UI elements.\n     *\n     * @type {Array}\n     */\n    _defineProperty(this, \"elements\", []);\n    /**\n     * Flag which determines if element is hidden.\n     *\n     * @type {boolean}\n     */\n    _defineProperty(this, \"hidden\", false);\n    /**\n     * The component states id.\n     *\n     * @type {string}\n     */\n    _defineProperty(this, \"stateId\", '');\n    /**\n     * Index map which stores component states for each column.\n     *\n     * @type {LinkedPhysicalIndexToValueMap|null}\n     */\n    _defineProperty(this, \"state\", void 0);\n    this.hot = hotInstance;\n    this.id = id;\n    this.stateId = `Filters.component.${this.id}`;\n    this.state = stateless ? null : this.hot.columnIndexMapper.registerMap(this.stateId, new IndexToValueMap());\n  }\n\n  /**\n   * Gets the list of elements from which the component is built.\n   *\n   * @returns {BaseUI[]}\n   */\n  getElements() {\n    return this.elements;\n  }\n\n  /**\n   * Reset elements to its initial state.\n   */\n  reset() {\n    arrayEach(this.elements, ui => ui.reset());\n  }\n\n  /**\n   * Hide component.\n   */\n  hide() {\n    this.hidden = true;\n  }\n\n  /**\n   * Show component.\n   */\n  show() {\n    this.hidden = false;\n  }\n\n  /**\n   * Check if component is hidden.\n   *\n   * @returns {boolean}\n   */\n  isHidden() {\n    return this.hot === null || this.hidden;\n  }\n\n  /**\n   * Restores the component state from the given physical column index. The method\n   * internally calls the `setState` method. The state then is individually processed\n   * by each component.\n   *\n   * @param {number} physicalColumn The physical column index.\n   */\n  restoreState(physicalColumn) {\n    if (this.state) {\n      this.setState(this.state.getValueAtIndex(physicalColumn));\n    }\n  }\n\n  /**\n   * The custom logic for component state restoring.\n   */\n  setState() {\n    throw new Error('The state setting logic is not implemented');\n  }\n\n  /**\n   * Saves the component state to the given physical column index. The method\n   * internally calls the `getState` method, which returns the current state of\n   * the component.\n   *\n   * @param {number} physicalColumn The physical column index.\n   */\n  saveState(physicalColumn) {\n    if (this.state) {\n      this.state.setValueAtIndex(physicalColumn, this.getState());\n    }\n  }\n\n  /**\n   * The custom logic for component state gathering (for stateful components).\n   */\n  getState() {\n    throw new Error('The state gathering logic is not implemented');\n  }\n\n  /**\n   * Destroy element.\n   */\n  destroy() {\n    this.hot.columnIndexMapper.unregisterMap(this.stateId);\n    this.clearLocalHooks();\n    arrayEach(this.elements, ui => ui.destroy());\n    this.state = null;\n    this.elements = null;\n    this.hot = null;\n  }\n}\nmixin(BaseComponent, localHooks);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nimport { extend } from \"../../../helpers/object.mjs\";\nimport { expandMetaType } from \"../utils.mjs\";\nimport metaSchemaFactory from \"../metaSchema.mjs\";\n/**\n * @returns {TableMeta} Returns an empty object. The holder for global meta object.\n */\n\nfunction createTableMetaEmptyClass() {\n  return /*#__PURE__*/_createClass(function TableMeta() {\n    _classCallCheck(this, TableMeta);\n  });\n}\n/**\n * The global meta object is a root of all default settings, which are recognizable by Handsontable.\n * Other layers are inherited from this object. Adding, removing, or changing property in that\n * object has a direct reflection to all layers such as: TableMeta, ColumnMeta, or CellMeta layers.\n *\n * +-------------+.\n * │ GlobalMeta  │\n * │ (prototype) │\n * +-------------+\\\n *       │         \\\n *       │          \\\n *      \\│/         _\\|\n * +-------------+    +-------------+.\n * │ TableMeta   │    │ ColumnMeta  │\n * │ (instance)  │    │ (prototype) │\n * +-------------+    +-------------+.\n *                         │\n *                         │\n *                        \\│/\n *                    +-------------+.\n *                    │  CellMeta   │\n *                    │ (instance)  │\n *                    +-------------+.\n */\n\nvar GlobalMeta = /*#__PURE__*/function () {\n  function GlobalMeta(hot) {\n    _classCallCheck(this, GlobalMeta);\n\n    /**\n     * An alias for the constructor. Necessary for inheritance for creating new layers.\n     *\n     * @type {TableMeta}\n     */\n    this.metaCtor = createTableMetaEmptyClass();\n    /**\n     * Main object (prototype of the internal TableMeta class), holder for all default settings.\n     *\n     * @type {object}\n     */\n\n    this.meta = this.metaCtor.prototype;\n    extend(this.meta, metaSchemaFactory());\n    this.meta.instance = hot;\n  }\n  /**\n   * Gets constructor of the global meta object. Necessary for inheritance for creating the next meta layers.\n   *\n   * @returns {Function}\n   */\n\n  _createClass(GlobalMeta, [{\n    key: \"getMetaConstructor\",\n    value: function getMetaConstructor() {\n      return this.metaCtor;\n    }\n    /**\n     * Gets settings object for this layer.\n     *\n     * @returns {object}\n     */\n  }, {\n    key: \"getMeta\",\n    value: function getMeta() {\n      return this.meta;\n    }\n    /**\n     * Updates global settings object by merging settings with the current state.\n     *\n     * @param {object} settings An object to merge with.\n     */\n  }, {\n    key: \"updateMeta\",\n    value: function updateMeta(settings) {\n      extend(this.meta, settings);\n      extend(this.meta, expandMetaType(settings.type, settings));\n    }\n  }]);\n  return GlobalMeta;\n}();\nexport { GlobalMeta as default };","map":{"version":3,"names":["_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","extend","expandMetaType","metaSchemaFactory","createTableMetaEmptyClass","TableMeta","GlobalMeta","hot","metaCtor","meta","value","getMetaConstructor","getMeta","updateMeta","settings","type","default"],"sources":["/Users/priyadeliwala/Desktop/sales-dashboard/node_modules/handsontable/dataMap/metaManager/metaLayers/globalMeta.mjs"],"sourcesContent":["function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport { extend } from \"../../../helpers/object.mjs\";\nimport { expandMetaType } from \"../utils.mjs\";\nimport metaSchemaFactory from \"../metaSchema.mjs\";\n/**\n * @returns {TableMeta} Returns an empty object. The holder for global meta object.\n */\n\nfunction createTableMetaEmptyClass() {\n  return /*#__PURE__*/_createClass(function TableMeta() {\n    _classCallCheck(this, TableMeta);\n  });\n}\n/**\n * The global meta object is a root of all default settings, which are recognizable by Handsontable.\n * Other layers are inherited from this object. Adding, removing, or changing property in that\n * object has a direct reflection to all layers such as: TableMeta, ColumnMeta, or CellMeta layers.\n *\n * +-------------+.\n * │ GlobalMeta  │\n * │ (prototype) │\n * +-------------+\\\n *       │         \\\n *       │          \\\n *      \\│/         _\\|\n * +-------------+    +-------------+.\n * │ TableMeta   │    │ ColumnMeta  │\n * │ (instance)  │    │ (prototype) │\n * +-------------+    +-------------+.\n *                         │\n *                         │\n *                        \\│/\n *                    +-------------+.\n *                    │  CellMeta   │\n *                    │ (instance)  │\n *                    +-------------+.\n */\n\n\nvar GlobalMeta = /*#__PURE__*/function () {\n  function GlobalMeta(hot) {\n    _classCallCheck(this, GlobalMeta);\n\n    /**\n     * An alias for the constructor. Necessary for inheritance for creating new layers.\n     *\n     * @type {TableMeta}\n     */\n    this.metaCtor = createTableMetaEmptyClass();\n    /**\n     * Main object (prototype of the internal TableMeta class), holder for all default settings.\n     *\n     * @type {object}\n     */\n\n    this.meta = this.metaCtor.prototype;\n    extend(this.meta, metaSchemaFactory());\n    this.meta.instance = hot;\n  }\n  /**\n   * Gets constructor of the global meta object. Necessary for inheritance for creating the next meta layers.\n   *\n   * @returns {Function}\n   */\n\n\n  _createClass(GlobalMeta, [{\n    key: \"getMetaConstructor\",\n    value: function getMetaConstructor() {\n      return this.metaCtor;\n    }\n    /**\n     * Gets settings object for this layer.\n     *\n     * @returns {object}\n     */\n\n  }, {\n    key: \"getMeta\",\n    value: function getMeta() {\n      return this.meta;\n    }\n    /**\n     * Updates global settings object by merging settings with the current state.\n     *\n     * @param {object} settings An object to merge with.\n     */\n\n  }, {\n    key: \"updateMeta\",\n    value: function updateMeta(settings) {\n      extend(this.meta, settings);\n      extend(this.meta, expandMetaType(settings.type, settings));\n    }\n  }]);\n\n  return GlobalMeta;\n}();\n\nexport { GlobalMeta as default };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
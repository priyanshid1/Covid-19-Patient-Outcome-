{"ast":null,"code":"import { getValidSelection } from \"../utils.mjs\";\nimport * as C from \"../../../i18n/constants.mjs\";\nimport { isDefined } from \"../../../helpers/mixed.mjs\";\nexport var KEY = 'col_right';\n/**\n * @returns {object}\n */\n\nexport default function columnRightItem() {\n  return {\n    key: KEY,\n    name: function name() {\n      return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_INSERT_RIGHT);\n    },\n    callback: function callback(key, normalizedSelection) {\n      var isSelectedByCorner = this.selection.isSelectedByCorner();\n      var columnRight = 0;\n      if (isSelectedByCorner) {\n        columnRight = this.countCols();\n      } else {\n        var _latestSelection$end;\n        var latestSelection = normalizedSelection[Math.max(normalizedSelection.length - 1, 0)];\n        var selectedColumn = latestSelection === null || latestSelection === void 0 ? void 0 : (_latestSelection$end = latestSelection.end) === null || _latestSelection$end === void 0 ? void 0 : _latestSelection$end.col; // If there is no selection we have clicked on the corner and there is no data.\n\n        columnRight = isDefined(selectedColumn) ? selectedColumn + 1 : 0;\n      }\n      this.alter('insert_col', columnRight, 1, 'ContextMenu.columnRight');\n      if (isSelectedByCorner) {\n        this.selectAll();\n      }\n    },\n    disabled: function disabled() {\n      if (!this.isColumnModificationAllowed()) {\n        return true;\n      }\n      var selected = getValidSelection(this);\n      if (!selected) {\n        return true;\n      }\n      if (this.selection.isSelectedByCorner()) {\n        // Enable \"Insert column right\" always when the menu is triggered by corner click.\n        return false;\n      }\n      return this.selection.isSelectedByRowHeader() || this.countCols() >= this.getSettings().maxCols;\n    },\n    hidden: function hidden() {\n      return !this.getSettings().allowInsertColumn;\n    }\n  };\n}","map":{"version":3,"names":["getValidSelection","C","isDefined","KEY","columnRightItem","key","name","getTranslatedPhrase","CONTEXTMENU_ITEMS_INSERT_RIGHT","callback","normalizedSelection","isSelectedByCorner","selection","columnRight","countCols","_latestSelection$end","latestSelection","Math","max","length","selectedColumn","end","col","alter","selectAll","disabled","isColumnModificationAllowed","selected","isSelectedByRowHeader","getSettings","maxCols","hidden","allowInsertColumn"],"sources":["/Users/priyadeliwala/Desktop/sales-dashboard/node_modules/handsontable/plugins/contextMenu/predefinedItems/columnRight.mjs"],"sourcesContent":["import { getValidSelection } from \"../utils.mjs\";\nimport * as C from \"../../../i18n/constants.mjs\";\nimport { isDefined } from \"../../../helpers/mixed.mjs\";\nexport var KEY = 'col_right';\n/**\n * @returns {object}\n */\n\nexport default function columnRightItem() {\n  return {\n    key: KEY,\n    name: function name() {\n      return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_INSERT_RIGHT);\n    },\n    callback: function callback(key, normalizedSelection) {\n      var isSelectedByCorner = this.selection.isSelectedByCorner();\n      var columnRight = 0;\n\n      if (isSelectedByCorner) {\n        columnRight = this.countCols();\n      } else {\n        var _latestSelection$end;\n\n        var latestSelection = normalizedSelection[Math.max(normalizedSelection.length - 1, 0)];\n        var selectedColumn = latestSelection === null || latestSelection === void 0 ? void 0 : (_latestSelection$end = latestSelection.end) === null || _latestSelection$end === void 0 ? void 0 : _latestSelection$end.col; // If there is no selection we have clicked on the corner and there is no data.\n\n        columnRight = isDefined(selectedColumn) ? selectedColumn + 1 : 0;\n      }\n\n      this.alter('insert_col', columnRight, 1, 'ContextMenu.columnRight');\n\n      if (isSelectedByCorner) {\n        this.selectAll();\n      }\n    },\n    disabled: function disabled() {\n      if (!this.isColumnModificationAllowed()) {\n        return true;\n      }\n\n      var selected = getValidSelection(this);\n\n      if (!selected) {\n        return true;\n      }\n\n      if (this.selection.isSelectedByCorner()) {\n        // Enable \"Insert column right\" always when the menu is triggered by corner click.\n        return false;\n      }\n\n      return this.selection.isSelectedByRowHeader() || this.countCols() >= this.getSettings().maxCols;\n    },\n    hidden: function hidden() {\n      return !this.getSettings().allowInsertColumn;\n    }\n  };\n}"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,cAAc;AAChD,OAAO,KAAKC,CAAC,MAAM,6BAA6B;AAChD,SAASC,SAAS,QAAQ,4BAA4B;AACtD,OAAO,IAAIC,GAAG,GAAG,WAAW;AAC5B;AACA;AACA;;AAEA,eAAe,SAASC,eAAeA,CAAA,EAAG;EACxC,OAAO;IACLC,GAAG,EAAEF,GAAG;IACRG,IAAI,EAAE,SAASA,IAAIA,CAAA,EAAG;MACpB,OAAO,IAAI,CAACC,mBAAmB,CAACN,CAAC,CAACO,8BAA8B,CAAC;IACnE,CAAC;IACDC,QAAQ,EAAE,SAASA,QAAQA,CAACJ,GAAG,EAAEK,mBAAmB,EAAE;MACpD,IAAIC,kBAAkB,GAAG,IAAI,CAACC,SAAS,CAACD,kBAAkB,CAAC,CAAC;MAC5D,IAAIE,WAAW,GAAG,CAAC;MAEnB,IAAIF,kBAAkB,EAAE;QACtBE,WAAW,GAAG,IAAI,CAACC,SAAS,CAAC,CAAC;MAChC,CAAC,MAAM;QACL,IAAIC,oBAAoB;QAExB,IAAIC,eAAe,GAAGN,mBAAmB,CAACO,IAAI,CAACC,GAAG,CAACR,mBAAmB,CAACS,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;QACtF,IAAIC,cAAc,GAAGJ,eAAe,KAAK,IAAI,IAAIA,eAAe,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,CAACD,oBAAoB,GAAGC,eAAe,CAACK,GAAG,MAAM,IAAI,IAAIN,oBAAoB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,oBAAoB,CAACO,GAAG,CAAC,CAAC;;QAErNT,WAAW,GAAGX,SAAS,CAACkB,cAAc,CAAC,GAAGA,cAAc,GAAG,CAAC,GAAG,CAAC;MAClE;MAEA,IAAI,CAACG,KAAK,CAAC,YAAY,EAAEV,WAAW,EAAE,CAAC,EAAE,yBAAyB,CAAC;MAEnE,IAAIF,kBAAkB,EAAE;QACtB,IAAI,CAACa,SAAS,CAAC,CAAC;MAClB;IACF,CAAC;IACDC,QAAQ,EAAE,SAASA,QAAQA,CAAA,EAAG;MAC5B,IAAI,CAAC,IAAI,CAACC,2BAA2B,CAAC,CAAC,EAAE;QACvC,OAAO,IAAI;MACb;MAEA,IAAIC,QAAQ,GAAG3B,iBAAiB,CAAC,IAAI,CAAC;MAEtC,IAAI,CAAC2B,QAAQ,EAAE;QACb,OAAO,IAAI;MACb;MAEA,IAAI,IAAI,CAACf,SAAS,CAACD,kBAAkB,CAAC,CAAC,EAAE;QACvC;QACA,OAAO,KAAK;MACd;MAEA,OAAO,IAAI,CAACC,SAAS,CAACgB,qBAAqB,CAAC,CAAC,IAAI,IAAI,CAACd,SAAS,CAAC,CAAC,IAAI,IAAI,CAACe,WAAW,CAAC,CAAC,CAACC,OAAO;IACjG,CAAC;IACDC,MAAM,EAAE,SAASA,MAAMA,CAAA,EAAG;MACxB,OAAO,CAAC,IAAI,CAACF,WAAW,CAAC,CAAC,CAACG,iBAAiB;IAC9C;EACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"function _toArray(arr) {\n  return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nimport { getCompareFunctionFactory } from \"./sortService/index.mjs\";\n/**\n * Sort comparator handled by conventional sort algorithm.\n *\n * @param {Array} sortingOrders Sort orders (`asc` for ascending, `desc` for descending).\n * @param {Array} columnMetas Column meta objects.\n * @returns {Function}\n */\n\nexport function rootComparator(sortingOrders, columnMetas) {\n  return function (rowIndexWithValues, nextRowIndexWithValues) {\n    // We sort array of arrays. Single array is in form [rowIndex, ...values].\n    // We compare just values, stored at second index of array.\n    var _rowIndexWithValues = _toArray(rowIndexWithValues),\n      values = _rowIndexWithValues.slice(1);\n    var _nextRowIndexWithValu = _toArray(nextRowIndexWithValues),\n      nextValues = _nextRowIndexWithValu.slice(1);\n    return function getCompareResult(column) {\n      var sortingOrder = sortingOrders[column];\n      var columnMeta = columnMetas[column];\n      var value = values[column];\n      var nextValue = nextValues[column];\n      var pluginSettings = columnMeta.columnSorting;\n      var compareFunctionFactory = pluginSettings.compareFunctionFactory ? pluginSettings.compareFunctionFactory : getCompareFunctionFactory(columnMeta.type);\n      var compareResult = compareFunctionFactory(sortingOrder, columnMeta, pluginSettings)(value, nextValue); // DIFF - MultiColumnSorting & ColumnSorting: removed iteration through next sorted columns.\n\n      return compareResult;\n    }(0);\n  };\n}","map":{"version":3,"names":["_toArray","arr","_arrayWithHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","len","length","i","arr2","iter","Symbol","iterator","isArray","getCompareFunctionFactory","rootComparator","sortingOrders","columnMetas","rowIndexWithValues","nextRowIndexWithValues","_rowIndexWithValues","values","_nextRowIndexWithValu","nextValues","getCompareResult","column","sortingOrder","columnMeta","value","nextValue","pluginSettings","columnSorting","compareFunctionFactory","type","compareResult"],"sources":["/Users/priyadeliwala/Desktop/sales-dashboard/node_modules/handsontable/plugins/columnSorting/rootComparator.mjs"],"sourcesContent":["import \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\n\nfunction _toArray(arr) { return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport { getCompareFunctionFactory } from \"./sortService/index.mjs\";\n/**\n * Sort comparator handled by conventional sort algorithm.\n *\n * @param {Array} sortingOrders Sort orders (`asc` for ascending, `desc` for descending).\n * @param {Array} columnMetas Column meta objects.\n * @returns {Function}\n */\n\nexport function rootComparator(sortingOrders, columnMetas) {\n  return function (rowIndexWithValues, nextRowIndexWithValues) {\n    // We sort array of arrays. Single array is in form [rowIndex, ...values].\n    // We compare just values, stored at second index of array.\n    var _rowIndexWithValues = _toArray(rowIndexWithValues),\n        values = _rowIndexWithValues.slice(1);\n\n    var _nextRowIndexWithValu = _toArray(nextRowIndexWithValues),\n        nextValues = _nextRowIndexWithValu.slice(1);\n\n    return function getCompareResult(column) {\n      var sortingOrder = sortingOrders[column];\n      var columnMeta = columnMetas[column];\n      var value = values[column];\n      var nextValue = nextValues[column];\n      var pluginSettings = columnMeta.columnSorting;\n      var compareFunctionFactory = pluginSettings.compareFunctionFactory ? pluginSettings.compareFunctionFactory : getCompareFunctionFactory(columnMeta.type);\n      var compareResult = compareFunctionFactory(sortingOrder, columnMeta, pluginSettings)(value, nextValue); // DIFF - MultiColumnSorting & ColumnSorting: removed iteration through next sorted columns.\n\n      return compareResult;\n    }(0);\n  };\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"/**\n * The NodeModifiers module is responsible for the modification of a tree structure\n * in a way to achieve new column headers state.\n */\nimport { collapseNode } from \"./collapse.mjs\";\nimport { expandNode } from \"./expand.mjs\";\nimport { hideColumn } from \"./hideColumn.mjs\";\nimport { showColumn } from \"./showColumn.mjs\";\nvar availableModifiers = new Map([['collapse', collapseNode], ['expand', expandNode], ['hide-column', hideColumn], ['show-column', showColumn]]);\n/**\n * An entry point for triggering a node modifiers. If the triggered action\n * does not exist the exception is thrown.\n *\n * @param {string} actionName An action name to trigger.\n * @param {TreeNode} nodeToProcess A tree node to process.\n * @param {number} gridColumnIndex The visual column index that comes from the nested headers grid.\n *                                 The index, as opposed to the `columnIndex` in the tree node\n *                                 (which describes the column index of the root node of the header\n *                                 element), describes the index passed from the grid. Hence, the\n *                                 index can be between the column index of the node and its colspan\n *                                 width.\n * @returns {object}\n */\n\nexport function triggerNodeModification(actionName, nodeToProcess, gridColumnIndex) {\n  if (!availableModifiers.has(actionName)) {\n    throw new Error(\"The node modifier action (\\\"\".concat(actionName, \"\\\") does not exist.\"));\n  }\n  return availableModifiers.get(actionName)(nodeToProcess, gridColumnIndex);\n}","map":{"version":3,"names":["collapseNode","expandNode","hideColumn","showColumn","availableModifiers","Map","triggerNodeModification","actionName","nodeToProcess","gridColumnIndex","has","Error","concat","get"],"sources":["/Users/priyadeliwala/Desktop/sales-dashboard/node_modules/handsontable/plugins/nestedHeaders/stateManager/nodeModifiers/index.mjs"],"sourcesContent":["import \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n\n/**\n * The NodeModifiers module is responsible for the modification of a tree structure\n * in a way to achieve new column headers state.\n */\nimport { collapseNode } from \"./collapse.mjs\";\nimport { expandNode } from \"./expand.mjs\";\nimport { hideColumn } from \"./hideColumn.mjs\";\nimport { showColumn } from \"./showColumn.mjs\";\nvar availableModifiers = new Map([['collapse', collapseNode], ['expand', expandNode], ['hide-column', hideColumn], ['show-column', showColumn]]);\n/**\n * An entry point for triggering a node modifiers. If the triggered action\n * does not exist the exception is thrown.\n *\n * @param {string} actionName An action name to trigger.\n * @param {TreeNode} nodeToProcess A tree node to process.\n * @param {number} gridColumnIndex The visual column index that comes from the nested headers grid.\n *                                 The index, as opposed to the `columnIndex` in the tree node\n *                                 (which describes the column index of the root node of the header\n *                                 element), describes the index passed from the grid. Hence, the\n *                                 index can be between the column index of the node and its colspan\n *                                 width.\n * @returns {object}\n */\n\nexport function triggerNodeModification(actionName, nodeToProcess, gridColumnIndex) {\n  if (!availableModifiers.has(actionName)) {\n    throw new Error(\"The node modifier action (\\\"\".concat(actionName, \"\\\") does not exist.\"));\n  }\n\n  return availableModifiers.get(actionName)(nodeToProcess, gridColumnIndex);\n}"],"mappings":"AAMA;AACA;AACA;AACA;AACA,SAASA,YAAY,QAAQ,gBAAgB;AAC7C,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,IAAIC,kBAAkB,GAAG,IAAIC,GAAG,CAAC,CAAC,CAAC,UAAU,EAAEL,YAAY,CAAC,EAAE,CAAC,QAAQ,EAAEC,UAAU,CAAC,EAAE,CAAC,aAAa,EAAEC,UAAU,CAAC,EAAE,CAAC,aAAa,EAAEC,UAAU,CAAC,CAAC,CAAC;AAChJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASG,uBAAuBA,CAACC,UAAU,EAAEC,aAAa,EAAEC,eAAe,EAAE;EAClF,IAAI,CAACL,kBAAkB,CAACM,GAAG,CAACH,UAAU,CAAC,EAAE;IACvC,MAAM,IAAII,KAAK,CAAC,8BAA8B,CAACC,MAAM,CAACL,UAAU,EAAE,qBAAqB,CAAC,CAAC;EAC3F;EAEA,OAAOH,kBAAkB,CAACS,GAAG,CAACN,UAAU,CAAC,CAACC,aAAa,EAAEC,eAAe,CAAC;AAC3E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
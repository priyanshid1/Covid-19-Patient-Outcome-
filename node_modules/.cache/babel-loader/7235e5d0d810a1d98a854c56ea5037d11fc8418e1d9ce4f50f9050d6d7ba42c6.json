{"ast":null,"code":"var _jsxFileName = \"/Users/priyadeliwala/Desktop/sales-dashboard/src/components/Filter.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Filter = ({\n  filter,\n  setFilter,\n  data\n}) => {\n  _s();\n  const [countryOptions, setCountryOptions] = useState([]);\n\n  // Populate unique countries from data\n  useEffect(() => {\n    const uniqueCountries = Array.from(new Set(data.map(item => item.country)));\n    setCountryOptions(uniqueCountries);\n  }, [data]);\n\n  // Handle multiple selection for countries\n  const handleCountryChange = event => {\n    const selectedCountries = Array.from(event.target.selectedOptions, option => option.value);\n    setFilter({\n      ...filter,\n      country: selectedCountries\n    });\n  };\n\n  // Handle multiple selection for metrics\n  const handleMetricChange = event => {\n    const selectedMetrics = Array.from(event.target.selectedOptions, option => option.value);\n    setFilter({\n      ...filter,\n      metrics: selectedMetrics\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filter\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \" Country:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      multiple: true,\n      value: filter.country,\n      onChange: handleCountryChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"All\",\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), countryOptions.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: country,\n        children: country\n      }, country, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Metrics: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      multiple: true,\n      value: filter.metrics,\n      onChange: handleMetricChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"cases\",\n        children: \"Cases\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"deaths\",\n        children: \"Deaths\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"recovered\",\n        children: \"Recovered\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Min Value:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Enter minimum value\",\n        value: filter.minValue,\n        onChange: e => setFilter({\n          ...filter,\n          minValue: e.target.value === '' ? 0 : parseInt(e.target.value, 10)\n        }),\n        min: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(Filter, \"WQhg4Jle59cLJH8laRVjbkKqNcw=\");\n_c = Filter;\nexport default Filter;\nvar _c;\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Filter","filter","setFilter","data","_s","countryOptions","setCountryOptions","uniqueCountries","Array","from","Set","map","item","country","handleCountryChange","event","selectedCountries","target","selectedOptions","option","value","handleMetricChange","selectedMetrics","metrics","className","children","fileName","_jsxFileName","lineNumber","columnNumber","multiple","onChange","type","placeholder","minValue","e","parseInt","min","_c","$RefreshReg$"],"sources":["/Users/priyadeliwala/Desktop/sales-dashboard/src/components/Filter.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst Filter = ({ filter, setFilter, data }) => {\n    const [countryOptions, setCountryOptions] = useState([]);\n\n    // Populate unique countries from data\n    useEffect(() => {\n        const uniqueCountries = Array.from(new Set(data.map(item => item.country)));\n        setCountryOptions(uniqueCountries);\n    }, [data]);\n\n    // Handle multiple selection for countries\n    const handleCountryChange = (event) => {\n        const selectedCountries = Array.from(event.target.selectedOptions, option => option.value);\n        setFilter({ ...filter, country: selectedCountries });\n    };\n\n    // Handle multiple selection for metrics\n    const handleMetricChange = (event) => {\n        const selectedMetrics = Array.from(event.target.selectedOptions, option => option.value);\n        setFilter({ ...filter, metrics: selectedMetrics });\n    };\n\n    return (\n        <div className=\"filter\">\n           \n            <label> Country:</label>\n                <select\n                    multiple\n                    value={filter.country}\n                    onChange={handleCountryChange}\n                >\n                    <option value=\"All\">All</option>\n                    {countryOptions.map((country) => (\n                        <option key={country} value={country}>\n                            {country}\n                        </option>\n                    ))}\n                </select>\n            \n\n            <label>\n                Metrics: </label>\n                <select\n                    multiple\n                    value={filter.metrics}\n                    onChange={handleMetricChange}\n                >\n                    <option value=\"cases\">Cases</option>\n                    <option value=\"deaths\">Deaths</option>\n                    <option value=\"recovered\">Recovered</option>\n                </select>\n           \n\n            <label>\n                Min Value: \n                <input\n                    type=\"number\"\n                    placeholder=\"Enter minimum value\"\n                    value={filter.minValue}\n                    onChange={(e) => setFilter({ ...filter, minValue: e.target.value === '' ? 0 : parseInt(e.target.value, 10) })}\n                    min=\"0\"\n                />\n           </label>\n        </div>\n    );\n};\n\nexport default Filter;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,MAAM,GAAGA,CAAC;EAAEC,MAAM;EAAEC,SAAS;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAExD;EACAD,SAAS,CAAC,MAAM;IACZ,MAAMW,eAAe,GAAGC,KAAK,CAACC,IAAI,CAAC,IAAIC,GAAG,CAACP,IAAI,CAACQ,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC;IAC3EP,iBAAiB,CAACC,eAAe,CAAC;EACtC,CAAC,EAAE,CAACJ,IAAI,CAAC,CAAC;;EAEV;EACA,MAAMW,mBAAmB,GAAIC,KAAK,IAAK;IACnC,MAAMC,iBAAiB,GAAGR,KAAK,CAACC,IAAI,CAACM,KAAK,CAACE,MAAM,CAACC,eAAe,EAAEC,MAAM,IAAIA,MAAM,CAACC,KAAK,CAAC;IAC1FlB,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAEY,OAAO,EAAEG;IAAkB,CAAC,CAAC;EACxD,CAAC;;EAED;EACA,MAAMK,kBAAkB,GAAIN,KAAK,IAAK;IAClC,MAAMO,eAAe,GAAGd,KAAK,CAACC,IAAI,CAACM,KAAK,CAACE,MAAM,CAACC,eAAe,EAAEC,MAAM,IAAIA,MAAM,CAACC,KAAK,CAAC;IACxFlB,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAEsB,OAAO,EAAED;IAAgB,CAAC,CAAC;EACtD,CAAC;EAED,oBACIvB,OAAA;IAAKyB,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBAEnB1B,OAAA;MAAA0B,QAAA,EAAO;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACpB9B,OAAA;MACI+B,QAAQ;MACRV,KAAK,EAAEnB,MAAM,CAACY,OAAQ;MACtBkB,QAAQ,EAAEjB,mBAAoB;MAAAW,QAAA,gBAE9B1B,OAAA;QAAQqB,KAAK,EAAC,KAAK;QAAAK,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAC/BxB,cAAc,CAACM,GAAG,CAAEE,OAAO,iBACxBd,OAAA;QAAsBqB,KAAK,EAAEP,OAAQ;QAAAY,QAAA,EAChCZ;MAAO,GADCA,OAAO;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEZ,CACX,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAGb9B,OAAA;MAAA0B,QAAA,EAAO;IACM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACjB9B,OAAA;MACI+B,QAAQ;MACRV,KAAK,EAAEnB,MAAM,CAACsB,OAAQ;MACtBQ,QAAQ,EAAEV,kBAAmB;MAAAI,QAAA,gBAE7B1B,OAAA;QAAQqB,KAAK,EAAC,OAAO;QAAAK,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACpC9B,OAAA;QAAQqB,KAAK,EAAC,QAAQ;QAAAK,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtC9B,OAAA;QAAQqB,KAAK,EAAC,WAAW;QAAAK,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,eAGb9B,OAAA;MAAA0B,QAAA,GAAO,YAEH,eAAA1B,OAAA;QACIiC,IAAI,EAAC,QAAQ;QACbC,WAAW,EAAC,qBAAqB;QACjCb,KAAK,EAAEnB,MAAM,CAACiC,QAAS;QACvBH,QAAQ,EAAGI,CAAC,IAAKjC,SAAS,CAAC;UAAE,GAAGD,MAAM;UAAEiC,QAAQ,EAAEC,CAAC,CAAClB,MAAM,CAACG,KAAK,KAAK,EAAE,GAAG,CAAC,GAAGgB,QAAQ,CAACD,CAAC,CAAClB,MAAM,CAACG,KAAK,EAAE,EAAE;QAAE,CAAC,CAAE;QAC9GiB,GAAG,EAAC;MAAG;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAACzB,EAAA,CAhEIJ,MAAM;AAAAsC,EAAA,GAANtC,MAAM;AAkEZ,eAAeA,MAAM;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
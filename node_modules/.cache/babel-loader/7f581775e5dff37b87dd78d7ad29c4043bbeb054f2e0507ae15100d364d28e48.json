{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nimport { addClass, closest, isChildOf, hasClass, offset, outerWidth, outerHeight } from \"../../helpers/dom/element.mjs\";\nimport { deepClone, deepExtend, isObject } from \"../../helpers/object.mjs\";\nimport EventManager from \"../../eventManager.mjs\";\nimport { CellCoords, CellRange } from \"../../3rdparty/walkontable/src/index.mjs\";\nimport { BasePlugin } from \"../base/index.mjs\";\nimport CommentEditor from \"./commentEditor.mjs\";\nimport { checkSelectionConsistency, markLabelAsSelected } from \"../contextMenu/utils.mjs\";\nimport DisplaySwitch from \"./displaySwitch.mjs\";\nimport * as C from \"../../i18n/constants.mjs\";\nexport var PLUGIN_KEY = 'comments';\nexport var PLUGIN_PRIORITY = 60;\nvar privatePool = new WeakMap();\nvar META_COMMENT = 'comment';\nvar META_COMMENT_VALUE = 'value';\nvar META_STYLE = 'style';\nvar META_READONLY = 'readOnly';\n/* eslint-disable jsdoc/require-description-complete-sentence */\n\n/**\n * @plugin Comments\n * @class Comments\n *\n * @description\n * This plugin allows setting and managing cell comments by either an option in the context menu or with the use of\n * the API.\n *\n * To enable the plugin, you'll need to set the comments property of the config object to `true`:\n * ```js\n * comments: true\n * ```\n *\n * or an object with extra predefined plugin config:\n *\n * ```js\n * comments: {\n *   displayDelay: 1000,\n *   readOnly: true,\n *   style: {\n *     width: 300,\n *     height: 100\n *   }\n * }\n * ```\n *\n * To add comments at the table initialization, define the `comment` property in the `cell` config array as in an example below.\n *\n * @example\n *\n * ```js\n * const hot = new Handsontable(document.getElementById('example'), {\n *   data: getData(),\n *   comments: true,\n *   cell: [\n *     {row: 1, col: 1, comment: {value: 'Foo'}},\n *     {row: 2, col: 2, comment: {value: 'Bar'}}\n *   ]\n * });\n *\n * // Access to the Comments plugin instance:\n * const commentsPlugin = hot.getPlugin('comments');\n *\n * // Manage comments programmatically:\n * commentsPlugin.setCommentAtCell(1, 6, 'Comment contents');\n * commentsPlugin.showAtCell(1, 6);\n * commentsPlugin.removeCommentAtCell(1, 6);\n *\n * // You can also set range once and use proper methods:\n * commentsPlugin.setRange({from: {row: 1, col: 6}});\n * commentsPlugin.setComment('Comment contents');\n * commentsPlugin.show();\n * commentsPlugin.removeComment();\n * ```\n */\n\n/* eslint-enable jsdoc/require-description-complete-sentence */\n\nexport var Comments = /*#__PURE__*/function (_BasePlugin) {\n  _inherits(Comments, _BasePlugin);\n  var _super = _createSuper(Comments);\n  function Comments(hotInstance) {\n    var _this;\n    _classCallCheck(this, Comments);\n    _this = _super.call(this, hotInstance);\n    /**\n     * Instance of {@link CommentEditor}.\n     *\n     * @private\n     * @type {CommentEditor}\n     */\n\n    _this.editor = null;\n    /**\n     * Instance of {@link DisplaySwitch}.\n     *\n     * @private\n     * @type {DisplaySwitch}\n     */\n\n    _this.displaySwitch = null;\n    /**\n     * Instance of {@link EventManager}.\n     *\n     * @private\n     * @type {EventManager}\n     */\n\n    _this.eventManager = null;\n    /**\n     * Current cell range, an object with `from` property, with `row` and `col` properties (e.q. `{from: {row: 1, col: 6}}`).\n     *\n     * @type {object}\n     */\n\n    _this.range = {};\n    /**\n     * Prevents showing/hiding editor that reacts on the logic triggered by the \"mouseover\" events.\n     *\n     * @private\n     * @type {boolean}\n     */\n\n    _this.preventEditorAutoSwitch = false;\n    privatePool.set(_assertThisInitialized(_this), {\n      tempEditorDimensions: {},\n      cellBelowCursor: null\n    });\n    return _this;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` than the {@link Comments#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n\n  _createClass(Comments, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return !!this.hot.getSettings()[PLUGIN_KEY];\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n      if (this.enabled) {\n        return;\n      }\n      if (!this.editor) {\n        this.editor = new CommentEditor(this.hot.rootDocument);\n      }\n      if (!this.eventManager) {\n        this.eventManager = new EventManager(this);\n      }\n      if (!this.displaySwitch) {\n        this.displaySwitch = new DisplaySwitch(this.getDisplayDelaySetting());\n      }\n      this.addHook('afterContextMenuDefaultOptions', function (options) {\n        return _this2.addToContextMenu(options);\n      });\n      this.addHook('afterRenderer', function (TD, row, col, prop, value, cellProperties) {\n        return _this2.onAfterRenderer(TD, cellProperties);\n      });\n      this.addHook('afterScrollHorizontally', function () {\n        return _this2.hide();\n      });\n      this.addHook('afterScrollVertically', function () {\n        return _this2.hide();\n      });\n      this.addHook('afterBeginEditing', function () {\n        return _this2.hide();\n      });\n      this.displaySwitch.addLocalHook('hide', function () {\n        return _this2.hide();\n      });\n      this.displaySwitch.addLocalHook('show', function (row, col) {\n        return _this2.showAtCell(row, col);\n      });\n      this.registerListeners();\n      _get(_getPrototypeOf(Comments.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Updates the plugin state. This method is executed when {@link Core#updateSettings} is invoked.\n     */\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n      _get(_getPrototypeOf(Comments.prototype), \"updatePlugin\", this).call(this);\n      this.displaySwitch.updateDelay(this.getDisplayDelaySetting());\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      _get(_getPrototypeOf(Comments.prototype), \"disablePlugin\", this).call(this);\n    }\n    /**\n     * Registers all necessary DOM listeners.\n     *\n     * @private\n     */\n  }, {\n    key: \"registerListeners\",\n    value: function registerListeners() {\n      var _this3 = this;\n      var rootDocument = this.hot.rootDocument;\n      this.eventManager.addEventListener(rootDocument, 'mouseover', function (event) {\n        return _this3.onMouseOver(event);\n      });\n      this.eventManager.addEventListener(rootDocument, 'mousedown', function (event) {\n        return _this3.onMouseDown(event);\n      });\n      this.eventManager.addEventListener(rootDocument, 'mouseup', function () {\n        return _this3.onMouseUp();\n      });\n      this.eventManager.addEventListener(this.editor.getInputElement(), 'blur', function () {\n        return _this3.onEditorBlur();\n      });\n      this.eventManager.addEventListener(this.editor.getInputElement(), 'mousedown', function (event) {\n        return _this3.onEditorMouseDown(event);\n      });\n      this.eventManager.addEventListener(this.editor.getInputElement(), 'mouseup', function (event) {\n        return _this3.onEditorMouseUp(event);\n      });\n    }\n    /**\n     * Sets the current cell range to be able to use general methods like {@link Comments#setComment}, {@link Comments#removeComment}, {@link Comments#show}.\n     *\n     * @param {object} range Object with `from` property, each with `row` and `col` properties.\n     */\n  }, {\n    key: \"setRange\",\n    value: function setRange(range) {\n      this.range = range;\n    }\n    /**\n     * Clears the currently selected cell.\n     */\n  }, {\n    key: \"clearRange\",\n    value: function clearRange() {\n      this.range = {};\n    }\n    /**\n     * Checks if the event target is a cell containing a comment.\n     *\n     * @private\n     * @param {Event} event DOM event.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"targetIsCellWithComment\",\n    value: function targetIsCellWithComment(event) {\n      var closestCell = closest(event.target, 'TD', 'TBODY');\n      return !!(closestCell && hasClass(closestCell, 'htCommentCell') && closest(closestCell, [this.hot.rootElement]));\n    }\n    /**\n     * Checks if the event target is a comment textarea.\n     *\n     * @private\n     * @param {Event} event DOM event.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"targetIsCommentTextArea\",\n    value: function targetIsCommentTextArea(event) {\n      return this.editor.getInputElement() === event.target;\n    }\n    /**\n     * Sets a comment for a cell according to the previously set range (see {@link Comments#setRange}).\n     *\n     * @param {string} value Comment contents.\n     */\n  }, {\n    key: \"setComment\",\n    value: function setComment(value) {\n      if (!this.range.from) {\n        throw new Error('Before using this method, first set cell range (hot.getPlugin(\"comment\").setRange())');\n      }\n      var editorValue = this.editor.getValue();\n      var comment = '';\n      if (value !== null && value !== void 0) {\n        comment = value;\n      } else if (editorValue !== null && editorValue !== void 0) {\n        comment = editorValue;\n      }\n      var row = this.range.from.row;\n      var col = this.range.from.col;\n      this.updateCommentMeta(row, col, _defineProperty({}, META_COMMENT_VALUE, comment));\n      this.hot.render();\n    }\n    /**\n     * Sets a comment for a specified cell.\n     *\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @param {string} value Comment contents.\n     */\n  }, {\n    key: \"setCommentAtCell\",\n    value: function setCommentAtCell(row, column, value) {\n      this.setRange({\n        from: new CellCoords(row, column)\n      });\n      this.setComment(value);\n    }\n    /**\n     * Removes a comment from a cell according to previously set range (see {@link Comments#setRange}).\n     *\n     * @param {boolean} [forceRender=true] If set to `true`, the table will be re-rendered at the end of the operation.\n     */\n  }, {\n    key: \"removeComment\",\n    value: function removeComment() {\n      var forceRender = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      if (!this.range.from) {\n        throw new Error('Before using this method, first set cell range (hot.getPlugin(\"comment\").setRange())');\n      }\n      this.hot.setCellMeta(this.range.from.row, this.range.from.col, META_COMMENT);\n      if (forceRender) {\n        this.hot.render();\n      }\n      this.hide();\n    }\n    /**\n     * Removes a comment from a specified cell.\n     *\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @param {boolean} [forceRender=true] If `true`, the table will be re-rendered at the end of the operation.\n     */\n  }, {\n    key: \"removeCommentAtCell\",\n    value: function removeCommentAtCell(row, column) {\n      var forceRender = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      this.setRange({\n        from: new CellCoords(row, column)\n      });\n      this.removeComment(forceRender);\n    }\n    /**\n     * Gets comment from a cell according to previously set range (see {@link Comments#setRange}).\n     *\n     * @returns {string|undefined} Returns a content of the comment.\n     */\n  }, {\n    key: \"getComment\",\n    value: function getComment() {\n      var row = this.range.from.row;\n      var column = this.range.from.col;\n      return this.getCommentMeta(row, column, META_COMMENT_VALUE);\n    }\n    /**\n     * Gets comment from a cell at the provided coordinates.\n     *\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @returns {string|undefined} Returns a content of the comment.\n     */\n  }, {\n    key: \"getCommentAtCell\",\n    value: function getCommentAtCell(row, column) {\n      return this.getCommentMeta(row, column, META_COMMENT_VALUE);\n    }\n    /**\n     * Shows the comment editor accordingly to the previously set range (see {@link Comments#setRange}).\n     *\n     * @returns {boolean} Returns `true` if comment editor was shown.\n     */\n  }, {\n    key: \"show\",\n    value: function show() {\n      if (!this.range.from) {\n        throw new Error('Before using this method, first set cell range (hot.getPlugin(\"comment\").setRange())');\n      }\n      var _this$range$from = this.range.from,\n        row = _this$range$from.row,\n        col = _this$range$from.col;\n      if (row < 0 || row > this.hot.countSourceRows() - 1 || col < 0 || col > this.hot.countSourceCols() - 1) {\n        return false;\n      }\n      var meta = this.hot.getCellMeta(this.range.from.row, this.range.from.col);\n      this.refreshEditor(true);\n      this.editor.setValue(meta[META_COMMENT] ? meta[META_COMMENT][META_COMMENT_VALUE] : null || '');\n      if (this.editor.hidden) {\n        this.editor.show();\n      }\n      return true;\n    }\n    /**\n     * Shows comment editor according to cell coordinates.\n     *\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @returns {boolean} Returns `true` if comment editor was shown.\n     */\n  }, {\n    key: \"showAtCell\",\n    value: function showAtCell(row, column) {\n      this.setRange({\n        from: new CellCoords(row, column)\n      });\n      return this.show();\n    }\n    /**\n     * Hides the comment editor.\n     */\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this.editor.hide();\n    }\n    /**\n     * Refreshes comment editor position and styling.\n     *\n     * @param {boolean} [force=false] If `true` then recalculation will be forced.\n     */\n  }, {\n    key: \"refreshEditor\",\n    value: function refreshEditor() {\n      var _renderableRow, _renderableColumn;\n      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      if (!force && (!this.range.from || !this.editor.isVisible())) {\n        return;\n      }\n      var _this$hot = this.hot,\n        rowIndexMapper = _this$hot.rowIndexMapper,\n        columnIndexMapper = _this$hot.columnIndexMapper;\n      var _this$range$from2 = this.range.from,\n        visualRow = _this$range$from2.row,\n        visualColumn = _this$range$from2.col;\n      var renderableRow = rowIndexMapper.getRenderableFromVisualIndex(visualRow);\n      var renderableColumn = columnIndexMapper.getRenderableFromVisualIndex(visualColumn); // Used when the requested row is hidden, and the editor needs to be positioned on the previous row's coords.\n\n      var targetingPreviousRow = renderableRow === null;\n      if (renderableRow === null) {\n        renderableRow = rowIndexMapper.getRenderableFromVisualIndex(rowIndexMapper.getFirstNotHiddenIndex(visualRow, -1));\n      }\n      if (renderableColumn === null) {\n        renderableColumn = columnIndexMapper.getRenderableFromVisualIndex(columnIndexMapper.getFirstNotHiddenIndex(visualColumn, -1));\n      }\n      var isBeforeRenderedRows = renderableRow === null;\n      var isBeforeRenderedColumns = renderableColumn === null;\n      renderableRow = (_renderableRow = renderableRow) !== null && _renderableRow !== void 0 ? _renderableRow : 0;\n      renderableColumn = (_renderableColumn = renderableColumn) !== null && _renderableColumn !== void 0 ? _renderableColumn : 0;\n      var _this$hot2 = this.hot,\n        rootWindow = _this$hot2.rootWindow,\n        wt = _this$hot2.view.wt;\n      var wtTable = wt.wtTable,\n        wtOverlays = wt.wtOverlays,\n        wtViewport = wt.wtViewport;\n      var scrollableElement = wtOverlays.scrollableElement;\n      var TD = wtTable.getCell({\n        row: renderableRow,\n        col: renderableColumn\n      });\n      var cellOffset = offset(TD);\n      var lastColWidth = isBeforeRenderedColumns ? 0 : wtTable.getStretchedColumnWidth(renderableColumn);\n      var lastRowHeight = targetingPreviousRow && !isBeforeRenderedRows ? outerHeight(TD) : 0;\n      var cellTopOffset = cellOffset.top;\n      var cellLeftOffset = cellOffset.left;\n      if (wtViewport.hasVerticalScroll() && scrollableElement !== rootWindow) {\n        cellTopOffset -= wtOverlays.topOverlay.getScrollPosition();\n      }\n      if (wtViewport.hasHorizontalScroll() && scrollableElement !== rootWindow) {\n        cellLeftOffset -= wtOverlays.leftOverlay.getScrollPosition();\n      }\n      var x = cellLeftOffset + lastColWidth;\n      var y = cellTopOffset + lastRowHeight;\n      var commentStyle = this.getCommentMeta(visualRow, visualColumn, META_STYLE);\n      var readOnly = this.getCommentMeta(visualRow, visualColumn, META_READONLY);\n      if (commentStyle) {\n        this.editor.setSize(commentStyle.width, commentStyle.height);\n      } else {\n        this.editor.resetSize();\n      }\n      this.editor.setReadOnlyState(readOnly);\n      this.editor.setPosition(x, y);\n    }\n    /**\n     * Checks if there is a comment for selected range.\n     *\n     * @private\n     * @returns {boolean}\n     */\n  }, {\n    key: \"checkSelectionCommentsConsistency\",\n    value: function checkSelectionCommentsConsistency() {\n      var selected = this.hot.getSelectedRangeLast();\n      if (!selected) {\n        return false;\n      }\n      var hasComment = false;\n      var cell = selected.getTopLeftCorner(); // IN EXCEL THERE IS COMMENT ONLY FOR TOP LEFT CELL IN SELECTION\n\n      if (this.getCommentMeta(cell.row, cell.col, META_COMMENT_VALUE)) {\n        hasComment = true;\n      }\n      return hasComment;\n    }\n    /**\n     * Sets or update the comment-related cell meta.\n     *\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @param {object} metaObject Object defining all the comment-related meta information.\n     */\n  }, {\n    key: \"updateCommentMeta\",\n    value: function updateCommentMeta(row, column, metaObject) {\n      var oldComment = this.hot.getCellMeta(row, column)[META_COMMENT];\n      var newComment;\n      if (oldComment) {\n        newComment = deepClone(oldComment);\n        deepExtend(newComment, metaObject);\n      } else {\n        newComment = metaObject;\n      }\n      this.hot.setCellMeta(row, column, META_COMMENT, newComment);\n    }\n    /**\n     * Gets the comment related meta information.\n     *\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @param {string} property Cell meta property.\n     * @returns {Mixed}\n     */\n  }, {\n    key: \"getCommentMeta\",\n    value: function getCommentMeta(row, column, property) {\n      var cellMeta = this.hot.getCellMeta(row, column);\n      if (!cellMeta[META_COMMENT]) {\n        return void 0;\n      }\n      return cellMeta[META_COMMENT][property];\n    }\n    /**\n     * `mousedown` event callback.\n     *\n     * @private\n     * @param {MouseEvent} event The `mousedown` event.\n     */\n  }, {\n    key: \"onMouseDown\",\n    value: function onMouseDown(event) {\n      if (!this.hot.view || !this.hot.view.wt) {\n        return;\n      }\n      if (!this.preventEditorAutoSwitch && !this.targetIsCommentTextArea(event)) {\n        var eventCell = closest(event.target, 'TD', 'TBODY');\n        var coordinates = null;\n        if (eventCell) {\n          coordinates = this.hot.getCoords(eventCell);\n        }\n        if (!eventCell || this.range.from && coordinates && (this.range.from.row !== coordinates.row || this.range.from.col !== coordinates.col)) {\n          this.hide();\n        }\n      }\n    }\n    /**\n     * `mouseover` event callback.\n     *\n     * @private\n     * @param {MouseEvent} event The `mouseover` event.\n     */\n  }, {\n    key: \"onMouseOver\",\n    value: function onMouseOver(event) {\n      var priv = privatePool.get(this);\n      var rootDocument = this.hot.rootDocument;\n      if (this.preventEditorAutoSwitch || this.editor.isFocused() || hasClass(event.target, 'wtBorder') || priv.cellBelowCursor === event.target || !this.editor) {\n        return;\n      }\n      priv.cellBelowCursor = rootDocument.elementFromPoint(event.clientX, event.clientY);\n      if (this.targetIsCellWithComment(event)) {\n        var range = new CellRange(this.hot.getCoords(event.target));\n        this.displaySwitch.show(range);\n      } else if (isChildOf(event.target, rootDocument) && !this.targetIsCommentTextArea(event)) {\n        this.displaySwitch.hide();\n      }\n    }\n    /**\n     * `mouseup` event callback.\n     *\n     * @private\n     */\n  }, {\n    key: \"onMouseUp\",\n    value: function onMouseUp() {\n      this.preventEditorAutoSwitch = false;\n    }\n    /**\n     * The `afterRenderer` hook callback.\n     *\n     * @private\n     * @param {HTMLTableCellElement} TD The rendered `TD` element.\n     * @param {object} cellProperties The rendered cell's property object.\n     */\n  }, {\n    key: \"onAfterRenderer\",\n    value: function onAfterRenderer(TD, cellProperties) {\n      if (cellProperties[META_COMMENT] && cellProperties[META_COMMENT][META_COMMENT_VALUE]) {\n        addClass(TD, cellProperties.commentedCellClassName);\n      }\n    }\n    /**\n     * `blur` event callback for the comment editor.\n     *\n     * @private\n     */\n  }, {\n    key: \"onEditorBlur\",\n    value: function onEditorBlur() {\n      this.setComment();\n    }\n    /**\n     * `mousedown` hook. Along with `onEditorMouseUp` used to simulate the textarea resizing event.\n     *\n     * @private\n     * @param {MouseEvent} event The `mousedown` event.\n     */\n  }, {\n    key: \"onEditorMouseDown\",\n    value: function onEditorMouseDown(event) {\n      var priv = privatePool.get(this);\n      priv.tempEditorDimensions = {\n        width: outerWidth(event.target),\n        height: outerHeight(event.target)\n      };\n    }\n    /**\n     * `mouseup` hook. Along with `onEditorMouseDown` used to simulate the textarea resizing event.\n     *\n     * @private\n     * @param {MouseEvent} event The `mouseup` event.\n     */\n  }, {\n    key: \"onEditorMouseUp\",\n    value: function onEditorMouseUp(event) {\n      var priv = privatePool.get(this);\n      var currentWidth = outerWidth(event.target);\n      var currentHeight = outerHeight(event.target);\n      if (currentWidth !== priv.tempEditorDimensions.width + 1 || currentHeight !== priv.tempEditorDimensions.height + 2) {\n        this.updateCommentMeta(this.range.from.row, this.range.from.col, _defineProperty({}, META_STYLE, {\n          width: currentWidth,\n          height: currentHeight\n        }));\n      }\n    }\n    /**\n     * Context Menu's \"Add comment\" callback. Results in showing the comment editor.\n     *\n     * @private\n     */\n  }, {\n    key: \"onContextMenuAddComment\",\n    value: function onContextMenuAddComment() {\n      var coords = this.hot.getSelectedRangeLast();\n      this.preventEditorAutoSwitch = true;\n      this.displaySwitch.cancelHiding();\n      this.setRange({\n        from: coords.highlight\n      });\n      this.show();\n      this.hot.deselectCell();\n      this.editor.focus();\n    }\n    /**\n     * Context Menu's \"remove comment\" callback.\n     *\n     * @private\n     */\n  }, {\n    key: \"onContextMenuRemoveComment\",\n    value: function onContextMenuRemoveComment() {\n      var _this4 = this;\n      var coords = this.hot.getSelectedRangeLast();\n      this.preventEditorAutoSwitch = true;\n      coords.forAll(function (row, column) {\n        if (row >= 0 && column >= 0) {\n          _this4.removeCommentAtCell(row, column, false);\n        }\n      });\n      this.hot.render();\n    }\n    /**\n     * Context Menu's \"make comment read-only\" callback.\n     *\n     * @private\n     */\n  }, {\n    key: \"onContextMenuMakeReadOnly\",\n    value: function onContextMenuMakeReadOnly() {\n      var _this5 = this;\n      var coords = this.hot.getSelectedRangeLast();\n      this.preventEditorAutoSwitch = true;\n      coords.forAll(function (row, column) {\n        if (row >= 0 && column >= 0) {\n          var currentState = !!_this5.getCommentMeta(row, column, META_READONLY);\n          _this5.updateCommentMeta(row, column, _defineProperty({}, META_READONLY, !currentState));\n        }\n      });\n    }\n    /**\n     * Add Comments plugin options to the Context Menu.\n     *\n     * @private\n     * @param {object} defaultOptions The menu options.\n     */\n  }, {\n    key: \"addToContextMenu\",\n    value: function addToContextMenu(defaultOptions) {\n      var _this6 = this;\n      var isThereAnyCellRendered = function isThereAnyCellRendered() {\n        return _this6.hot.rowIndexMapper.getRenderableIndexesLength() > 0 && _this6.hot.columnIndexMapper.getRenderableIndexesLength() > 0;\n      };\n      defaultOptions.items.push({\n        name: '---------'\n      }, {\n        key: 'commentsAddEdit',\n        name: function name() {\n          if (_this6.checkSelectionCommentsConsistency()) {\n            return _this6.hot.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_EDIT_COMMENT);\n          }\n          return _this6.hot.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_ADD_COMMENT);\n        },\n        callback: function callback() {\n          return _this6.onContextMenuAddComment();\n        },\n        disabled: function disabled() {\n          if (!isThereAnyCellRendered()) {\n            return true;\n          }\n          return !(_this6.hot.getSelectedLast() && !_this6.hot.selection.isSelectedByCorner());\n        }\n      }, {\n        key: 'commentsRemove',\n        name: function name() {\n          return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_REMOVE_COMMENT);\n        },\n        callback: function callback() {\n          return _this6.onContextMenuRemoveComment();\n        },\n        disabled: function disabled() {\n          if (!isThereAnyCellRendered()) {\n            return true;\n          }\n          return !(_this6.hot.getSelectedLast() && !_this6.hot.selection.isSelectedByCorner());\n        }\n      }, {\n        key: 'commentsReadOnly',\n        name: function name() {\n          var _this7 = this;\n          var label = this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_READ_ONLY_COMMENT);\n          var hasProperty = checkSelectionConsistency(this.getSelectedRangeLast(), function (row, col) {\n            var readOnlyProperty = _this7.getCellMeta(row, col)[META_COMMENT];\n            if (readOnlyProperty) {\n              readOnlyProperty = readOnlyProperty[META_READONLY];\n            }\n            if (readOnlyProperty) {\n              return true;\n            }\n          });\n          if (hasProperty) {\n            label = markLabelAsSelected(label);\n          }\n          return label;\n        },\n        callback: function callback() {\n          return _this6.onContextMenuMakeReadOnly();\n        },\n        disabled: function disabled() {\n          if (!isThereAnyCellRendered()) {\n            return true;\n          }\n          return !(_this6.hot.getSelectedLast() && !_this6.hot.selection.isSelectedByCorner()) || !_this6.checkSelectionCommentsConsistency();\n        }\n      });\n    }\n    /**\n     * Get `displayDelay` setting of comment plugin.\n     *\n     * @private\n     * @returns {number|undefined}\n     */\n  }, {\n    key: \"getDisplayDelaySetting\",\n    value: function getDisplayDelaySetting() {\n      var commentSetting = this.hot.getSettings()[PLUGIN_KEY];\n      if (isObject(commentSetting)) {\n        return commentSetting.displayDelay;\n      }\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.editor) {\n        this.editor.destroy();\n      }\n      if (this.displaySwitch) {\n        this.displaySwitch.destroy();\n      }\n      _get(_getPrototypeOf(Comments.prototype), \"destroy\", this).call(this);\n    }\n  }], [{\n    key: \"PLUGIN_KEY\",\n    get: function get() {\n      return PLUGIN_KEY;\n    }\n  }, {\n    key: \"PLUGIN_PRIORITY\",\n    get: function get() {\n      return PLUGIN_PRIORITY;\n    }\n  }]);\n  return Comments;\n}(BasePlugin);","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_defineProperty","key","value","Object","defineProperty","enumerable","configurable","writable","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","_createClass","protoProps","staticProps","_get","Reflect","get","property","receiver","base","_superPropBase","desc","getOwnPropertyDescriptor","call","arguments","apply","object","hasOwnProperty","_getPrototypeOf","_inherits","subClass","superClass","create","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","construct","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","addClass","closest","isChildOf","hasClass","offset","outerWidth","outerHeight","deepClone","deepExtend","isObject","EventManager","CellCoords","CellRange","BasePlugin","CommentEditor","checkSelectionConsistency","markLabelAsSelected","DisplaySwitch","C","PLUGIN_KEY","PLUGIN_PRIORITY","privatePool","WeakMap","META_COMMENT","META_COMMENT_VALUE","META_STYLE","META_READONLY","Comments","_BasePlugin","_super","hotInstance","_this","editor","displaySwitch","eventManager","range","preventEditorAutoSwitch","set","tempEditorDimensions","cellBelowCursor","isEnabled","hot","getSettings","enablePlugin","_this2","enabled","rootDocument","getDisplayDelaySetting","addHook","options","addToContextMenu","TD","row","col","prop","cellProperties","onAfterRenderer","hide","addLocalHook","showAtCell","registerListeners","updatePlugin","disablePlugin","updateDelay","_this3","addEventListener","event","onMouseOver","onMouseDown","onMouseUp","getInputElement","onEditorBlur","onEditorMouseDown","onEditorMouseUp","setRange","clearRange","targetIsCellWithComment","closestCell","rootElement","targetIsCommentTextArea","setComment","from","Error","editorValue","getValue","comment","updateCommentMeta","render","setCommentAtCell","column","removeComment","forceRender","undefined","setCellMeta","removeCommentAtCell","getComment","getCommentMeta","getCommentAtCell","show","_this$range$from","countSourceRows","countSourceCols","meta","getCellMeta","refreshEditor","setValue","hidden","_renderableRow","_renderableColumn","force","isVisible","_this$hot","rowIndexMapper","columnIndexMapper","_this$range$from2","visualRow","visualColumn","renderableRow","getRenderableFromVisualIndex","renderableColumn","targetingPreviousRow","getFirstNotHiddenIndex","isBeforeRenderedRows","isBeforeRenderedColumns","_this$hot2","rootWindow","wt","view","wtTable","wtOverlays","wtViewport","scrollableElement","getCell","cellOffset","lastColWidth","getStretchedColumnWidth","lastRowHeight","cellTopOffset","top","cellLeftOffset","left","hasVerticalScroll","topOverlay","getScrollPosition","hasHorizontalScroll","leftOverlay","x","y","commentStyle","readOnly","setSize","width","height","resetSize","setReadOnlyState","setPosition","checkSelectionCommentsConsistency","selected","getSelectedRangeLast","hasComment","cell","getTopLeftCorner","metaObject","oldComment","newComment","cellMeta","eventCell","coordinates","getCoords","priv","isFocused","elementFromPoint","clientX","clientY","commentedCellClassName","currentWidth","currentHeight","onContextMenuAddComment","coords","cancelHiding","highlight","deselectCell","focus","onContextMenuRemoveComment","_this4","forAll","onContextMenuMakeReadOnly","_this5","currentState","defaultOptions","_this6","isThereAnyCellRendered","getRenderableIndexesLength","items","push","name","getTranslatedPhrase","CONTEXTMENU_ITEMS_EDIT_COMMENT","CONTEXTMENU_ITEMS_ADD_COMMENT","callback","disabled","getSelectedLast","selection","isSelectedByCorner","CONTEXTMENU_ITEMS_REMOVE_COMMENT","_this7","label","CONTEXTMENU_ITEMS_READ_ONLY_COMMENT","hasProperty","readOnlyProperty","commentSetting","displayDelay","destroy"],"sources":["/Users/priyadeliwala/Desktop/sales-dashboard/node_modules/handsontable/plugins/comments/comments.mjs"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _get() { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.weak-map.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.object.set-prototype-of.js\";\nimport \"core-js/modules/es.object.get-prototype-of.js\";\nimport \"core-js/modules/es.reflect.construct.js\";\nimport \"core-js/modules/es.reflect.get.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport { addClass, closest, isChildOf, hasClass, offset, outerWidth, outerHeight } from \"../../helpers/dom/element.mjs\";\nimport { deepClone, deepExtend, isObject } from \"../../helpers/object.mjs\";\nimport EventManager from \"../../eventManager.mjs\";\nimport { CellCoords, CellRange } from \"../../3rdparty/walkontable/src/index.mjs\";\nimport { BasePlugin } from \"../base/index.mjs\";\nimport CommentEditor from \"./commentEditor.mjs\";\nimport { checkSelectionConsistency, markLabelAsSelected } from \"../contextMenu/utils.mjs\";\nimport DisplaySwitch from \"./displaySwitch.mjs\";\nimport * as C from \"../../i18n/constants.mjs\";\nexport var PLUGIN_KEY = 'comments';\nexport var PLUGIN_PRIORITY = 60;\nvar privatePool = new WeakMap();\nvar META_COMMENT = 'comment';\nvar META_COMMENT_VALUE = 'value';\nvar META_STYLE = 'style';\nvar META_READONLY = 'readOnly';\n/* eslint-disable jsdoc/require-description-complete-sentence */\n\n/**\n * @plugin Comments\n * @class Comments\n *\n * @description\n * This plugin allows setting and managing cell comments by either an option in the context menu or with the use of\n * the API.\n *\n * To enable the plugin, you'll need to set the comments property of the config object to `true`:\n * ```js\n * comments: true\n * ```\n *\n * or an object with extra predefined plugin config:\n *\n * ```js\n * comments: {\n *   displayDelay: 1000,\n *   readOnly: true,\n *   style: {\n *     width: 300,\n *     height: 100\n *   }\n * }\n * ```\n *\n * To add comments at the table initialization, define the `comment` property in the `cell` config array as in an example below.\n *\n * @example\n *\n * ```js\n * const hot = new Handsontable(document.getElementById('example'), {\n *   data: getData(),\n *   comments: true,\n *   cell: [\n *     {row: 1, col: 1, comment: {value: 'Foo'}},\n *     {row: 2, col: 2, comment: {value: 'Bar'}}\n *   ]\n * });\n *\n * // Access to the Comments plugin instance:\n * const commentsPlugin = hot.getPlugin('comments');\n *\n * // Manage comments programmatically:\n * commentsPlugin.setCommentAtCell(1, 6, 'Comment contents');\n * commentsPlugin.showAtCell(1, 6);\n * commentsPlugin.removeCommentAtCell(1, 6);\n *\n * // You can also set range once and use proper methods:\n * commentsPlugin.setRange({from: {row: 1, col: 6}});\n * commentsPlugin.setComment('Comment contents');\n * commentsPlugin.show();\n * commentsPlugin.removeComment();\n * ```\n */\n\n/* eslint-enable jsdoc/require-description-complete-sentence */\n\nexport var Comments = /*#__PURE__*/function (_BasePlugin) {\n  _inherits(Comments, _BasePlugin);\n\n  var _super = _createSuper(Comments);\n\n  function Comments(hotInstance) {\n    var _this;\n\n    _classCallCheck(this, Comments);\n\n    _this = _super.call(this, hotInstance);\n    /**\n     * Instance of {@link CommentEditor}.\n     *\n     * @private\n     * @type {CommentEditor}\n     */\n\n    _this.editor = null;\n    /**\n     * Instance of {@link DisplaySwitch}.\n     *\n     * @private\n     * @type {DisplaySwitch}\n     */\n\n    _this.displaySwitch = null;\n    /**\n     * Instance of {@link EventManager}.\n     *\n     * @private\n     * @type {EventManager}\n     */\n\n    _this.eventManager = null;\n    /**\n     * Current cell range, an object with `from` property, with `row` and `col` properties (e.q. `{from: {row: 1, col: 6}}`).\n     *\n     * @type {object}\n     */\n\n    _this.range = {};\n    /**\n     * Prevents showing/hiding editor that reacts on the logic triggered by the \"mouseover\" events.\n     *\n     * @private\n     * @type {boolean}\n     */\n\n    _this.preventEditorAutoSwitch = false;\n    privatePool.set(_assertThisInitialized(_this), {\n      tempEditorDimensions: {},\n      cellBelowCursor: null\n    });\n    return _this;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` than the {@link Comments#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n\n\n  _createClass(Comments, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return !!this.hot.getSettings()[PLUGIN_KEY];\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n\n      if (this.enabled) {\n        return;\n      }\n\n      if (!this.editor) {\n        this.editor = new CommentEditor(this.hot.rootDocument);\n      }\n\n      if (!this.eventManager) {\n        this.eventManager = new EventManager(this);\n      }\n\n      if (!this.displaySwitch) {\n        this.displaySwitch = new DisplaySwitch(this.getDisplayDelaySetting());\n      }\n\n      this.addHook('afterContextMenuDefaultOptions', function (options) {\n        return _this2.addToContextMenu(options);\n      });\n      this.addHook('afterRenderer', function (TD, row, col, prop, value, cellProperties) {\n        return _this2.onAfterRenderer(TD, cellProperties);\n      });\n      this.addHook('afterScrollHorizontally', function () {\n        return _this2.hide();\n      });\n      this.addHook('afterScrollVertically', function () {\n        return _this2.hide();\n      });\n      this.addHook('afterBeginEditing', function () {\n        return _this2.hide();\n      });\n      this.displaySwitch.addLocalHook('hide', function () {\n        return _this2.hide();\n      });\n      this.displaySwitch.addLocalHook('show', function (row, col) {\n        return _this2.showAtCell(row, col);\n      });\n      this.registerListeners();\n\n      _get(_getPrototypeOf(Comments.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Updates the plugin state. This method is executed when {@link Core#updateSettings} is invoked.\n     */\n\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n\n      _get(_getPrototypeOf(Comments.prototype), \"updatePlugin\", this).call(this);\n\n      this.displaySwitch.updateDelay(this.getDisplayDelaySetting());\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      _get(_getPrototypeOf(Comments.prototype), \"disablePlugin\", this).call(this);\n    }\n    /**\n     * Registers all necessary DOM listeners.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"registerListeners\",\n    value: function registerListeners() {\n      var _this3 = this;\n\n      var rootDocument = this.hot.rootDocument;\n      this.eventManager.addEventListener(rootDocument, 'mouseover', function (event) {\n        return _this3.onMouseOver(event);\n      });\n      this.eventManager.addEventListener(rootDocument, 'mousedown', function (event) {\n        return _this3.onMouseDown(event);\n      });\n      this.eventManager.addEventListener(rootDocument, 'mouseup', function () {\n        return _this3.onMouseUp();\n      });\n      this.eventManager.addEventListener(this.editor.getInputElement(), 'blur', function () {\n        return _this3.onEditorBlur();\n      });\n      this.eventManager.addEventListener(this.editor.getInputElement(), 'mousedown', function (event) {\n        return _this3.onEditorMouseDown(event);\n      });\n      this.eventManager.addEventListener(this.editor.getInputElement(), 'mouseup', function (event) {\n        return _this3.onEditorMouseUp(event);\n      });\n    }\n    /**\n     * Sets the current cell range to be able to use general methods like {@link Comments#setComment}, {@link Comments#removeComment}, {@link Comments#show}.\n     *\n     * @param {object} range Object with `from` property, each with `row` and `col` properties.\n     */\n\n  }, {\n    key: \"setRange\",\n    value: function setRange(range) {\n      this.range = range;\n    }\n    /**\n     * Clears the currently selected cell.\n     */\n\n  }, {\n    key: \"clearRange\",\n    value: function clearRange() {\n      this.range = {};\n    }\n    /**\n     * Checks if the event target is a cell containing a comment.\n     *\n     * @private\n     * @param {Event} event DOM event.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"targetIsCellWithComment\",\n    value: function targetIsCellWithComment(event) {\n      var closestCell = closest(event.target, 'TD', 'TBODY');\n      return !!(closestCell && hasClass(closestCell, 'htCommentCell') && closest(closestCell, [this.hot.rootElement]));\n    }\n    /**\n     * Checks if the event target is a comment textarea.\n     *\n     * @private\n     * @param {Event} event DOM event.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"targetIsCommentTextArea\",\n    value: function targetIsCommentTextArea(event) {\n      return this.editor.getInputElement() === event.target;\n    }\n    /**\n     * Sets a comment for a cell according to the previously set range (see {@link Comments#setRange}).\n     *\n     * @param {string} value Comment contents.\n     */\n\n  }, {\n    key: \"setComment\",\n    value: function setComment(value) {\n      if (!this.range.from) {\n        throw new Error('Before using this method, first set cell range (hot.getPlugin(\"comment\").setRange())');\n      }\n\n      var editorValue = this.editor.getValue();\n      var comment = '';\n\n      if (value !== null && value !== void 0) {\n        comment = value;\n      } else if (editorValue !== null && editorValue !== void 0) {\n        comment = editorValue;\n      }\n\n      var row = this.range.from.row;\n      var col = this.range.from.col;\n      this.updateCommentMeta(row, col, _defineProperty({}, META_COMMENT_VALUE, comment));\n      this.hot.render();\n    }\n    /**\n     * Sets a comment for a specified cell.\n     *\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @param {string} value Comment contents.\n     */\n\n  }, {\n    key: \"setCommentAtCell\",\n    value: function setCommentAtCell(row, column, value) {\n      this.setRange({\n        from: new CellCoords(row, column)\n      });\n      this.setComment(value);\n    }\n    /**\n     * Removes a comment from a cell according to previously set range (see {@link Comments#setRange}).\n     *\n     * @param {boolean} [forceRender=true] If set to `true`, the table will be re-rendered at the end of the operation.\n     */\n\n  }, {\n    key: \"removeComment\",\n    value: function removeComment() {\n      var forceRender = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      if (!this.range.from) {\n        throw new Error('Before using this method, first set cell range (hot.getPlugin(\"comment\").setRange())');\n      }\n\n      this.hot.setCellMeta(this.range.from.row, this.range.from.col, META_COMMENT);\n\n      if (forceRender) {\n        this.hot.render();\n      }\n\n      this.hide();\n    }\n    /**\n     * Removes a comment from a specified cell.\n     *\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @param {boolean} [forceRender=true] If `true`, the table will be re-rendered at the end of the operation.\n     */\n\n  }, {\n    key: \"removeCommentAtCell\",\n    value: function removeCommentAtCell(row, column) {\n      var forceRender = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      this.setRange({\n        from: new CellCoords(row, column)\n      });\n      this.removeComment(forceRender);\n    }\n    /**\n     * Gets comment from a cell according to previously set range (see {@link Comments#setRange}).\n     *\n     * @returns {string|undefined} Returns a content of the comment.\n     */\n\n  }, {\n    key: \"getComment\",\n    value: function getComment() {\n      var row = this.range.from.row;\n      var column = this.range.from.col;\n      return this.getCommentMeta(row, column, META_COMMENT_VALUE);\n    }\n    /**\n     * Gets comment from a cell at the provided coordinates.\n     *\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @returns {string|undefined} Returns a content of the comment.\n     */\n\n  }, {\n    key: \"getCommentAtCell\",\n    value: function getCommentAtCell(row, column) {\n      return this.getCommentMeta(row, column, META_COMMENT_VALUE);\n    }\n    /**\n     * Shows the comment editor accordingly to the previously set range (see {@link Comments#setRange}).\n     *\n     * @returns {boolean} Returns `true` if comment editor was shown.\n     */\n\n  }, {\n    key: \"show\",\n    value: function show() {\n      if (!this.range.from) {\n        throw new Error('Before using this method, first set cell range (hot.getPlugin(\"comment\").setRange())');\n      }\n\n      var _this$range$from = this.range.from,\n          row = _this$range$from.row,\n          col = _this$range$from.col;\n\n      if (row < 0 || row > this.hot.countSourceRows() - 1 || col < 0 || col > this.hot.countSourceCols() - 1) {\n        return false;\n      }\n\n      var meta = this.hot.getCellMeta(this.range.from.row, this.range.from.col);\n      this.refreshEditor(true);\n      this.editor.setValue(meta[META_COMMENT] ? meta[META_COMMENT][META_COMMENT_VALUE] : null || '');\n\n      if (this.editor.hidden) {\n        this.editor.show();\n      }\n\n      return true;\n    }\n    /**\n     * Shows comment editor according to cell coordinates.\n     *\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @returns {boolean} Returns `true` if comment editor was shown.\n     */\n\n  }, {\n    key: \"showAtCell\",\n    value: function showAtCell(row, column) {\n      this.setRange({\n        from: new CellCoords(row, column)\n      });\n      return this.show();\n    }\n    /**\n     * Hides the comment editor.\n     */\n\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this.editor.hide();\n    }\n    /**\n     * Refreshes comment editor position and styling.\n     *\n     * @param {boolean} [force=false] If `true` then recalculation will be forced.\n     */\n\n  }, {\n    key: \"refreshEditor\",\n    value: function refreshEditor() {\n      var _renderableRow, _renderableColumn;\n\n      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (!force && (!this.range.from || !this.editor.isVisible())) {\n        return;\n      }\n\n      var _this$hot = this.hot,\n          rowIndexMapper = _this$hot.rowIndexMapper,\n          columnIndexMapper = _this$hot.columnIndexMapper;\n      var _this$range$from2 = this.range.from,\n          visualRow = _this$range$from2.row,\n          visualColumn = _this$range$from2.col;\n      var renderableRow = rowIndexMapper.getRenderableFromVisualIndex(visualRow);\n      var renderableColumn = columnIndexMapper.getRenderableFromVisualIndex(visualColumn); // Used when the requested row is hidden, and the editor needs to be positioned on the previous row's coords.\n\n      var targetingPreviousRow = renderableRow === null;\n\n      if (renderableRow === null) {\n        renderableRow = rowIndexMapper.getRenderableFromVisualIndex(rowIndexMapper.getFirstNotHiddenIndex(visualRow, -1));\n      }\n\n      if (renderableColumn === null) {\n        renderableColumn = columnIndexMapper.getRenderableFromVisualIndex(columnIndexMapper.getFirstNotHiddenIndex(visualColumn, -1));\n      }\n\n      var isBeforeRenderedRows = renderableRow === null;\n      var isBeforeRenderedColumns = renderableColumn === null;\n      renderableRow = (_renderableRow = renderableRow) !== null && _renderableRow !== void 0 ? _renderableRow : 0;\n      renderableColumn = (_renderableColumn = renderableColumn) !== null && _renderableColumn !== void 0 ? _renderableColumn : 0;\n      var _this$hot2 = this.hot,\n          rootWindow = _this$hot2.rootWindow,\n          wt = _this$hot2.view.wt;\n      var wtTable = wt.wtTable,\n          wtOverlays = wt.wtOverlays,\n          wtViewport = wt.wtViewport;\n      var scrollableElement = wtOverlays.scrollableElement;\n      var TD = wtTable.getCell({\n        row: renderableRow,\n        col: renderableColumn\n      });\n      var cellOffset = offset(TD);\n      var lastColWidth = isBeforeRenderedColumns ? 0 : wtTable.getStretchedColumnWidth(renderableColumn);\n      var lastRowHeight = targetingPreviousRow && !isBeforeRenderedRows ? outerHeight(TD) : 0;\n      var cellTopOffset = cellOffset.top;\n      var cellLeftOffset = cellOffset.left;\n\n      if (wtViewport.hasVerticalScroll() && scrollableElement !== rootWindow) {\n        cellTopOffset -= wtOverlays.topOverlay.getScrollPosition();\n      }\n\n      if (wtViewport.hasHorizontalScroll() && scrollableElement !== rootWindow) {\n        cellLeftOffset -= wtOverlays.leftOverlay.getScrollPosition();\n      }\n\n      var x = cellLeftOffset + lastColWidth;\n      var y = cellTopOffset + lastRowHeight;\n      var commentStyle = this.getCommentMeta(visualRow, visualColumn, META_STYLE);\n      var readOnly = this.getCommentMeta(visualRow, visualColumn, META_READONLY);\n\n      if (commentStyle) {\n        this.editor.setSize(commentStyle.width, commentStyle.height);\n      } else {\n        this.editor.resetSize();\n      }\n\n      this.editor.setReadOnlyState(readOnly);\n      this.editor.setPosition(x, y);\n    }\n    /**\n     * Checks if there is a comment for selected range.\n     *\n     * @private\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"checkSelectionCommentsConsistency\",\n    value: function checkSelectionCommentsConsistency() {\n      var selected = this.hot.getSelectedRangeLast();\n\n      if (!selected) {\n        return false;\n      }\n\n      var hasComment = false;\n      var cell = selected.getTopLeftCorner(); // IN EXCEL THERE IS COMMENT ONLY FOR TOP LEFT CELL IN SELECTION\n\n      if (this.getCommentMeta(cell.row, cell.col, META_COMMENT_VALUE)) {\n        hasComment = true;\n      }\n\n      return hasComment;\n    }\n    /**\n     * Sets or update the comment-related cell meta.\n     *\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @param {object} metaObject Object defining all the comment-related meta information.\n     */\n\n  }, {\n    key: \"updateCommentMeta\",\n    value: function updateCommentMeta(row, column, metaObject) {\n      var oldComment = this.hot.getCellMeta(row, column)[META_COMMENT];\n      var newComment;\n\n      if (oldComment) {\n        newComment = deepClone(oldComment);\n        deepExtend(newComment, metaObject);\n      } else {\n        newComment = metaObject;\n      }\n\n      this.hot.setCellMeta(row, column, META_COMMENT, newComment);\n    }\n    /**\n     * Gets the comment related meta information.\n     *\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @param {string} property Cell meta property.\n     * @returns {Mixed}\n     */\n\n  }, {\n    key: \"getCommentMeta\",\n    value: function getCommentMeta(row, column, property) {\n      var cellMeta = this.hot.getCellMeta(row, column);\n\n      if (!cellMeta[META_COMMENT]) {\n        return void 0;\n      }\n\n      return cellMeta[META_COMMENT][property];\n    }\n    /**\n     * `mousedown` event callback.\n     *\n     * @private\n     * @param {MouseEvent} event The `mousedown` event.\n     */\n\n  }, {\n    key: \"onMouseDown\",\n    value: function onMouseDown(event) {\n      if (!this.hot.view || !this.hot.view.wt) {\n        return;\n      }\n\n      if (!this.preventEditorAutoSwitch && !this.targetIsCommentTextArea(event)) {\n        var eventCell = closest(event.target, 'TD', 'TBODY');\n        var coordinates = null;\n\n        if (eventCell) {\n          coordinates = this.hot.getCoords(eventCell);\n        }\n\n        if (!eventCell || this.range.from && coordinates && (this.range.from.row !== coordinates.row || this.range.from.col !== coordinates.col)) {\n          this.hide();\n        }\n      }\n    }\n    /**\n     * `mouseover` event callback.\n     *\n     * @private\n     * @param {MouseEvent} event The `mouseover` event.\n     */\n\n  }, {\n    key: \"onMouseOver\",\n    value: function onMouseOver(event) {\n      var priv = privatePool.get(this);\n      var rootDocument = this.hot.rootDocument;\n\n      if (this.preventEditorAutoSwitch || this.editor.isFocused() || hasClass(event.target, 'wtBorder') || priv.cellBelowCursor === event.target || !this.editor) {\n        return;\n      }\n\n      priv.cellBelowCursor = rootDocument.elementFromPoint(event.clientX, event.clientY);\n\n      if (this.targetIsCellWithComment(event)) {\n        var range = new CellRange(this.hot.getCoords(event.target));\n        this.displaySwitch.show(range);\n      } else if (isChildOf(event.target, rootDocument) && !this.targetIsCommentTextArea(event)) {\n        this.displaySwitch.hide();\n      }\n    }\n    /**\n     * `mouseup` event callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onMouseUp\",\n    value: function onMouseUp() {\n      this.preventEditorAutoSwitch = false;\n    }\n    /**\n     * The `afterRenderer` hook callback.\n     *\n     * @private\n     * @param {HTMLTableCellElement} TD The rendered `TD` element.\n     * @param {object} cellProperties The rendered cell's property object.\n     */\n\n  }, {\n    key: \"onAfterRenderer\",\n    value: function onAfterRenderer(TD, cellProperties) {\n      if (cellProperties[META_COMMENT] && cellProperties[META_COMMENT][META_COMMENT_VALUE]) {\n        addClass(TD, cellProperties.commentedCellClassName);\n      }\n    }\n    /**\n     * `blur` event callback for the comment editor.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onEditorBlur\",\n    value: function onEditorBlur() {\n      this.setComment();\n    }\n    /**\n     * `mousedown` hook. Along with `onEditorMouseUp` used to simulate the textarea resizing event.\n     *\n     * @private\n     * @param {MouseEvent} event The `mousedown` event.\n     */\n\n  }, {\n    key: \"onEditorMouseDown\",\n    value: function onEditorMouseDown(event) {\n      var priv = privatePool.get(this);\n      priv.tempEditorDimensions = {\n        width: outerWidth(event.target),\n        height: outerHeight(event.target)\n      };\n    }\n    /**\n     * `mouseup` hook. Along with `onEditorMouseDown` used to simulate the textarea resizing event.\n     *\n     * @private\n     * @param {MouseEvent} event The `mouseup` event.\n     */\n\n  }, {\n    key: \"onEditorMouseUp\",\n    value: function onEditorMouseUp(event) {\n      var priv = privatePool.get(this);\n      var currentWidth = outerWidth(event.target);\n      var currentHeight = outerHeight(event.target);\n\n      if (currentWidth !== priv.tempEditorDimensions.width + 1 || currentHeight !== priv.tempEditorDimensions.height + 2) {\n        this.updateCommentMeta(this.range.from.row, this.range.from.col, _defineProperty({}, META_STYLE, {\n          width: currentWidth,\n          height: currentHeight\n        }));\n      }\n    }\n    /**\n     * Context Menu's \"Add comment\" callback. Results in showing the comment editor.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onContextMenuAddComment\",\n    value: function onContextMenuAddComment() {\n      var coords = this.hot.getSelectedRangeLast();\n      this.preventEditorAutoSwitch = true;\n      this.displaySwitch.cancelHiding();\n      this.setRange({\n        from: coords.highlight\n      });\n      this.show();\n      this.hot.deselectCell();\n      this.editor.focus();\n    }\n    /**\n     * Context Menu's \"remove comment\" callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onContextMenuRemoveComment\",\n    value: function onContextMenuRemoveComment() {\n      var _this4 = this;\n\n      var coords = this.hot.getSelectedRangeLast();\n      this.preventEditorAutoSwitch = true;\n      coords.forAll(function (row, column) {\n        if (row >= 0 && column >= 0) {\n          _this4.removeCommentAtCell(row, column, false);\n        }\n      });\n      this.hot.render();\n    }\n    /**\n     * Context Menu's \"make comment read-only\" callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onContextMenuMakeReadOnly\",\n    value: function onContextMenuMakeReadOnly() {\n      var _this5 = this;\n\n      var coords = this.hot.getSelectedRangeLast();\n      this.preventEditorAutoSwitch = true;\n      coords.forAll(function (row, column) {\n        if (row >= 0 && column >= 0) {\n          var currentState = !!_this5.getCommentMeta(row, column, META_READONLY);\n\n          _this5.updateCommentMeta(row, column, _defineProperty({}, META_READONLY, !currentState));\n        }\n      });\n    }\n    /**\n     * Add Comments plugin options to the Context Menu.\n     *\n     * @private\n     * @param {object} defaultOptions The menu options.\n     */\n\n  }, {\n    key: \"addToContextMenu\",\n    value: function addToContextMenu(defaultOptions) {\n      var _this6 = this;\n\n      var isThereAnyCellRendered = function isThereAnyCellRendered() {\n        return _this6.hot.rowIndexMapper.getRenderableIndexesLength() > 0 && _this6.hot.columnIndexMapper.getRenderableIndexesLength() > 0;\n      };\n\n      defaultOptions.items.push({\n        name: '---------'\n      }, {\n        key: 'commentsAddEdit',\n        name: function name() {\n          if (_this6.checkSelectionCommentsConsistency()) {\n            return _this6.hot.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_EDIT_COMMENT);\n          }\n\n          return _this6.hot.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_ADD_COMMENT);\n        },\n        callback: function callback() {\n          return _this6.onContextMenuAddComment();\n        },\n        disabled: function disabled() {\n          if (!isThereAnyCellRendered()) {\n            return true;\n          }\n\n          return !(_this6.hot.getSelectedLast() && !_this6.hot.selection.isSelectedByCorner());\n        }\n      }, {\n        key: 'commentsRemove',\n        name: function name() {\n          return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_REMOVE_COMMENT);\n        },\n        callback: function callback() {\n          return _this6.onContextMenuRemoveComment();\n        },\n        disabled: function disabled() {\n          if (!isThereAnyCellRendered()) {\n            return true;\n          }\n\n          return !(_this6.hot.getSelectedLast() && !_this6.hot.selection.isSelectedByCorner());\n        }\n      }, {\n        key: 'commentsReadOnly',\n        name: function name() {\n          var _this7 = this;\n\n          var label = this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_READ_ONLY_COMMENT);\n          var hasProperty = checkSelectionConsistency(this.getSelectedRangeLast(), function (row, col) {\n            var readOnlyProperty = _this7.getCellMeta(row, col)[META_COMMENT];\n\n            if (readOnlyProperty) {\n              readOnlyProperty = readOnlyProperty[META_READONLY];\n            }\n\n            if (readOnlyProperty) {\n              return true;\n            }\n          });\n\n          if (hasProperty) {\n            label = markLabelAsSelected(label);\n          }\n\n          return label;\n        },\n        callback: function callback() {\n          return _this6.onContextMenuMakeReadOnly();\n        },\n        disabled: function disabled() {\n          if (!isThereAnyCellRendered()) {\n            return true;\n          }\n\n          return !(_this6.hot.getSelectedLast() && !_this6.hot.selection.isSelectedByCorner()) || !_this6.checkSelectionCommentsConsistency();\n        }\n      });\n    }\n    /**\n     * Get `displayDelay` setting of comment plugin.\n     *\n     * @private\n     * @returns {number|undefined}\n     */\n\n  }, {\n    key: \"getDisplayDelaySetting\",\n    value: function getDisplayDelaySetting() {\n      var commentSetting = this.hot.getSettings()[PLUGIN_KEY];\n\n      if (isObject(commentSetting)) {\n        return commentSetting.displayDelay;\n      }\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.editor) {\n        this.editor.destroy();\n      }\n\n      if (this.displaySwitch) {\n        this.displaySwitch.destroy();\n      }\n\n      _get(_getPrototypeOf(Comments.prototype), \"destroy\", this).call(this);\n    }\n  }], [{\n    key: \"PLUGIN_KEY\",\n    get: function get() {\n      return PLUGIN_KEY;\n    }\n  }, {\n    key: \"PLUGIN_PRIORITY\",\n    get: function get() {\n      return PLUGIN_PRIORITY;\n    }\n  }]);\n\n  return Comments;\n}(BasePlugin);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
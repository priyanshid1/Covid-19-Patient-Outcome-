{"ast":null,"code":"export var command = {\n  name: 'extendCellsSelectionToRows',\n  callback: function callback(hot) {\n    var _hot$getSelectedRange = hot.getSelectedRangeLast(),\n      highlight = _hot$getSelectedRange.highlight,\n      from = _hot$getSelectedRange.from,\n      to = _hot$getSelectedRange.to;\n    if (hot.selection.isSelectedByColumnHeader()) {\n      hot.selection.selectAll(true, true);\n    } else {\n      hot.selectRows(from.row, to.row, highlight);\n    }\n  }\n};","map":{"version":3,"names":["command","name","callback","hot","_hot$getSelectedRange","getSelectedRangeLast","highlight","from","to","selection","isSelectedByColumnHeader","selectAll","selectRows","row"],"sources":["/Users/priyadeliwala/node_modules/handsontable/shortcutContexts/commands/extendCellsSelection/toRows.mjs"],"sourcesContent":["export const command = {\n  name: 'extendCellsSelectionToRows',\n  callback(hot) {\n    const {\n      highlight,\n      from,\n      to\n    } = hot.getSelectedRangeLast();\n    if (hot.selection.isSelectedByColumnHeader()) {\n      hot.selection.selectAll(true, true);\n    } else {\n      hot.selectRows(from.row, to.row, highlight);\n    }\n  }\n};"],"mappings":"AAAA,OAAO,IAAMA,OAAO,GAAG;EACrBC,IAAI,EAAE,4BAA4B;EAClCC,QAAQ,WAARA,QAAQA,CAACC,GAAG,EAAE;IACZ,IAAAC,qBAAA,GAIID,GAAG,CAACE,oBAAoB,CAAC,CAAC;MAH5BC,SAAS,GAAAF,qBAAA,CAATE,SAAS;MACTC,IAAI,GAAAH,qBAAA,CAAJG,IAAI;MACJC,EAAE,GAAAJ,qBAAA,CAAFI,EAAE;IAEJ,IAAIL,GAAG,CAACM,SAAS,CAACC,wBAAwB,CAAC,CAAC,EAAE;MAC5CP,GAAG,CAACM,SAAS,CAACE,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC;IACrC,CAAC,MAAM;MACLR,GAAG,CAACS,UAAU,CAACL,IAAI,CAACM,GAAG,EAAEL,EAAE,CAACK,GAAG,EAAEP,SAAS,CAAC;IAC7C;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
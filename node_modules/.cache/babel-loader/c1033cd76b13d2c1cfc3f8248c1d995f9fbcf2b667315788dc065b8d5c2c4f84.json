{"ast":null,"code":"function _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\nimport { arrayEach, arrayMap } from \"../../../helpers/array.mjs\";\nimport { isObject } from \"../../../helpers/object.mjs\";\nimport { stringify } from \"../../../helpers/mixed.mjs\";\nimport { createDefaultHeaderSettings, createPlaceholderHeaderSettings } from \"./utils.mjs\";\n/**\n * A function that normalizes user-defined settings into one predictable\n * structure. Currently, the developer can declare nested headers by passing\n * the following unstructured (and sometimes uncompleted) array.\n *   [\n *     [{ label: 'A1', colspan: 2 }],\n *     [{ label: true }, 'B2', 4],\n *     [],\n *   ]\n *\n * The normalization process equalizes the length of columns to each header\n * layers to the same length and generates object settings with a common shape.\n * So the above mentioned example will be normalized into this:\n *   [\n *     [\n *       { label: 'A1', colspan: 2, isHidden: false, ... },\n *       { label: '', colspan: 1, isHidden: true, ... },\n *       { label: '', colspan: 1, isHidden: false, ... },\n *     ],\n *     [\n *       { label: 'true', colspan: 1, isHidden: false, ... },\n *       { label: 'B2', colspan: 1, isHidden: false, ... },\n *       { label: '4', colspan: 1, isHidden: false, ... },\n *     ],\n *     [\n *       { label: '', colspan: 1, isHidden: false, ... },\n *       { label: '', colspan: 1, isHidden: false, ... },\n *       { label: '', colspan: 1, isHidden: false, ... },\n *     ],\n *   ]\n *\n * @param {Array[]} sourceSettings An array with defined nested headers settings.\n * @param {number} [columnsLimit=Infinity] A number of columns to which the structure\n *                                         will be trimmed. While trimming the colspan\n *                                         values are adjusted to preserve the original\n *                                         structure.\n * @returns {Array[]}\n */\n\nexport function normalizeSettings(sourceSettings) {\n  var columnsLimit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Infinity;\n  var normalizedSettings = [];\n  if (columnsLimit === 0) {\n    return normalizedSettings;\n  } // Normalize array items (header settings) into one shape - literal object with default props.\n\n  arrayEach(sourceSettings, function (headersSettings) {\n    var columns = [];\n    var columnIndex = 0;\n    normalizedSettings.push(columns);\n    arrayEach(headersSettings, function (sourceHeaderSettings) {\n      var headerSettings = createDefaultHeaderSettings();\n      if (isObject(sourceHeaderSettings)) {\n        var label = sourceHeaderSettings.label,\n          colspan = sourceHeaderSettings.colspan;\n        headerSettings.label = stringify(label);\n        if (typeof colspan === 'number' && colspan > 1) {\n          headerSettings.colspan = colspan;\n          headerSettings.origColspan = colspan;\n        }\n      } else {\n        headerSettings.label = stringify(sourceHeaderSettings);\n      }\n      columnIndex += headerSettings.origColspan;\n      var cancelProcessing = false;\n      if (columnIndex >= columnsLimit) {\n        // Adjust the colspan value to not overlap the columns limit.\n        headerSettings.colspan = headerSettings.origColspan - (columnIndex - columnsLimit);\n        headerSettings.origColspan = headerSettings.colspan;\n        cancelProcessing = true;\n      }\n      columns.push(headerSettings);\n      if (headerSettings.colspan > 1) {\n        for (var i = 0; i < headerSettings.colspan - 1; i++) {\n          columns.push(createPlaceholderHeaderSettings());\n        }\n      }\n      return !cancelProcessing;\n    });\n  });\n  var columnsLength = Math.max.apply(Math, _toConsumableArray(arrayMap(normalizedSettings, function (headersSettings) {\n    return headersSettings.length;\n  }))); // Normalize the length of each header layer to the same columns length.\n\n  arrayEach(normalizedSettings, function (headersSettings) {\n    if (headersSettings.length < columnsLength) {\n      var defaultSettings = arrayMap(new Array(columnsLength - headersSettings.length), function () {\n        return createDefaultHeaderSettings();\n      });\n      headersSettings.splice.apply(headersSettings, [headersSettings.length, 0].concat(_toConsumableArray(defaultSettings)));\n    }\n  });\n  return normalizedSettings;\n}","map":{"version":3,"names":["_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","iter","Symbol","iterator","isArray","len","length","i","arr2","arrayEach","arrayMap","isObject","stringify","createDefaultHeaderSettings","createPlaceholderHeaderSettings","normalizeSettings","sourceSettings","columnsLimit","arguments","undefined","Infinity","normalizedSettings","headersSettings","columns","columnIndex","push","sourceHeaderSettings","headerSettings","label","colspan","origColspan","cancelProcessing","columnsLength","Math","max","apply","defaultSettings","splice","concat"],"sources":["/Users/priyadeliwala/Desktop/sales-dashboard/node_modules/handsontable/plugins/nestedHeaders/stateManager/settingsNormalizer.mjs"],"sourcesContent":["import \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\nimport { arrayEach, arrayMap } from \"../../../helpers/array.mjs\";\nimport { isObject } from \"../../../helpers/object.mjs\";\nimport { stringify } from \"../../../helpers/mixed.mjs\";\nimport { createDefaultHeaderSettings, createPlaceholderHeaderSettings } from \"./utils.mjs\";\n/**\n * A function that normalizes user-defined settings into one predictable\n * structure. Currently, the developer can declare nested headers by passing\n * the following unstructured (and sometimes uncompleted) array.\n *   [\n *     [{ label: 'A1', colspan: 2 }],\n *     [{ label: true }, 'B2', 4],\n *     [],\n *   ]\n *\n * The normalization process equalizes the length of columns to each header\n * layers to the same length and generates object settings with a common shape.\n * So the above mentioned example will be normalized into this:\n *   [\n *     [\n *       { label: 'A1', colspan: 2, isHidden: false, ... },\n *       { label: '', colspan: 1, isHidden: true, ... },\n *       { label: '', colspan: 1, isHidden: false, ... },\n *     ],\n *     [\n *       { label: 'true', colspan: 1, isHidden: false, ... },\n *       { label: 'B2', colspan: 1, isHidden: false, ... },\n *       { label: '4', colspan: 1, isHidden: false, ... },\n *     ],\n *     [\n *       { label: '', colspan: 1, isHidden: false, ... },\n *       { label: '', colspan: 1, isHidden: false, ... },\n *       { label: '', colspan: 1, isHidden: false, ... },\n *     ],\n *   ]\n *\n * @param {Array[]} sourceSettings An array with defined nested headers settings.\n * @param {number} [columnsLimit=Infinity] A number of columns to which the structure\n *                                         will be trimmed. While trimming the colspan\n *                                         values are adjusted to preserve the original\n *                                         structure.\n * @returns {Array[]}\n */\n\nexport function normalizeSettings(sourceSettings) {\n  var columnsLimit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Infinity;\n  var normalizedSettings = [];\n\n  if (columnsLimit === 0) {\n    return normalizedSettings;\n  } // Normalize array items (header settings) into one shape - literal object with default props.\n\n\n  arrayEach(sourceSettings, function (headersSettings) {\n    var columns = [];\n    var columnIndex = 0;\n    normalizedSettings.push(columns);\n    arrayEach(headersSettings, function (sourceHeaderSettings) {\n      var headerSettings = createDefaultHeaderSettings();\n\n      if (isObject(sourceHeaderSettings)) {\n        var label = sourceHeaderSettings.label,\n            colspan = sourceHeaderSettings.colspan;\n        headerSettings.label = stringify(label);\n\n        if (typeof colspan === 'number' && colspan > 1) {\n          headerSettings.colspan = colspan;\n          headerSettings.origColspan = colspan;\n        }\n      } else {\n        headerSettings.label = stringify(sourceHeaderSettings);\n      }\n\n      columnIndex += headerSettings.origColspan;\n      var cancelProcessing = false;\n\n      if (columnIndex >= columnsLimit) {\n        // Adjust the colspan value to not overlap the columns limit.\n        headerSettings.colspan = headerSettings.origColspan - (columnIndex - columnsLimit);\n        headerSettings.origColspan = headerSettings.colspan;\n        cancelProcessing = true;\n      }\n\n      columns.push(headerSettings);\n\n      if (headerSettings.colspan > 1) {\n        for (var i = 0; i < headerSettings.colspan - 1; i++) {\n          columns.push(createPlaceholderHeaderSettings());\n        }\n      }\n\n      return !cancelProcessing;\n    });\n  });\n  var columnsLength = Math.max.apply(Math, _toConsumableArray(arrayMap(normalizedSettings, function (headersSettings) {\n    return headersSettings.length;\n  }))); // Normalize the length of each header layer to the same columns length.\n\n  arrayEach(normalizedSettings, function (headersSettings) {\n    if (headersSettings.length < columnsLength) {\n      var defaultSettings = arrayMap(new Array(columnsLength - headersSettings.length), function () {\n        return createDefaultHeaderSettings();\n      });\n      headersSettings.splice.apply(headersSettings, [headersSettings.length, 0].concat(_toConsumableArray(defaultSettings)));\n    }\n  });\n  return normalizedSettings;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { getValidSelection } from \"../utils.mjs\";\nimport * as C from \"../../../i18n/constants.mjs\";\nexport var KEY = 'col_left';\n/**\n * @returns {object}\n */\n\nexport default function columnLeftItem() {\n  return {\n    key: KEY,\n    name: function name() {\n      return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_INSERT_LEFT);\n    },\n    callback: function callback(key, normalizedSelection) {\n      var isSelectedByCorner = this.selection.isSelectedByCorner();\n      var columnLeft = 0;\n      if (!isSelectedByCorner) {\n        var latestSelection = normalizedSelection[Math.max(normalizedSelection.length - 1, 0)];\n        columnLeft = latestSelection.start.col;\n      }\n      this.alter('insert_col', columnLeft, 1, 'ContextMenu.columnLeft');\n      if (isSelectedByCorner) {\n        this.selectAll();\n      }\n    },\n    disabled: function disabled() {\n      if (!this.isColumnModificationAllowed()) {\n        return true;\n      }\n      var selected = getValidSelection(this);\n      if (!selected) {\n        return true;\n      }\n      if (this.selection.isSelectedByCorner()) {\n        var totalColumns = this.countCols(); // Enable \"Insert column left\" only when there is at least one column.\n\n        return totalColumns === 0;\n      }\n      return this.selection.isSelectedByRowHeader() || this.countCols() >= this.getSettings().maxCols;\n    },\n    hidden: function hidden() {\n      return !this.getSettings().allowInsertColumn;\n    }\n  };\n}","map":{"version":3,"names":["getValidSelection","C","KEY","columnLeftItem","key","name","getTranslatedPhrase","CONTEXTMENU_ITEMS_INSERT_LEFT","callback","normalizedSelection","isSelectedByCorner","selection","columnLeft","latestSelection","Math","max","length","start","col","alter","selectAll","disabled","isColumnModificationAllowed","selected","totalColumns","countCols","isSelectedByRowHeader","getSettings","maxCols","hidden","allowInsertColumn"],"sources":["/Users/priyadeliwala/Desktop/sales-dashboard/node_modules/handsontable/plugins/contextMenu/predefinedItems/columnLeft.mjs"],"sourcesContent":["import { getValidSelection } from \"../utils.mjs\";\nimport * as C from \"../../../i18n/constants.mjs\";\nexport var KEY = 'col_left';\n/**\n * @returns {object}\n */\n\nexport default function columnLeftItem() {\n  return {\n    key: KEY,\n    name: function name() {\n      return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_INSERT_LEFT);\n    },\n    callback: function callback(key, normalizedSelection) {\n      var isSelectedByCorner = this.selection.isSelectedByCorner();\n      var columnLeft = 0;\n\n      if (!isSelectedByCorner) {\n        var latestSelection = normalizedSelection[Math.max(normalizedSelection.length - 1, 0)];\n        columnLeft = latestSelection.start.col;\n      }\n\n      this.alter('insert_col', columnLeft, 1, 'ContextMenu.columnLeft');\n\n      if (isSelectedByCorner) {\n        this.selectAll();\n      }\n    },\n    disabled: function disabled() {\n      if (!this.isColumnModificationAllowed()) {\n        return true;\n      }\n\n      var selected = getValidSelection(this);\n\n      if (!selected) {\n        return true;\n      }\n\n      if (this.selection.isSelectedByCorner()) {\n        var totalColumns = this.countCols(); // Enable \"Insert column left\" only when there is at least one column.\n\n        return totalColumns === 0;\n      }\n\n      return this.selection.isSelectedByRowHeader() || this.countCols() >= this.getSettings().maxCols;\n    },\n    hidden: function hidden() {\n      return !this.getSettings().allowInsertColumn;\n    }\n  };\n}"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,cAAc;AAChD,OAAO,KAAKC,CAAC,MAAM,6BAA6B;AAChD,OAAO,IAAIC,GAAG,GAAG,UAAU;AAC3B;AACA;AACA;;AAEA,eAAe,SAASC,cAAcA,CAAA,EAAG;EACvC,OAAO;IACLC,GAAG,EAAEF,GAAG;IACRG,IAAI,EAAE,SAASA,IAAIA,CAAA,EAAG;MACpB,OAAO,IAAI,CAACC,mBAAmB,CAACL,CAAC,CAACM,6BAA6B,CAAC;IAClE,CAAC;IACDC,QAAQ,EAAE,SAASA,QAAQA,CAACJ,GAAG,EAAEK,mBAAmB,EAAE;MACpD,IAAIC,kBAAkB,GAAG,IAAI,CAACC,SAAS,CAACD,kBAAkB,CAAC,CAAC;MAC5D,IAAIE,UAAU,GAAG,CAAC;MAElB,IAAI,CAACF,kBAAkB,EAAE;QACvB,IAAIG,eAAe,GAAGJ,mBAAmB,CAACK,IAAI,CAACC,GAAG,CAACN,mBAAmB,CAACO,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;QACtFJ,UAAU,GAAGC,eAAe,CAACI,KAAK,CAACC,GAAG;MACxC;MAEA,IAAI,CAACC,KAAK,CAAC,YAAY,EAAEP,UAAU,EAAE,CAAC,EAAE,wBAAwB,CAAC;MAEjE,IAAIF,kBAAkB,EAAE;QACtB,IAAI,CAACU,SAAS,CAAC,CAAC;MAClB;IACF,CAAC;IACDC,QAAQ,EAAE,SAASA,QAAQA,CAAA,EAAG;MAC5B,IAAI,CAAC,IAAI,CAACC,2BAA2B,CAAC,CAAC,EAAE;QACvC,OAAO,IAAI;MACb;MAEA,IAAIC,QAAQ,GAAGvB,iBAAiB,CAAC,IAAI,CAAC;MAEtC,IAAI,CAACuB,QAAQ,EAAE;QACb,OAAO,IAAI;MACb;MAEA,IAAI,IAAI,CAACZ,SAAS,CAACD,kBAAkB,CAAC,CAAC,EAAE;QACvC,IAAIc,YAAY,GAAG,IAAI,CAACC,SAAS,CAAC,CAAC,CAAC,CAAC;;QAErC,OAAOD,YAAY,KAAK,CAAC;MAC3B;MAEA,OAAO,IAAI,CAACb,SAAS,CAACe,qBAAqB,CAAC,CAAC,IAAI,IAAI,CAACD,SAAS,CAAC,CAAC,IAAI,IAAI,CAACE,WAAW,CAAC,CAAC,CAACC,OAAO;IACjG,CAAC;IACDC,MAAM,EAAE,SAASA,MAAMA,CAAA,EAAG;MACxB,OAAO,CAAC,IAAI,CAACF,WAAW,CAAC,CAAC,CAACG,iBAAiB;IAC9C;EACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
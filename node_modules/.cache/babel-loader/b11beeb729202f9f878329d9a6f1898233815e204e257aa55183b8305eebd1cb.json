{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nimport { rangeEach } from \"../../helpers/number.mjs\";\nimport { mixin } from \"../../helpers/object.mjs\";\nimport { isFunction } from \"../../helpers/function.mjs\";\nimport localHooks from \"../../mixins/localHooks.mjs\";\n/**\n * Map for storing mappings from an index to a value.\n */\n\nexport var IndexMap = /*#__PURE__*/function () {\n  function IndexMap() {\n    var initValueOrFn = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    _classCallCheck(this, IndexMap);\n\n    /**\n     * List of values for particular indexes.\n     *\n     * @private\n     * @type {Array}\n     */\n    this.indexedValues = [];\n    /**\n     * Initial value or function for each existing index.\n     *\n     * @private\n     * @type {*}\n     */\n\n    this.initValueOrFn = initValueOrFn;\n  }\n  /**\n   * Get full list of values for particular indexes.\n   *\n   * @returns {Array}\n   */\n\n  _createClass(IndexMap, [{\n    key: \"getValues\",\n    value: function getValues() {\n      return this.indexedValues;\n    }\n    /**\n     * Get value for the particular index.\n     *\n     * @param {number} index Index for which value is got.\n     * @returns {*}\n     */\n  }, {\n    key: \"getValueAtIndex\",\n    value: function getValueAtIndex(index) {\n      var values = this.indexedValues;\n      if (index < values.length) {\n        return values[index];\n      }\n    }\n    /**\n     * Set new values for particular indexes.\n     *\n     * Note: Please keep in mind that `change` hook triggered by the method may not update cache of a collection immediately.\n     *\n     * @param {Array} values List of set values.\n     */\n  }, {\n    key: \"setValues\",\n    value: function setValues(values) {\n      this.indexedValues = values.slice();\n      this.runLocalHooks('change');\n    }\n    /**\n     * Set new value for the particular index.\n     *\n     * @param {number} index The index.\n     * @param {*} value The value to save.\n     *\n     * Note: Please keep in mind that it is not possible to set value beyond the map (not respecting already set\n     * map's size). Please use the `setValues` method when you would like to extend the map.\n     * Note: Please keep in mind that `change` hook triggered by the method may not update cache of a collection immediately.\n     *\n     * @returns {boolean}\n     */\n  }, {\n    key: \"setValueAtIndex\",\n    value: function setValueAtIndex(index, value) {\n      if (index < this.indexedValues.length) {\n        this.indexedValues[index] = value;\n        this.runLocalHooks('change');\n        return true;\n      }\n      return false;\n    }\n    /**\n     * Clear all values to the defaults.\n     */\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.setDefaultValues();\n    }\n    /**\n     * Get length of the index map.\n     *\n     * @returns {number}\n     */\n  }, {\n    key: \"getLength\",\n    value: function getLength() {\n      return this.getValues().length;\n    }\n    /**\n     * Set default values for elements from `0` to `n`, where `n` is equal to the handled variable.\n     *\n     * Note: Please keep in mind that `change` hook triggered by the method may not update cache of a collection immediately.\n     *\n     * @private\n     * @param {number} [length] Length of list.\n     */\n  }, {\n    key: \"setDefaultValues\",\n    value: function setDefaultValues() {\n      var _this = this;\n      var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.indexedValues.length;\n      this.indexedValues.length = 0;\n      if (isFunction(this.initValueOrFn)) {\n        rangeEach(length - 1, function (index) {\n          return _this.indexedValues.push(_this.initValueOrFn(index));\n        });\n      } else {\n        rangeEach(length - 1, function () {\n          return _this.indexedValues.push(_this.initValueOrFn);\n        });\n      }\n      this.runLocalHooks('change');\n    }\n    /**\n     * Initialize list with default values for particular indexes.\n     *\n     * @private\n     * @param {number} length New length of indexed list.\n     * @returns {IndexMap}\n     */\n  }, {\n    key: \"init\",\n    value: function init(length) {\n      this.setDefaultValues(length);\n      this.runLocalHooks('init');\n      return this;\n    }\n    /**\n     * Add values to the list.\n     *\n     * Note: Please keep in mind that `change` hook triggered by the method may not update cache of a collection immediately.\n     *\n     * @private\n     */\n  }, {\n    key: \"insert\",\n    value: function insert() {\n      this.runLocalHooks('change');\n    }\n    /**\n     * Remove values from the list.\n     *\n     * Note: Please keep in mind that `change` hook triggered by the method may not update cache of a collection immediately.\n     *\n     * @private\n     */\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      this.runLocalHooks('change');\n    }\n    /**\n     * Destroys the Map instance.\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.clearLocalHooks();\n      this.indexedValues = null;\n      this.initValueOrFn = null;\n    }\n  }]);\n  return IndexMap;\n}();\nmixin(IndexMap, localHooks);","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","rangeEach","mixin","isFunction","localHooks","IndexMap","initValueOrFn","arguments","undefined","indexedValues","value","getValues","getValueAtIndex","index","values","setValues","slice","runLocalHooks","setValueAtIndex","clear","setDefaultValues","getLength","_this","push","init","insert","remove","destroy","clearLocalHooks"],"sources":["/Users/priyadeliwala/Desktop/sales-dashboard/node_modules/handsontable/translations/maps/indexMap.mjs"],"sourcesContent":["import \"core-js/modules/es.array.slice.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nimport { rangeEach } from \"../../helpers/number.mjs\";\nimport { mixin } from \"../../helpers/object.mjs\";\nimport { isFunction } from \"../../helpers/function.mjs\";\nimport localHooks from \"../../mixins/localHooks.mjs\";\n/**\n * Map for storing mappings from an index to a value.\n */\n\nexport var IndexMap = /*#__PURE__*/function () {\n  function IndexMap() {\n    var initValueOrFn = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n    _classCallCheck(this, IndexMap);\n\n    /**\n     * List of values for particular indexes.\n     *\n     * @private\n     * @type {Array}\n     */\n    this.indexedValues = [];\n    /**\n     * Initial value or function for each existing index.\n     *\n     * @private\n     * @type {*}\n     */\n\n    this.initValueOrFn = initValueOrFn;\n  }\n  /**\n   * Get full list of values for particular indexes.\n   *\n   * @returns {Array}\n   */\n\n\n  _createClass(IndexMap, [{\n    key: \"getValues\",\n    value: function getValues() {\n      return this.indexedValues;\n    }\n    /**\n     * Get value for the particular index.\n     *\n     * @param {number} index Index for which value is got.\n     * @returns {*}\n     */\n\n  }, {\n    key: \"getValueAtIndex\",\n    value: function getValueAtIndex(index) {\n      var values = this.indexedValues;\n\n      if (index < values.length) {\n        return values[index];\n      }\n    }\n    /**\n     * Set new values for particular indexes.\n     *\n     * Note: Please keep in mind that `change` hook triggered by the method may not update cache of a collection immediately.\n     *\n     * @param {Array} values List of set values.\n     */\n\n  }, {\n    key: \"setValues\",\n    value: function setValues(values) {\n      this.indexedValues = values.slice();\n      this.runLocalHooks('change');\n    }\n    /**\n     * Set new value for the particular index.\n     *\n     * @param {number} index The index.\n     * @param {*} value The value to save.\n     *\n     * Note: Please keep in mind that it is not possible to set value beyond the map (not respecting already set\n     * map's size). Please use the `setValues` method when you would like to extend the map.\n     * Note: Please keep in mind that `change` hook triggered by the method may not update cache of a collection immediately.\n     *\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"setValueAtIndex\",\n    value: function setValueAtIndex(index, value) {\n      if (index < this.indexedValues.length) {\n        this.indexedValues[index] = value;\n        this.runLocalHooks('change');\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Clear all values to the defaults.\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.setDefaultValues();\n    }\n    /**\n     * Get length of the index map.\n     *\n     * @returns {number}\n     */\n\n  }, {\n    key: \"getLength\",\n    value: function getLength() {\n      return this.getValues().length;\n    }\n    /**\n     * Set default values for elements from `0` to `n`, where `n` is equal to the handled variable.\n     *\n     * Note: Please keep in mind that `change` hook triggered by the method may not update cache of a collection immediately.\n     *\n     * @private\n     * @param {number} [length] Length of list.\n     */\n\n  }, {\n    key: \"setDefaultValues\",\n    value: function setDefaultValues() {\n      var _this = this;\n\n      var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.indexedValues.length;\n      this.indexedValues.length = 0;\n\n      if (isFunction(this.initValueOrFn)) {\n        rangeEach(length - 1, function (index) {\n          return _this.indexedValues.push(_this.initValueOrFn(index));\n        });\n      } else {\n        rangeEach(length - 1, function () {\n          return _this.indexedValues.push(_this.initValueOrFn);\n        });\n      }\n\n      this.runLocalHooks('change');\n    }\n    /**\n     * Initialize list with default values for particular indexes.\n     *\n     * @private\n     * @param {number} length New length of indexed list.\n     * @returns {IndexMap}\n     */\n\n  }, {\n    key: \"init\",\n    value: function init(length) {\n      this.setDefaultValues(length);\n      this.runLocalHooks('init');\n      return this;\n    }\n    /**\n     * Add values to the list.\n     *\n     * Note: Please keep in mind that `change` hook triggered by the method may not update cache of a collection immediately.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"insert\",\n    value: function insert() {\n      this.runLocalHooks('change');\n    }\n    /**\n     * Remove values from the list.\n     *\n     * Note: Please keep in mind that `change` hook triggered by the method may not update cache of a collection immediately.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      this.runLocalHooks('change');\n    }\n    /**\n     * Destroys the Map instance.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.clearLocalHooks();\n      this.indexedValues = null;\n      this.initValueOrFn = null;\n    }\n  }]);\n\n  return IndexMap;\n}();\nmixin(IndexMap, localHooks);"],"mappings":"AAEA,SAASA,eAAeA,CAACC,QAAQ,EAAEC,WAAW,EAAE;EAAE,IAAI,EAAED,QAAQ,YAAYC,WAAW,CAAC,EAAE;IAAE,MAAM,IAAIC,SAAS,CAAC,mCAAmC,CAAC;EAAE;AAAE;AAExJ,SAASC,iBAAiBA,CAACC,MAAM,EAAEC,KAAK,EAAE;EAAE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,KAAK,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;IAAE,IAAIE,UAAU,GAAGH,KAAK,CAACC,CAAC,CAAC;IAAEE,UAAU,CAACC,UAAU,GAAGD,UAAU,CAACC,UAAU,IAAI,KAAK;IAAED,UAAU,CAACE,YAAY,GAAG,IAAI;IAAE,IAAI,OAAO,IAAIF,UAAU,EAAEA,UAAU,CAACG,QAAQ,GAAG,IAAI;IAAEC,MAAM,CAACC,cAAc,CAACT,MAAM,EAAEI,UAAU,CAACM,GAAG,EAAEN,UAAU,CAAC;EAAE;AAAE;AAE5T,SAASO,YAAYA,CAACd,WAAW,EAAEe,UAAU,EAAEC,WAAW,EAAE;EAAE,IAAID,UAAU,EAAEb,iBAAiB,CAACF,WAAW,CAACiB,SAAS,EAAEF,UAAU,CAAC;EAAE,IAAIC,WAAW,EAAEd,iBAAiB,CAACF,WAAW,EAAEgB,WAAW,CAAC;EAAEL,MAAM,CAACC,cAAc,CAACZ,WAAW,EAAE,WAAW,EAAE;IAAEU,QAAQ,EAAE;EAAM,CAAC,CAAC;EAAE,OAAOV,WAAW;AAAE;AAE5R,SAASkB,SAAS,QAAQ,0BAA0B;AACpD,SAASC,KAAK,QAAQ,0BAA0B;AAChD,SAASC,UAAU,QAAQ,4BAA4B;AACvD,OAAOC,UAAU,MAAM,6BAA6B;AACpD;AACA;AACA;;AAEA,OAAO,IAAIC,QAAQ,GAAG,aAAa,YAAY;EAC7C,SAASA,QAAQA,CAAA,EAAG;IAClB,IAAIC,aAAa,GAAGC,SAAS,CAAClB,MAAM,GAAG,CAAC,IAAIkB,SAAS,CAAC,CAAC,CAAC,KAAKC,SAAS,GAAGD,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI;IAE5F1B,eAAe,CAAC,IAAI,EAAEwB,QAAQ,CAAC;;IAE/B;AACJ;AACA;AACA;AACA;AACA;IACI,IAAI,CAACI,aAAa,GAAG,EAAE;IACvB;AACJ;AACA;AACA;AACA;AACA;;IAEI,IAAI,CAACH,aAAa,GAAGA,aAAa;EACpC;EACA;AACF;AACA;AACA;AACA;;EAGET,YAAY,CAACQ,QAAQ,EAAE,CAAC;IACtBT,GAAG,EAAE,WAAW;IAChBc,KAAK,EAAE,SAASC,SAASA,CAAA,EAAG;MAC1B,OAAO,IAAI,CAACF,aAAa;IAC3B;IACA;AACJ;AACA;AACA;AACA;AACA;EAEE,CAAC,EAAE;IACDb,GAAG,EAAE,iBAAiB;IACtBc,KAAK,EAAE,SAASE,eAAeA,CAACC,KAAK,EAAE;MACrC,IAAIC,MAAM,GAAG,IAAI,CAACL,aAAa;MAE/B,IAAII,KAAK,GAAGC,MAAM,CAACzB,MAAM,EAAE;QACzB,OAAOyB,MAAM,CAACD,KAAK,CAAC;MACtB;IACF;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;EAEE,CAAC,EAAE;IACDjB,GAAG,EAAE,WAAW;IAChBc,KAAK,EAAE,SAASK,SAASA,CAACD,MAAM,EAAE;MAChC,IAAI,CAACL,aAAa,GAAGK,MAAM,CAACE,KAAK,CAAC,CAAC;MACnC,IAAI,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC9B;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAEE,CAAC,EAAE;IACDrB,GAAG,EAAE,iBAAiB;IACtBc,KAAK,EAAE,SAASQ,eAAeA,CAACL,KAAK,EAAEH,KAAK,EAAE;MAC5C,IAAIG,KAAK,GAAG,IAAI,CAACJ,aAAa,CAACpB,MAAM,EAAE;QACrC,IAAI,CAACoB,aAAa,CAACI,KAAK,CAAC,GAAGH,KAAK;QACjC,IAAI,CAACO,aAAa,CAAC,QAAQ,CAAC;QAC5B,OAAO,IAAI;MACb;MAEA,OAAO,KAAK;IACd;IACA;AACJ;AACA;EAEE,CAAC,EAAE;IACDrB,GAAG,EAAE,OAAO;IACZc,KAAK,EAAE,SAASS,KAAKA,CAAA,EAAG;MACtB,IAAI,CAACC,gBAAgB,CAAC,CAAC;IACzB;IACA;AACJ;AACA;AACA;AACA;EAEE,CAAC,EAAE;IACDxB,GAAG,EAAE,WAAW;IAChBc,KAAK,EAAE,SAASW,SAASA,CAAA,EAAG;MAC1B,OAAO,IAAI,CAACV,SAAS,CAAC,CAAC,CAACtB,MAAM;IAChC;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EAEE,CAAC,EAAE;IACDO,GAAG,EAAE,kBAAkB;IACvBc,KAAK,EAAE,SAASU,gBAAgBA,CAAA,EAAG;MACjC,IAAIE,KAAK,GAAG,IAAI;MAEhB,IAAIjC,MAAM,GAAGkB,SAAS,CAAClB,MAAM,GAAG,CAAC,IAAIkB,SAAS,CAAC,CAAC,CAAC,KAAKC,SAAS,GAAGD,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAACE,aAAa,CAACpB,MAAM;MAC1G,IAAI,CAACoB,aAAa,CAACpB,MAAM,GAAG,CAAC;MAE7B,IAAIc,UAAU,CAAC,IAAI,CAACG,aAAa,CAAC,EAAE;QAClCL,SAAS,CAACZ,MAAM,GAAG,CAAC,EAAE,UAAUwB,KAAK,EAAE;UACrC,OAAOS,KAAK,CAACb,aAAa,CAACc,IAAI,CAACD,KAAK,CAAChB,aAAa,CAACO,KAAK,CAAC,CAAC;QAC7D,CAAC,CAAC;MACJ,CAAC,MAAM;QACLZ,SAAS,CAACZ,MAAM,GAAG,CAAC,EAAE,YAAY;UAChC,OAAOiC,KAAK,CAACb,aAAa,CAACc,IAAI,CAACD,KAAK,CAAChB,aAAa,CAAC;QACtD,CAAC,CAAC;MACJ;MAEA,IAAI,CAACW,aAAa,CAAC,QAAQ,CAAC;IAC9B;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;EAEE,CAAC,EAAE;IACDrB,GAAG,EAAE,MAAM;IACXc,KAAK,EAAE,SAASc,IAAIA,CAACnC,MAAM,EAAE;MAC3B,IAAI,CAAC+B,gBAAgB,CAAC/B,MAAM,CAAC;MAC7B,IAAI,CAAC4B,aAAa,CAAC,MAAM,CAAC;MAC1B,OAAO,IAAI;IACb;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;EAEE,CAAC,EAAE;IACDrB,GAAG,EAAE,QAAQ;IACbc,KAAK,EAAE,SAASe,MAAMA,CAAA,EAAG;MACvB,IAAI,CAACR,aAAa,CAAC,QAAQ,CAAC;IAC9B;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;EAEE,CAAC,EAAE;IACDrB,GAAG,EAAE,QAAQ;IACbc,KAAK,EAAE,SAASgB,MAAMA,CAAA,EAAG;MACvB,IAAI,CAACT,aAAa,CAAC,QAAQ,CAAC;IAC9B;IACA;AACJ;AACA;EAEE,CAAC,EAAE;IACDrB,GAAG,EAAE,SAAS;IACdc,KAAK,EAAE,SAASiB,OAAOA,CAAA,EAAG;MACxB,IAAI,CAACC,eAAe,CAAC,CAAC;MACtB,IAAI,CAACnB,aAAa,GAAG,IAAI;MACzB,IAAI,CAACH,aAAa,GAAG,IAAI;IAC3B;EACF,CAAC,CAAC,CAAC;EAEH,OAAOD,QAAQ;AACjB,CAAC,CAAC,CAAC;AACHH,KAAK,CAACG,QAAQ,EAAED,UAAU,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
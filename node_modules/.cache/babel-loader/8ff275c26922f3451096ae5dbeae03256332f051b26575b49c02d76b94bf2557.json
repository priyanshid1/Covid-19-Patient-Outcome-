{"ast":null,"code":"import _construct from \"/Users/priyadeliwala/Desktop/sales-dashboard/node_modules/@babel/runtime/helpers/esm/construct.js\";\nimport _classCallCheck from \"/Users/priyadeliwala/Desktop/sales-dashboard/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/priyadeliwala/Desktop/sales-dashboard/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/priyadeliwala/Desktop/sales-dashboard/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/priyadeliwala/Desktop/sales-dashboard/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport { addClass, getScrollbarWidth, getScrollTop, getWindowScrollLeft, hasClass, outerHeight, removeClass } from \"../../../../helpers/dom/element.mjs\";\nimport BottomOverlayTable from \"./../table/bottom.mjs\";\nimport { Overlay } from \"./_base.mjs\";\nimport { CLONE_BOTTOM } from \"./constants.mjs\";\n/**\n * @class BottomOverlay\n */\nexport var BottomOverlay = /*#__PURE__*/function (_Overlay) {\n  /**\n   * @param {Walkontable} wotInstance The Walkontable instance. @TODO refactoring: check if can be deleted.\n   * @param {FacadeGetter} facadeGetter Function which return proper facade.\n   * @param {Settings} wtSettings The Walkontable settings.\n   * @param {DomBindings} domBindings Dom elements bound to the current instance.\n   */\n  function BottomOverlay(wotInstance, facadeGetter, wtSettings, domBindings) {\n    var _this;\n    _classCallCheck(this, BottomOverlay);\n    _this = _callSuper(this, BottomOverlay, [wotInstance, facadeGetter, CLONE_BOTTOM, wtSettings, domBindings]);\n    /**\n     * Cached value which holds the previous value of the `fixedRowsBottom` option.\n     * It is used as a comparison value that can be used to detect changes in that value.\n     *\n     * @type {number}\n     */\n    _defineProperty(_this, \"cachedFixedRowsBottom\", -1);\n    _this.cachedFixedRowsBottom = _this.wtSettings.getSetting('fixedRowsBottom');\n    return _this;\n  }\n\n  /**\n   * Factory method to create a subclass of `Table` that is relevant to this overlay.\n   *\n   * @see Table#constructor\n   * @param {...*} args Parameters that will be forwarded to the `Table` constructor.\n   * @returns {BottomOverlayTable}\n   */\n  _inherits(BottomOverlay, _Overlay);\n  return _createClass(BottomOverlay, [{\n    key: \"createTable\",\n    value: function createTable() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      return _construct(BottomOverlayTable, args);\n    }\n\n    /**\n     * Checks if overlay should be fully rendered.\n     *\n     * @returns {boolean}\n     */\n  }, {\n    key: \"shouldBeRendered\",\n    value: function shouldBeRendered() {\n      return this.wtSettings.getSetting('shouldRenderBottomOverlay');\n    }\n\n    /**\n     * Updates the top overlay position.\n     *\n     * @returns {boolean}\n     */\n  }, {\n    key: \"resetFixedPosition\",\n    value: function resetFixedPosition() {\n      if (!this.needFullRender || !this.shouldBeRendered() || !this.wot.wtTable.holder.parentNode) {\n        // removed from DOM\n        return false;\n      }\n      var rootWindow = this.domBindings.rootWindow;\n      var overlayRoot = this.clone.wtTable.holder.parentNode;\n      overlayRoot.style.top = '';\n      var overlayPosition = 0;\n      var preventOverflow = this.wtSettings.getSetting('preventOverflow');\n      if (this.trimmingContainer === rootWindow && (!preventOverflow || preventOverflow !== 'vertical')) {\n        overlayPosition = this.getOverlayOffset();\n        overlayRoot.style.bottom = \"\".concat(overlayPosition, \"px\");\n      } else {\n        overlayPosition = this.getScrollPosition();\n        this.repositionOverlay();\n      }\n      var positionChanged = this.adjustHeaderBordersPosition(overlayPosition);\n      this.adjustElementsSize();\n      return positionChanged;\n    }\n\n    /**\n     * Updates the bottom overlay position.\n     */\n  }, {\n    key: \"repositionOverlay\",\n    value: function repositionOverlay() {\n      var _this$wot = this.wot,\n        wtTable = _this$wot.wtTable,\n        wtViewport = _this$wot.wtViewport;\n      var rootDocument = this.domBindings.rootDocument;\n      var cloneRoot = this.clone.wtTable.holder.parentNode;\n      var bottomOffset = 0;\n      if (!wtViewport.hasVerticalScroll()) {\n        bottomOffset += wtViewport.getWorkspaceHeight() - wtTable.getTotalHeight();\n      }\n      if (wtViewport.hasVerticalScroll() && wtViewport.hasHorizontalScroll()) {\n        bottomOffset += getScrollbarWidth(rootDocument);\n      }\n      cloneRoot.style.bottom = \"\".concat(bottomOffset, \"px\");\n    }\n\n    /**\n     * Sets the main overlay's vertical scroll position.\n     *\n     * @param {number} pos The scroll position.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"setScrollPosition\",\n    value: function setScrollPosition(pos) {\n      var rootWindow = this.domBindings.rootWindow;\n      var result = false;\n      if (this.mainTableScrollableElement === rootWindow) {\n        rootWindow.scrollTo(getWindowScrollLeft(rootWindow), pos);\n        result = true;\n      } else if (this.mainTableScrollableElement.scrollTop !== pos) {\n        this.mainTableScrollableElement.scrollTop = pos;\n        result = true;\n      }\n      return result;\n    }\n\n    /**\n     * Triggers onScroll hook callback.\n     */\n  }, {\n    key: \"onScroll\",\n    value: function onScroll() {\n      this.wtSettings.getSetting('onScrollHorizontally');\n    }\n\n    /**\n     * Calculates total sum cells height.\n     *\n     * @param {number} from Row index which calculates started from.\n     * @param {number} to Row index where calculation is finished.\n     * @returns {number} Height sum.\n     */\n  }, {\n    key: \"sumCellSizes\",\n    value: function sumCellSizes(from, to) {\n      var _this$wot2 = this.wot,\n        wtTable = _this$wot2.wtTable,\n        wtSettings = _this$wot2.wtSettings;\n      var defaultRowHeight = wtSettings.getSetting('defaultRowHeight');\n      var row = from;\n      var sum = 0;\n      while (row < to) {\n        var height = wtTable.getRowHeight(row);\n        sum += height === undefined ? defaultRowHeight : height;\n        row += 1;\n      }\n      return sum;\n    }\n\n    /**\n     * Adjust overlay root element, children and master table element sizes (width, height).\n     */\n  }, {\n    key: \"adjustElementsSize\",\n    value: function adjustElementsSize() {\n      this.updateTrimmingContainer();\n      if (this.needFullRender) {\n        this.adjustRootElementSize();\n        this.adjustRootChildrenSize();\n      }\n    }\n\n    /**\n     * Adjust overlay root element size (width and height).\n     */\n  }, {\n    key: \"adjustRootElementSize\",\n    value: function adjustRootElementSize() {\n      var _this$wot3 = this.wot,\n        wtTable = _this$wot3.wtTable,\n        wtViewport = _this$wot3.wtViewport;\n      var _this$domBindings = this.domBindings,\n        rootDocument = _this$domBindings.rootDocument,\n        rootWindow = _this$domBindings.rootWindow;\n      var scrollbarWidth = getScrollbarWidth(rootDocument);\n      var overlayRoot = this.clone.wtTable.holder.parentNode;\n      var overlayRootStyle = overlayRoot.style;\n      var preventOverflow = this.wtSettings.getSetting('preventOverflow');\n      if (this.trimmingContainer !== rootWindow || preventOverflow === 'horizontal') {\n        var width = wtViewport.getWorkspaceWidth();\n        if (this.wot.wtOverlays.hasScrollbarRight) {\n          width -= scrollbarWidth;\n        }\n        width = Math.min(width, wtTable.wtRootElement.scrollWidth);\n        overlayRootStyle.width = \"\".concat(width, \"px\");\n      } else {\n        overlayRootStyle.width = '';\n      }\n      this.clone.wtTable.holder.style.width = overlayRootStyle.width;\n      var tableHeight = outerHeight(this.clone.wtTable.TABLE);\n      if (!this.wot.wtTable.hasDefinedSize()) {\n        tableHeight = 0;\n      }\n      overlayRootStyle.height = \"\".concat(tableHeight, \"px\");\n    }\n\n    /**\n     * Adjust overlay root childs size.\n     */\n  }, {\n    key: \"adjustRootChildrenSize\",\n    value: function adjustRootChildrenSize() {\n      var holder = this.clone.wtTable.holder;\n      this.clone.wtTable.hider.style.width = this.hider.style.width;\n      holder.style.width = holder.parentNode.style.width;\n      holder.style.height = holder.parentNode.style.height;\n    }\n\n    /**\n     * Adjust the overlay dimensions and position.\n     */\n  }, {\n    key: \"applyToDOM\",\n    value: function applyToDOM() {\n      var total = this.wtSettings.getSetting('totalRows');\n      if (typeof this.wot.wtViewport.rowsRenderCalculator.startPosition === 'number') {\n        this.spreader.style.top = \"\".concat(this.wot.wtViewport.rowsRenderCalculator.startPosition, \"px\");\n      } else if (total === 0) {\n        // can happen if there are 0 rows\n        this.spreader.style.top = '0';\n      } else {\n        throw new Error('Incorrect value of the rowsRenderCalculator');\n      }\n      this.spreader.style.bottom = '';\n      if (this.needFullRender) {\n        this.syncOverlayOffset();\n      }\n    }\n\n    /**\n     * Synchronize calculated left position to an element.\n     */\n  }, {\n    key: \"syncOverlayOffset\",\n    value: function syncOverlayOffset() {\n      var styleProperty = this.isRtl() ? 'right' : 'left';\n      var spreader = this.clone.wtTable.spreader;\n      if (typeof this.wot.wtViewport.columnsRenderCalculator.startPosition === 'number') {\n        spreader.style[styleProperty] = \"\".concat(this.wot.wtViewport.columnsRenderCalculator.startPosition, \"px\");\n      } else {\n        spreader.style[styleProperty] = '';\n      }\n    }\n\n    /**\n     * Scrolls vertically to a row.\n     *\n     * @param {number} sourceRow Row index which you want to scroll to.\n     * @param {boolean} [bottomEdge=false] If `true`, scrolls according to the bottom edge (top edge is by default).\n     */\n  }, {\n    key: \"scrollTo\",\n    value: function scrollTo(sourceRow, bottomEdge) {\n      var newY = this.getTableParentOffset();\n      var sourceInstance = this.wot.cloneSource ? this.wot.cloneSource : this.wot;\n      var mainHolder = sourceInstance.wtTable.holder;\n      var scrollbarCompensation = 0;\n      if (bottomEdge && mainHolder.offsetHeight !== mainHolder.clientHeight) {\n        scrollbarCompensation = getScrollbarWidth(this.domBindings.rootDocument);\n      }\n      if (bottomEdge) {\n        newY += this.sumCellSizes(0, sourceRow + 1);\n        newY -= this.wot.wtViewport.getViewportHeight();\n        // Fix 1 pixel offset when cell is selected\n        newY += 1;\n      } else {\n        newY += this.sumCellSizes(this.wtSettings.getSetting('fixedRowsBottom'), sourceRow);\n      }\n      newY += scrollbarCompensation;\n      this.setScrollPosition(newY);\n    }\n\n    /**\n     * Gets table parent top position.\n     *\n     * @returns {number}\n     */\n  }, {\n    key: \"getTableParentOffset\",\n    value: function getTableParentOffset() {\n      if (this.mainTableScrollableElement === this.domBindings.rootWindow) {\n        return this.wot.wtTable.holderOffset.top;\n      }\n      return 0;\n    }\n\n    /**\n     * Gets the main overlay's vertical scroll position.\n     *\n     * @returns {number} Main table's vertical scroll position.\n     */\n  }, {\n    key: \"getScrollPosition\",\n    value: function getScrollPosition() {\n      return getScrollTop(this.mainTableScrollableElement, this.domBindings.rootWindow);\n    }\n\n    /**\n     * Gets the main overlay's vertical overlay offset.\n     *\n     * @returns {number} Main table's vertical overlay offset.\n     */\n  }, {\n    key: \"getOverlayOffset\",\n    value: function getOverlayOffset() {\n      var rootWindow = this.domBindings.rootWindow;\n      var preventOverflow = this.wtSettings.getSetting('preventOverflow');\n      var overlayOffset = 0;\n      if (this.trimmingContainer === rootWindow && (!preventOverflow || preventOverflow !== 'vertical')) {\n        var rootHeight = this.wot.wtTable.getTotalHeight();\n        var overlayRootHeight = this.clone.wtTable.getTotalHeight();\n        var maxOffset = rootHeight - overlayRootHeight;\n        var docClientHeight = this.domBindings.rootDocument.documentElement.clientHeight;\n        overlayOffset = Math.max(this.getTableParentOffset() - this.getScrollPosition() - docClientHeight + rootHeight, 0);\n        if (overlayOffset > maxOffset) {\n          overlayOffset = 0;\n        }\n      }\n      return overlayOffset;\n    }\n\n    /**\n     * Adds css classes to hide the header border's header (cell-selection border hiding issue).\n     *\n     * @param {number} position Header Y position if trimming container is window or scroll top if not.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"adjustHeaderBordersPosition\",\n    value: function adjustHeaderBordersPosition(position) {\n      var fixedRowsBottom = this.wtSettings.getSetting('fixedRowsBottom');\n      var areFixedRowsBottomChanged = this.cachedFixedRowsBottom !== fixedRowsBottom;\n      var columnHeaders = this.wtSettings.getSetting('columnHeaders');\n      var positionChanged = false;\n      if ((areFixedRowsBottomChanged || fixedRowsBottom === 0) && columnHeaders.length > 0) {\n        var masterParent = this.wot.wtTable.holder.parentNode;\n        var previousState = hasClass(masterParent, 'innerBorderBottom');\n        this.cachedFixedRowsBottom = this.wtSettings.getSetting('fixedRowsBottom');\n        if (position || this.wtSettings.getSetting('totalRows') === 0) {\n          addClass(masterParent, 'innerBorderBottom');\n          positionChanged = !previousState;\n        } else {\n          removeClass(masterParent, 'innerBorderBottom');\n          positionChanged = previousState;\n        }\n      }\n      return positionChanged;\n    }\n  }]);\n}(Overlay);","map":{"version":3,"names":["_defineProperty","e","r","t","_toPropertyKey","Object","defineProperty","value","enumerable","configurable","writable","i","_toPrimitive","Symbol","toPrimitive","call","TypeError","String","Number","addClass","getScrollbarWidth","getScrollTop","getWindowScrollLeft","hasClass","outerHeight","removeClass","BottomOverlayTable","Overlay","CLONE_BOTTOM","BottomOverlay","_Overlay","wotInstance","facadeGetter","wtSettings","domBindings","_this","_classCallCheck","_callSuper","cachedFixedRowsBottom","getSetting","_inherits","_createClass","key","createTable","_len","arguments","length","args","Array","_key","_construct","shouldBeRendered","resetFixedPosition","needFullRender","wot","wtTable","holder","parentNode","rootWindow","overlayRoot","clone","style","top","overlayPosition","preventOverflow","trimmingContainer","getOverlayOffset","bottom","concat","getScrollPosition","repositionOverlay","positionChanged","adjustHeaderBordersPosition","adjustElementsSize","_this$wot","wtViewport","rootDocument","cloneRoot","bottomOffset","hasVerticalScroll","getWorkspaceHeight","getTotalHeight","hasHorizontalScroll","setScrollPosition","pos","result","mainTableScrollableElement","scrollTo","scrollTop","onScroll","sumCellSizes","from","to","_this$wot2","defaultRowHeight","row","sum","height","getRowHeight","undefined","updateTrimmingContainer","adjustRootElementSize","adjustRootChildrenSize","_this$wot3","_this$domBindings","scrollbarWidth","overlayRootStyle","width","getWorkspaceWidth","wtOverlays","hasScrollbarRight","Math","min","wtRootElement","scrollWidth","tableHeight","TABLE","hasDefinedSize","hider","applyToDOM","total","rowsRenderCalculator","startPosition","spreader","Error","syncOverlayOffset","styleProperty","isRtl","columnsRenderCalculator","sourceRow","bottomEdge","newY","getTableParentOffset","sourceInstance","cloneSource","mainHolder","scrollbarCompensation","offsetHeight","clientHeight","getViewportHeight","holderOffset","overlayOffset","rootHeight","overlayRootHeight","maxOffset","docClientHeight","documentElement","max","position","fixedRowsBottom","areFixedRowsBottomChanged","columnHeaders","masterParent","previousState"],"sources":["/Users/priyadeliwala/node_modules/handsontable/3rdparty/walkontable/src/overlay/bottom.mjs"],"sourcesContent":["import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport { addClass, getScrollbarWidth, getScrollTop, getWindowScrollLeft, hasClass, outerHeight, removeClass } from \"../../../../helpers/dom/element.mjs\";\nimport BottomOverlayTable from \"./../table/bottom.mjs\";\nimport { Overlay } from \"./_base.mjs\";\nimport { CLONE_BOTTOM } from \"./constants.mjs\";\n/**\n * @class BottomOverlay\n */\nexport class BottomOverlay extends Overlay {\n  /**\n   * @param {Walkontable} wotInstance The Walkontable instance. @TODO refactoring: check if can be deleted.\n   * @param {FacadeGetter} facadeGetter Function which return proper facade.\n   * @param {Settings} wtSettings The Walkontable settings.\n   * @param {DomBindings} domBindings Dom elements bound to the current instance.\n   */\n  constructor(wotInstance, facadeGetter, wtSettings, domBindings) {\n    super(wotInstance, facadeGetter, CLONE_BOTTOM, wtSettings, domBindings);\n    /**\n     * Cached value which holds the previous value of the `fixedRowsBottom` option.\n     * It is used as a comparison value that can be used to detect changes in that value.\n     *\n     * @type {number}\n     */\n    _defineProperty(this, \"cachedFixedRowsBottom\", -1);\n    this.cachedFixedRowsBottom = this.wtSettings.getSetting('fixedRowsBottom');\n  }\n\n  /**\n   * Factory method to create a subclass of `Table` that is relevant to this overlay.\n   *\n   * @see Table#constructor\n   * @param {...*} args Parameters that will be forwarded to the `Table` constructor.\n   * @returns {BottomOverlayTable}\n   */\n  createTable() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return new BottomOverlayTable(...args);\n  }\n\n  /**\n   * Checks if overlay should be fully rendered.\n   *\n   * @returns {boolean}\n   */\n  shouldBeRendered() {\n    return this.wtSettings.getSetting('shouldRenderBottomOverlay');\n  }\n\n  /**\n   * Updates the top overlay position.\n   *\n   * @returns {boolean}\n   */\n  resetFixedPosition() {\n    if (!this.needFullRender || !this.shouldBeRendered() || !this.wot.wtTable.holder.parentNode) {\n      // removed from DOM\n      return false;\n    }\n    const {\n      rootWindow\n    } = this.domBindings;\n    const overlayRoot = this.clone.wtTable.holder.parentNode;\n    overlayRoot.style.top = '';\n    let overlayPosition = 0;\n    const preventOverflow = this.wtSettings.getSetting('preventOverflow');\n    if (this.trimmingContainer === rootWindow && (!preventOverflow || preventOverflow !== 'vertical')) {\n      overlayPosition = this.getOverlayOffset();\n      overlayRoot.style.bottom = `${overlayPosition}px`;\n    } else {\n      overlayPosition = this.getScrollPosition();\n      this.repositionOverlay();\n    }\n    const positionChanged = this.adjustHeaderBordersPosition(overlayPosition);\n    this.adjustElementsSize();\n    return positionChanged;\n  }\n\n  /**\n   * Updates the bottom overlay position.\n   */\n  repositionOverlay() {\n    const {\n      wtTable,\n      wtViewport\n    } = this.wot;\n    const {\n      rootDocument\n    } = this.domBindings;\n    const cloneRoot = this.clone.wtTable.holder.parentNode;\n    let bottomOffset = 0;\n    if (!wtViewport.hasVerticalScroll()) {\n      bottomOffset += wtViewport.getWorkspaceHeight() - wtTable.getTotalHeight();\n    }\n    if (wtViewport.hasVerticalScroll() && wtViewport.hasHorizontalScroll()) {\n      bottomOffset += getScrollbarWidth(rootDocument);\n    }\n    cloneRoot.style.bottom = `${bottomOffset}px`;\n  }\n\n  /**\n   * Sets the main overlay's vertical scroll position.\n   *\n   * @param {number} pos The scroll position.\n   * @returns {boolean}\n   */\n  setScrollPosition(pos) {\n    const {\n      rootWindow\n    } = this.domBindings;\n    let result = false;\n    if (this.mainTableScrollableElement === rootWindow) {\n      rootWindow.scrollTo(getWindowScrollLeft(rootWindow), pos);\n      result = true;\n    } else if (this.mainTableScrollableElement.scrollTop !== pos) {\n      this.mainTableScrollableElement.scrollTop = pos;\n      result = true;\n    }\n    return result;\n  }\n\n  /**\n   * Triggers onScroll hook callback.\n   */\n  onScroll() {\n    this.wtSettings.getSetting('onScrollHorizontally');\n  }\n\n  /**\n   * Calculates total sum cells height.\n   *\n   * @param {number} from Row index which calculates started from.\n   * @param {number} to Row index where calculation is finished.\n   * @returns {number} Height sum.\n   */\n  sumCellSizes(from, to) {\n    const {\n      wtTable,\n      wtSettings\n    } = this.wot;\n    const defaultRowHeight = wtSettings.getSetting('defaultRowHeight');\n    let row = from;\n    let sum = 0;\n    while (row < to) {\n      const height = wtTable.getRowHeight(row);\n      sum += height === undefined ? defaultRowHeight : height;\n      row += 1;\n    }\n    return sum;\n  }\n\n  /**\n   * Adjust overlay root element, children and master table element sizes (width, height).\n   */\n  adjustElementsSize() {\n    this.updateTrimmingContainer();\n    if (this.needFullRender) {\n      this.adjustRootElementSize();\n      this.adjustRootChildrenSize();\n    }\n  }\n\n  /**\n   * Adjust overlay root element size (width and height).\n   */\n  adjustRootElementSize() {\n    const {\n      wtTable,\n      wtViewport\n    } = this.wot;\n    const {\n      rootDocument,\n      rootWindow\n    } = this.domBindings;\n    const scrollbarWidth = getScrollbarWidth(rootDocument);\n    const overlayRoot = this.clone.wtTable.holder.parentNode;\n    const overlayRootStyle = overlayRoot.style;\n    const preventOverflow = this.wtSettings.getSetting('preventOverflow');\n    if (this.trimmingContainer !== rootWindow || preventOverflow === 'horizontal') {\n      let width = wtViewport.getWorkspaceWidth();\n      if (this.wot.wtOverlays.hasScrollbarRight) {\n        width -= scrollbarWidth;\n      }\n      width = Math.min(width, wtTable.wtRootElement.scrollWidth);\n      overlayRootStyle.width = `${width}px`;\n    } else {\n      overlayRootStyle.width = '';\n    }\n    this.clone.wtTable.holder.style.width = overlayRootStyle.width;\n    let tableHeight = outerHeight(this.clone.wtTable.TABLE);\n    if (!this.wot.wtTable.hasDefinedSize()) {\n      tableHeight = 0;\n    }\n    overlayRootStyle.height = `${tableHeight}px`;\n  }\n\n  /**\n   * Adjust overlay root childs size.\n   */\n  adjustRootChildrenSize() {\n    const {\n      holder\n    } = this.clone.wtTable;\n    this.clone.wtTable.hider.style.width = this.hider.style.width;\n    holder.style.width = holder.parentNode.style.width;\n    holder.style.height = holder.parentNode.style.height;\n  }\n\n  /**\n   * Adjust the overlay dimensions and position.\n   */\n  applyToDOM() {\n    const total = this.wtSettings.getSetting('totalRows');\n    if (typeof this.wot.wtViewport.rowsRenderCalculator.startPosition === 'number') {\n      this.spreader.style.top = `${this.wot.wtViewport.rowsRenderCalculator.startPosition}px`;\n    } else if (total === 0) {\n      // can happen if there are 0 rows\n      this.spreader.style.top = '0';\n    } else {\n      throw new Error('Incorrect value of the rowsRenderCalculator');\n    }\n    this.spreader.style.bottom = '';\n    if (this.needFullRender) {\n      this.syncOverlayOffset();\n    }\n  }\n\n  /**\n   * Synchronize calculated left position to an element.\n   */\n  syncOverlayOffset() {\n    const styleProperty = this.isRtl() ? 'right' : 'left';\n    const {\n      spreader\n    } = this.clone.wtTable;\n    if (typeof this.wot.wtViewport.columnsRenderCalculator.startPosition === 'number') {\n      spreader.style[styleProperty] = `${this.wot.wtViewport.columnsRenderCalculator.startPosition}px`;\n    } else {\n      spreader.style[styleProperty] = '';\n    }\n  }\n\n  /**\n   * Scrolls vertically to a row.\n   *\n   * @param {number} sourceRow Row index which you want to scroll to.\n   * @param {boolean} [bottomEdge=false] If `true`, scrolls according to the bottom edge (top edge is by default).\n   */\n  scrollTo(sourceRow, bottomEdge) {\n    let newY = this.getTableParentOffset();\n    const sourceInstance = this.wot.cloneSource ? this.wot.cloneSource : this.wot;\n    const mainHolder = sourceInstance.wtTable.holder;\n    let scrollbarCompensation = 0;\n    if (bottomEdge && mainHolder.offsetHeight !== mainHolder.clientHeight) {\n      scrollbarCompensation = getScrollbarWidth(this.domBindings.rootDocument);\n    }\n    if (bottomEdge) {\n      newY += this.sumCellSizes(0, sourceRow + 1);\n      newY -= this.wot.wtViewport.getViewportHeight();\n      // Fix 1 pixel offset when cell is selected\n      newY += 1;\n    } else {\n      newY += this.sumCellSizes(this.wtSettings.getSetting('fixedRowsBottom'), sourceRow);\n    }\n    newY += scrollbarCompensation;\n    this.setScrollPosition(newY);\n  }\n\n  /**\n   * Gets table parent top position.\n   *\n   * @returns {number}\n   */\n  getTableParentOffset() {\n    if (this.mainTableScrollableElement === this.domBindings.rootWindow) {\n      return this.wot.wtTable.holderOffset.top;\n    }\n    return 0;\n  }\n\n  /**\n   * Gets the main overlay's vertical scroll position.\n   *\n   * @returns {number} Main table's vertical scroll position.\n   */\n  getScrollPosition() {\n    return getScrollTop(this.mainTableScrollableElement, this.domBindings.rootWindow);\n  }\n\n  /**\n   * Gets the main overlay's vertical overlay offset.\n   *\n   * @returns {number} Main table's vertical overlay offset.\n   */\n  getOverlayOffset() {\n    const {\n      rootWindow\n    } = this.domBindings;\n    const preventOverflow = this.wtSettings.getSetting('preventOverflow');\n    let overlayOffset = 0;\n    if (this.trimmingContainer === rootWindow && (!preventOverflow || preventOverflow !== 'vertical')) {\n      const rootHeight = this.wot.wtTable.getTotalHeight();\n      const overlayRootHeight = this.clone.wtTable.getTotalHeight();\n      const maxOffset = rootHeight - overlayRootHeight;\n      const docClientHeight = this.domBindings.rootDocument.documentElement.clientHeight;\n      overlayOffset = Math.max(this.getTableParentOffset() - this.getScrollPosition() - docClientHeight + rootHeight, 0);\n      if (overlayOffset > maxOffset) {\n        overlayOffset = 0;\n      }\n    }\n    return overlayOffset;\n  }\n\n  /**\n   * Adds css classes to hide the header border's header (cell-selection border hiding issue).\n   *\n   * @param {number} position Header Y position if trimming container is window or scroll top if not.\n   * @returns {boolean}\n   */\n  adjustHeaderBordersPosition(position) {\n    const fixedRowsBottom = this.wtSettings.getSetting('fixedRowsBottom');\n    const areFixedRowsBottomChanged = this.cachedFixedRowsBottom !== fixedRowsBottom;\n    const columnHeaders = this.wtSettings.getSetting('columnHeaders');\n    let positionChanged = false;\n    if ((areFixedRowsBottomChanged || fixedRowsBottom === 0) && columnHeaders.length > 0) {\n      const masterParent = this.wot.wtTable.holder.parentNode;\n      const previousState = hasClass(masterParent, 'innerBorderBottom');\n      this.cachedFixedRowsBottom = this.wtSettings.getSetting('fixedRowsBottom');\n      if (position || this.wtSettings.getSetting('totalRows') === 0) {\n        addClass(masterParent, 'innerBorderBottom');\n        positionChanged = !previousState;\n      } else {\n        removeClass(masterParent, 'innerBorderBottom');\n        positionChanged = previousState;\n      }\n    }\n    return positionChanged;\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nimport { getWindowScrollLeft, getWindowScrollTop } from \"../../helpers/dom/element.mjs\";\n/**\n * Helper class for checking if element will fit at the desired side of cursor.\n *\n * @private\n * @class Cursor\n */\n\nvar Cursor = /*#__PURE__*/function () {\n  function Cursor(object, rootWindow) {\n    _classCallCheck(this, Cursor);\n    var windowScrollTop = getWindowScrollTop(rootWindow);\n    var windowScrollLeft = getWindowScrollLeft(rootWindow);\n    var top;\n    var topRelative;\n    var left;\n    var leftRelative;\n    var cellHeight;\n    var cellWidth;\n    this.rootWindow = rootWindow;\n    this.type = this.getSourceType(object);\n    if (this.type === 'literal') {\n      top = parseInt(object.top, 10);\n      left = parseInt(object.left, 10);\n      cellHeight = object.height || 0;\n      cellWidth = object.width || 0;\n      topRelative = top;\n      leftRelative = left;\n      top += windowScrollTop;\n      left += windowScrollLeft;\n    } else if (this.type === 'event') {\n      top = parseInt(object.pageY, 10);\n      left = parseInt(object.pageX, 10);\n      cellHeight = object.target.clientHeight;\n      cellWidth = object.target.clientWidth;\n      topRelative = top - windowScrollTop;\n      leftRelative = left - windowScrollLeft;\n    }\n    this.top = top;\n    this.topRelative = topRelative;\n    this.left = left;\n    this.leftRelative = leftRelative;\n    this.scrollTop = windowScrollTop;\n    this.scrollLeft = windowScrollLeft;\n    this.cellHeight = cellHeight;\n    this.cellWidth = cellWidth;\n  }\n  /**\n   * Get source type name.\n   *\n   * @param {*} object Event or Object with coordinates.\n   * @returns {string} Returns one of this values: `'literal'`, `'event'`.\n   */\n\n  _createClass(Cursor, [{\n    key: \"getSourceType\",\n    value: function getSourceType(object) {\n      var type = 'literal';\n      if (object instanceof Event) {\n        type = 'event';\n      }\n      return type;\n    }\n    /**\n     * Checks if element can be placed above the cursor.\n     *\n     * @param {HTMLElement} element Element to check if it's size will fit above the cursor.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"fitsAbove\",\n    value: function fitsAbove(element) {\n      return this.topRelative >= element.offsetHeight;\n    }\n    /**\n     * Checks if element can be placed below the cursor.\n     *\n     * @param {HTMLElement} element Element to check if it's size will fit below the cursor.\n     * @param {number} [viewportHeight] The viewport height.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"fitsBelow\",\n    value: function fitsBelow(element) {\n      var viewportHeight = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.rootWindow.innerHeight;\n      return this.topRelative + element.offsetHeight <= viewportHeight;\n    }\n    /**\n     * Checks if element can be placed on the right of the cursor.\n     *\n     * @param {HTMLElement} element Element to check if it's size will fit on the right of the cursor.\n     * @param {number} [viewportWidth] The viewport width.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"fitsOnRight\",\n    value: function fitsOnRight(element) {\n      var viewportWidth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.rootWindow.innerWidth;\n      return this.leftRelative + this.cellWidth + element.offsetWidth <= viewportWidth;\n    }\n    /**\n     * Checks if element can be placed on the left on the cursor.\n     *\n     * @param {HTMLElement} element Element to check if it's size will fit on the left of the cursor.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"fitsOnLeft\",\n    value: function fitsOnLeft(element) {\n      return this.leftRelative >= element.offsetWidth;\n    }\n  }]);\n  return Cursor;\n}();\nexport default Cursor;","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","getWindowScrollLeft","getWindowScrollTop","Cursor","object","rootWindow","windowScrollTop","windowScrollLeft","top","topRelative","left","leftRelative","cellHeight","cellWidth","type","getSourceType","parseInt","height","width","pageY","pageX","clientHeight","clientWidth","scrollTop","scrollLeft","value","Event","fitsAbove","element","offsetHeight","fitsBelow","viewportHeight","arguments","undefined","innerHeight","fitsOnRight","viewportWidth","innerWidth","offsetWidth","fitsOnLeft"],"sources":["/Users/priyadeliwala/Desktop/sales-dashboard/node_modules/handsontable/plugins/contextMenu/cursor.mjs"],"sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nimport { getWindowScrollLeft, getWindowScrollTop } from \"../../helpers/dom/element.mjs\";\n/**\n * Helper class for checking if element will fit at the desired side of cursor.\n *\n * @private\n * @class Cursor\n */\n\nvar Cursor = /*#__PURE__*/function () {\n  function Cursor(object, rootWindow) {\n    _classCallCheck(this, Cursor);\n\n    var windowScrollTop = getWindowScrollTop(rootWindow);\n    var windowScrollLeft = getWindowScrollLeft(rootWindow);\n    var top;\n    var topRelative;\n    var left;\n    var leftRelative;\n    var cellHeight;\n    var cellWidth;\n    this.rootWindow = rootWindow;\n    this.type = this.getSourceType(object);\n\n    if (this.type === 'literal') {\n      top = parseInt(object.top, 10);\n      left = parseInt(object.left, 10);\n      cellHeight = object.height || 0;\n      cellWidth = object.width || 0;\n      topRelative = top;\n      leftRelative = left;\n      top += windowScrollTop;\n      left += windowScrollLeft;\n    } else if (this.type === 'event') {\n      top = parseInt(object.pageY, 10);\n      left = parseInt(object.pageX, 10);\n      cellHeight = object.target.clientHeight;\n      cellWidth = object.target.clientWidth;\n      topRelative = top - windowScrollTop;\n      leftRelative = left - windowScrollLeft;\n    }\n\n    this.top = top;\n    this.topRelative = topRelative;\n    this.left = left;\n    this.leftRelative = leftRelative;\n    this.scrollTop = windowScrollTop;\n    this.scrollLeft = windowScrollLeft;\n    this.cellHeight = cellHeight;\n    this.cellWidth = cellWidth;\n  }\n  /**\n   * Get source type name.\n   *\n   * @param {*} object Event or Object with coordinates.\n   * @returns {string} Returns one of this values: `'literal'`, `'event'`.\n   */\n\n\n  _createClass(Cursor, [{\n    key: \"getSourceType\",\n    value: function getSourceType(object) {\n      var type = 'literal';\n\n      if (object instanceof Event) {\n        type = 'event';\n      }\n\n      return type;\n    }\n    /**\n     * Checks if element can be placed above the cursor.\n     *\n     * @param {HTMLElement} element Element to check if it's size will fit above the cursor.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"fitsAbove\",\n    value: function fitsAbove(element) {\n      return this.topRelative >= element.offsetHeight;\n    }\n    /**\n     * Checks if element can be placed below the cursor.\n     *\n     * @param {HTMLElement} element Element to check if it's size will fit below the cursor.\n     * @param {number} [viewportHeight] The viewport height.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"fitsBelow\",\n    value: function fitsBelow(element) {\n      var viewportHeight = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.rootWindow.innerHeight;\n      return this.topRelative + element.offsetHeight <= viewportHeight;\n    }\n    /**\n     * Checks if element can be placed on the right of the cursor.\n     *\n     * @param {HTMLElement} element Element to check if it's size will fit on the right of the cursor.\n     * @param {number} [viewportWidth] The viewport width.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"fitsOnRight\",\n    value: function fitsOnRight(element) {\n      var viewportWidth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.rootWindow.innerWidth;\n      return this.leftRelative + this.cellWidth + element.offsetWidth <= viewportWidth;\n    }\n    /**\n     * Checks if element can be placed on the left on the cursor.\n     *\n     * @param {HTMLElement} element Element to check if it's size will fit on the left of the cursor.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"fitsOnLeft\",\n    value: function fitsOnLeft(element) {\n      return this.leftRelative >= element.offsetWidth;\n    }\n  }]);\n\n  return Cursor;\n}();\n\nexport default Cursor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
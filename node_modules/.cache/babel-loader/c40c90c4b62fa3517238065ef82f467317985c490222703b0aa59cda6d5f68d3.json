{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nimport { isPassiveEventSupported } from \"./helpers/feature.mjs\";\nimport { stopImmediatePropagation as _stopImmediatePropagation } from \"./helpers/dom/event.mjs\";\n/**\n * Counter which tracks unregistered listeners (useful for detecting memory leaks).\n *\n * @type {number}\n */\n\nvar listenersCounter = 0;\n/**\n * Event DOM manager for internal use in Handsontable.\n *\n * @class EventManager\n * @util\n */\n\nvar EventManager = /*#__PURE__*/function () {\n  /**\n   * @param {object} [context=null] An object to which event listeners will be stored.\n   * @private\n   */\n  function EventManager() {\n    var context = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    _classCallCheck(this, EventManager);\n    this.context = context || this;\n    if (!this.context.eventListeners) {\n      this.context.eventListeners = []; // TODO perf It would be more performant if every instance of EventManager tracked its own listeners only\n    }\n  }\n  /**\n   * Register specified listener (`eventName`) to the element.\n   *\n   * @param {Element} element Target element.\n   * @param {string} eventName Event name.\n   * @param {Function} callback Function which will be called after event occur.\n   * @param {AddEventListenerOptions|boolean} [options] Listener options if object or useCapture if boolean.\n   * @returns {Function} Returns function which you can easily call to remove that event.\n   */\n\n  _createClass(EventManager, [{\n    key: \"addEventListener\",\n    value: function addEventListener(element, eventName, callback) {\n      var _this = this;\n      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      /**\n       * @param {Event} event The event object.\n       */\n      function callbackProxy(event) {\n        callback.call(this, extendEvent(event));\n      }\n      if (typeof options !== 'boolean' && !isPassiveEventSupported()) {\n        options = false;\n      }\n      this.context.eventListeners.push({\n        element: element,\n        event: eventName,\n        callback: callback,\n        callbackProxy: callbackProxy,\n        options: options,\n        eventManager: this\n      });\n      element.addEventListener(eventName, callbackProxy, options);\n      listenersCounter += 1;\n      return function () {\n        _this.removeEventListener(element, eventName, callback);\n      };\n    }\n    /**\n     * Remove the event listener previously registered.\n     *\n     * @param {Element} element Target element.\n     * @param {string} eventName Event name.\n     * @param {Function} callback Function to remove from the event target. It must be the same as during registration listener.\n     * @param {boolean} [onlyOwnEvents] Whether whould remove only events registered using this instance of EventManager.\n     */\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(element, eventName, callback) {\n      var onlyOwnEvents = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      var len = this.context.eventListeners.length;\n      var tmpEvent;\n      while (len) {\n        len -= 1;\n        tmpEvent = this.context.eventListeners[len];\n        if (tmpEvent.event === eventName && tmpEvent.element === element) {\n          if (callback && callback !== tmpEvent.callback) {\n            /* eslint-disable no-continue */\n            continue;\n          }\n          if (onlyOwnEvents && tmpEvent.eventManager !== this) {\n            continue;\n          }\n          this.context.eventListeners.splice(len, 1);\n          tmpEvent.element.removeEventListener(tmpEvent.event, tmpEvent.callbackProxy, tmpEvent.options);\n          listenersCounter -= 1;\n        }\n      }\n    }\n    /**\n     * Clear all previously registered events.\n     *\n     * @private\n     * @since 0.15.0-beta3\n     * @param {boolean} [onlyOwnEvents] Whether whould remove only events registered using this instance of EventManager.\n     */\n  }, {\n    key: \"clearEvents\",\n    value: function clearEvents() {\n      var onlyOwnEvents = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      if (!this.context) {\n        return;\n      }\n      var len = this.context.eventListeners.length;\n      while (len) {\n        len -= 1;\n        var event = this.context.eventListeners[len];\n        if (onlyOwnEvents && event.eventManager !== this) {\n          continue;\n        }\n        this.context.eventListeners.splice(len, 1);\n        event.element.removeEventListener(event.event, event.callbackProxy, event.options);\n        listenersCounter -= 1;\n      }\n    }\n    /**\n     * Clear all previously registered events.\n     */\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.clearEvents();\n    }\n    /**\n     * Destroy instance of EventManager, clearing all events of the context.\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.clearEvents();\n      this.context = null;\n    }\n    /**\n     * Destroy instance of EventManager, clearing only the own events.\n     */\n  }, {\n    key: \"destroyWithOwnEventsOnly\",\n    value: function destroyWithOwnEventsOnly() {\n      this.clearEvents(true);\n      this.context = null;\n    }\n    /**\n     * Trigger event at the specified target element.\n     *\n     * @param {Element} element Target element.\n     * @param {string} eventName Event name.\n     */\n  }, {\n    key: \"fireEvent\",\n    value: function fireEvent(element, eventName) {\n      var rootDocument = element.document;\n      var rootWindow = element;\n      if (!rootDocument) {\n        rootDocument = element.ownerDocument ? element.ownerDocument : element;\n        rootWindow = rootDocument.defaultView;\n      }\n      var options = {\n        bubbles: true,\n        cancelable: eventName !== 'mousemove',\n        view: rootWindow,\n        detail: 0,\n        screenX: 0,\n        screenY: 0,\n        clientX: 1,\n        clientY: 1,\n        ctrlKey: false,\n        altKey: false,\n        shiftKey: false,\n        metaKey: false,\n        button: 0,\n        relatedTarget: undefined\n      };\n      var event;\n      if (rootDocument.createEvent) {\n        event = rootDocument.createEvent('MouseEvents');\n        event.initMouseEvent(eventName, options.bubbles, options.cancelable, options.view, options.detail, options.screenX, options.screenY, options.clientX, options.clientY, options.ctrlKey, options.altKey, options.shiftKey, options.metaKey, options.button, options.relatedTarget || rootDocument.body.parentNode);\n      } else {\n        event = rootDocument.createEventObject();\n      }\n      if (element.dispatchEvent) {\n        element.dispatchEvent(event);\n      } else {\n        element.fireEvent(\"on\".concat(eventName), event);\n      }\n    }\n  }]);\n  return EventManager;\n}();\n/**\n * @private\n * @param {Event} event The event object.\n * @returns {Event}\n */\n\nfunction extendEvent(event) {\n  var nativeStopImmediatePropagation = event.stopImmediatePropagation;\n  event.stopImmediatePropagation = function () {\n    nativeStopImmediatePropagation.apply(this);\n    _stopImmediatePropagation(this);\n  };\n  return event;\n}\nexport default EventManager;\n/**\n * @returns {number}\n */\n\nexport function getListenersCounter() {\n  return listenersCounter;\n}","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","isPassiveEventSupported","stopImmediatePropagation","_stopImmediatePropagation","listenersCounter","EventManager","context","arguments","undefined","eventListeners","value","addEventListener","element","eventName","callback","_this","options","callbackProxy","event","call","extendEvent","push","eventManager","removeEventListener","onlyOwnEvents","len","tmpEvent","splice","clearEvents","clear","destroy","destroyWithOwnEventsOnly","fireEvent","rootDocument","document","rootWindow","ownerDocument","defaultView","bubbles","cancelable","view","detail","screenX","screenY","clientX","clientY","ctrlKey","altKey","shiftKey","metaKey","button","relatedTarget","createEvent","initMouseEvent","body","parentNode","createEventObject","dispatchEvent","concat","nativeStopImmediatePropagation","apply","getListenersCounter"],"sources":["/Users/priyadeliwala/Desktop/sales-dashboard/node_modules/handsontable/eventManager.mjs"],"sourcesContent":["import \"core-js/modules/es.array.splice.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nimport { isPassiveEventSupported } from \"./helpers/feature.mjs\";\nimport { stopImmediatePropagation as _stopImmediatePropagation } from \"./helpers/dom/event.mjs\";\n/**\n * Counter which tracks unregistered listeners (useful for detecting memory leaks).\n *\n * @type {number}\n */\n\nvar listenersCounter = 0;\n/**\n * Event DOM manager for internal use in Handsontable.\n *\n * @class EventManager\n * @util\n */\n\nvar EventManager = /*#__PURE__*/function () {\n  /**\n   * @param {object} [context=null] An object to which event listeners will be stored.\n   * @private\n   */\n  function EventManager() {\n    var context = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n    _classCallCheck(this, EventManager);\n\n    this.context = context || this;\n\n    if (!this.context.eventListeners) {\n      this.context.eventListeners = []; // TODO perf It would be more performant if every instance of EventManager tracked its own listeners only\n    }\n  }\n  /**\n   * Register specified listener (`eventName`) to the element.\n   *\n   * @param {Element} element Target element.\n   * @param {string} eventName Event name.\n   * @param {Function} callback Function which will be called after event occur.\n   * @param {AddEventListenerOptions|boolean} [options] Listener options if object or useCapture if boolean.\n   * @returns {Function} Returns function which you can easily call to remove that event.\n   */\n\n\n  _createClass(EventManager, [{\n    key: \"addEventListener\",\n    value: function addEventListener(element, eventName, callback) {\n      var _this = this;\n\n      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      /**\n       * @param {Event} event The event object.\n       */\n      function callbackProxy(event) {\n        callback.call(this, extendEvent(event));\n      }\n\n      if (typeof options !== 'boolean' && !isPassiveEventSupported()) {\n        options = false;\n      }\n\n      this.context.eventListeners.push({\n        element: element,\n        event: eventName,\n        callback: callback,\n        callbackProxy: callbackProxy,\n        options: options,\n        eventManager: this\n      });\n      element.addEventListener(eventName, callbackProxy, options);\n      listenersCounter += 1;\n      return function () {\n        _this.removeEventListener(element, eventName, callback);\n      };\n    }\n    /**\n     * Remove the event listener previously registered.\n     *\n     * @param {Element} element Target element.\n     * @param {string} eventName Event name.\n     * @param {Function} callback Function to remove from the event target. It must be the same as during registration listener.\n     * @param {boolean} [onlyOwnEvents] Whether whould remove only events registered using this instance of EventManager.\n     */\n\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(element, eventName, callback) {\n      var onlyOwnEvents = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      var len = this.context.eventListeners.length;\n      var tmpEvent;\n\n      while (len) {\n        len -= 1;\n        tmpEvent = this.context.eventListeners[len];\n\n        if (tmpEvent.event === eventName && tmpEvent.element === element) {\n          if (callback && callback !== tmpEvent.callback) {\n            /* eslint-disable no-continue */\n            continue;\n          }\n\n          if (onlyOwnEvents && tmpEvent.eventManager !== this) {\n            continue;\n          }\n\n          this.context.eventListeners.splice(len, 1);\n          tmpEvent.element.removeEventListener(tmpEvent.event, tmpEvent.callbackProxy, tmpEvent.options);\n          listenersCounter -= 1;\n        }\n      }\n    }\n    /**\n     * Clear all previously registered events.\n     *\n     * @private\n     * @since 0.15.0-beta3\n     * @param {boolean} [onlyOwnEvents] Whether whould remove only events registered using this instance of EventManager.\n     */\n\n  }, {\n    key: \"clearEvents\",\n    value: function clearEvents() {\n      var onlyOwnEvents = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (!this.context) {\n        return;\n      }\n\n      var len = this.context.eventListeners.length;\n\n      while (len) {\n        len -= 1;\n        var event = this.context.eventListeners[len];\n\n        if (onlyOwnEvents && event.eventManager !== this) {\n          continue;\n        }\n\n        this.context.eventListeners.splice(len, 1);\n        event.element.removeEventListener(event.event, event.callbackProxy, event.options);\n        listenersCounter -= 1;\n      }\n    }\n    /**\n     * Clear all previously registered events.\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.clearEvents();\n    }\n    /**\n     * Destroy instance of EventManager, clearing all events of the context.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.clearEvents();\n      this.context = null;\n    }\n    /**\n     * Destroy instance of EventManager, clearing only the own events.\n     */\n\n  }, {\n    key: \"destroyWithOwnEventsOnly\",\n    value: function destroyWithOwnEventsOnly() {\n      this.clearEvents(true);\n      this.context = null;\n    }\n    /**\n     * Trigger event at the specified target element.\n     *\n     * @param {Element} element Target element.\n     * @param {string} eventName Event name.\n     */\n\n  }, {\n    key: \"fireEvent\",\n    value: function fireEvent(element, eventName) {\n      var rootDocument = element.document;\n      var rootWindow = element;\n\n      if (!rootDocument) {\n        rootDocument = element.ownerDocument ? element.ownerDocument : element;\n        rootWindow = rootDocument.defaultView;\n      }\n\n      var options = {\n        bubbles: true,\n        cancelable: eventName !== 'mousemove',\n        view: rootWindow,\n        detail: 0,\n        screenX: 0,\n        screenY: 0,\n        clientX: 1,\n        clientY: 1,\n        ctrlKey: false,\n        altKey: false,\n        shiftKey: false,\n        metaKey: false,\n        button: 0,\n        relatedTarget: undefined\n      };\n      var event;\n\n      if (rootDocument.createEvent) {\n        event = rootDocument.createEvent('MouseEvents');\n        event.initMouseEvent(eventName, options.bubbles, options.cancelable, options.view, options.detail, options.screenX, options.screenY, options.clientX, options.clientY, options.ctrlKey, options.altKey, options.shiftKey, options.metaKey, options.button, options.relatedTarget || rootDocument.body.parentNode);\n      } else {\n        event = rootDocument.createEventObject();\n      }\n\n      if (element.dispatchEvent) {\n        element.dispatchEvent(event);\n      } else {\n        element.fireEvent(\"on\".concat(eventName), event);\n      }\n    }\n  }]);\n\n  return EventManager;\n}();\n/**\n * @private\n * @param {Event} event The event object.\n * @returns {Event}\n */\n\n\nfunction extendEvent(event) {\n  var nativeStopImmediatePropagation = event.stopImmediatePropagation;\n\n  event.stopImmediatePropagation = function () {\n    nativeStopImmediatePropagation.apply(this);\n\n    _stopImmediatePropagation(this);\n  };\n\n  return event;\n}\n\nexport default EventManager;\n/**\n * @returns {number}\n */\n\nexport function getListenersCounter() {\n  return listenersCounter;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
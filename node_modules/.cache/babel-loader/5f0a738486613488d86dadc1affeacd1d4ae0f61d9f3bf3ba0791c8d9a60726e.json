{"ast":null,"code":"export var operations = {};\n/**\n * Get operation closure with pre-bound arguments.\n *\n * @param {string} id Operator `id`.\n * @returns {Function}\n */\n\nexport function getOperationFunc(id) {\n  if (!operations[id]) {\n    throw Error(\"Operation with id \\\"\".concat(id, \"\\\" does not exist.\"));\n  }\n  var func = operations[id].func;\n  return function (conditions, value) {\n    return func(conditions, value);\n  };\n}\n/**\n * Return name of operation which is displayed inside UI component, basing on it's `id`.\n *\n * @param {string} id `Id` of operation.\n * @returns {string}\n */\n\nexport function getOperationName(id) {\n  return operations[id].name;\n}\n/**\n * Operator registerer.\n *\n * @param {string} id Operation `id`.\n * @param {string} name Operation name which is displayed inside UI component.\n * @param {Function} func Operation function.\n */\n\nexport function registerOperation(id, name, func) {\n  operations[id] = {\n    name: name,\n    func: func\n  };\n}","map":{"version":3,"names":["operations","getOperationFunc","id","Error","concat","func","conditions","value","getOperationName","name","registerOperation"],"sources":["/Users/priyadeliwala/Desktop/sales-dashboard/node_modules/handsontable/plugins/filters/logicalOperationRegisterer.mjs"],"sourcesContent":["import \"core-js/modules/es.function.name.js\";\nexport var operations = {};\n/**\n * Get operation closure with pre-bound arguments.\n *\n * @param {string} id Operator `id`.\n * @returns {Function}\n */\n\nexport function getOperationFunc(id) {\n  if (!operations[id]) {\n    throw Error(\"Operation with id \\\"\".concat(id, \"\\\" does not exist.\"));\n  }\n\n  var func = operations[id].func;\n  return function (conditions, value) {\n    return func(conditions, value);\n  };\n}\n/**\n * Return name of operation which is displayed inside UI component, basing on it's `id`.\n *\n * @param {string} id `Id` of operation.\n * @returns {string}\n */\n\nexport function getOperationName(id) {\n  return operations[id].name;\n}\n/**\n * Operator registerer.\n *\n * @param {string} id Operation `id`.\n * @param {string} name Operation name which is displayed inside UI component.\n * @param {Function} func Operation function.\n */\n\nexport function registerOperation(id, name, func) {\n  operations[id] = {\n    name: name,\n    func: func\n  };\n}"],"mappings":"AACA,OAAO,IAAIA,UAAU,GAAG,CAAC,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,gBAAgBA,CAACC,EAAE,EAAE;EACnC,IAAI,CAACF,UAAU,CAACE,EAAE,CAAC,EAAE;IACnB,MAAMC,KAAK,CAAC,sBAAsB,CAACC,MAAM,CAACF,EAAE,EAAE,oBAAoB,CAAC,CAAC;EACtE;EAEA,IAAIG,IAAI,GAAGL,UAAU,CAACE,EAAE,CAAC,CAACG,IAAI;EAC9B,OAAO,UAAUC,UAAU,EAAEC,KAAK,EAAE;IAClC,OAAOF,IAAI,CAACC,UAAU,EAAEC,KAAK,CAAC;EAChC,CAAC;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,gBAAgBA,CAACN,EAAE,EAAE;EACnC,OAAOF,UAAU,CAACE,EAAE,CAAC,CAACO,IAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,iBAAiBA,CAACR,EAAE,EAAEO,IAAI,EAAEJ,IAAI,EAAE;EAChDL,UAAU,CAACE,EAAE,CAAC,GAAG;IACfO,IAAI,EAAEA,IAAI;IACVJ,IAAI,EAAEA;EACR,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
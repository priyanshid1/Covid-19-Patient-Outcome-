{"ast":null,"code":"function _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _s, _e;\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n  return _arr;\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _construct(Parent, args, Class) {\n  if (_isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nimport { addClass, clearTextSelection, empty, fastInnerHTML, fastInnerText, getScrollbarWidth, hasClass, isChildOf, isInput, isOutsideInput } from \"./helpers/dom/element.mjs\";\nimport EventManager from \"./eventManager.mjs\";\nimport { isImmediatePropagationStopped, isRightClick, isLeftClick } from \"./helpers/dom/event.mjs\";\nimport Walkontable, { CellCoords } from \"./3rdparty/walkontable/src/index.mjs\";\nimport { handleMouseEvent } from \"./selection/mouseEventHandler.mjs\";\nimport { isRootInstance } from \"./utils/rootInstance.mjs\";\nvar privatePool = new WeakMap();\n/**\n * @class TableView\n * @private\n */\n\nvar TableView = /*#__PURE__*/function () {\n  /**\n   * @param {Hanstontable} instance Instance of {@link Handsontable}.\n   */\n  function TableView(instance) {\n    _classCallCheck(this, TableView);\n\n    /**\n     * Instance of {@link Handsontable}.\n     *\n     * @private\n     * @type {Handsontable}\n     */\n    this.instance = instance;\n    /**\n     * Instance of {@link EventManager}.\n     *\n     * @private\n     * @type {EventManager}\n     */\n\n    this.eventManager = new EventManager(instance);\n    /**\n     * Current Handsontable's GridSettings object.\n     *\n     * @private\n     * @type {GridSettings}\n     */\n\n    this.settings = instance.getSettings();\n    /**\n     * Main <THEAD> element.\n     *\n     * @type {HTMLTableSectionElement}\n     */\n\n    this.THEAD = void 0;\n    /**\n     * Main <TBODY> element.\n     *\n     * @type {HTMLTableSectionElement}\n     */\n\n    this.TBODY = void 0;\n    /**\n     * Main Walkontable instance.\n     *\n     * @type {Walkontable}\n     */\n\n    this.wt = void 0;\n    /**\n     * Main Walkontable instance.\n     *\n     * @private\n     * @type {Walkontable}\n     */\n\n    this.activeWt = void 0;\n    /**\n     * The flag determines if the `adjustElementsSize` method call was made during\n     * the render suspending. If true, the method has to be triggered once after render\n     * resuming.\n     *\n     * @private\n     * @type {boolean}\n     */\n\n    this.postponedAdjustElementsSize = false;\n    privatePool.set(this, {\n      /**\n       * Defines if the text should be selected during mousemove.\n       *\n       * @private\n       * @type {boolean}\n       */\n      selectionMouseDown: false,\n      /**\n       * @private\n       * @type {boolean}\n       */\n      mouseDown: void 0,\n      /**\n       * Main <TABLE> element.\n       *\n       * @private\n       * @type {HTMLTableElement}\n       */\n      table: void 0,\n      /**\n       * Cached width of the rootElement.\n       *\n       * @type {number}\n       */\n      lastWidth: 0,\n      /**\n       * Cached height of the rootElement.\n       *\n       * @type {number}\n       */\n      lastHeight: 0\n    });\n    this.createElements();\n    this.registerEvents();\n    this.initializeWalkontable();\n  }\n  /**\n   * Renders WalkontableUI.\n   */\n\n  _createClass(TableView, [{\n    key: \"render\",\n    value: function render() {\n      if (!this.instance.isRenderSuspended()) {\n        this.instance.runHooks('beforeRender', this.instance.forceFullRender);\n        if (this.postponedAdjustElementsSize) {\n          this.postponedAdjustElementsSize = false;\n          this.adjustElementsSize(true);\n        }\n        this.wt.draw(!this.instance.forceFullRender);\n        this.instance.runHooks('afterRender', this.instance.forceFullRender);\n        this.instance.forceFullRender = false;\n        this.instance.renderCall = false;\n      }\n    }\n    /**\n     * Adjust overlays elements size and master table size.\n     *\n     * @param {boolean} [force=false] When `true`, it adjust the DOM nodes sizes for all overlays.\n     */\n  }, {\n    key: \"adjustElementsSize\",\n    value: function adjustElementsSize() {\n      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      if (this.instance.isRenderSuspended()) {\n        this.postponedAdjustElementsSize = true;\n      } else {\n        this.wt.wtOverlays.adjustElementsSize(force);\n      }\n    }\n    /**\n     * Returns td object given coordinates.\n     *\n     * @param {CellCoords} coords Renderable cell coordinates.\n     * @param {boolean} topmost Indicates whether the cell should be calculated from the topmost.\n     * @returns {HTMLTableCellElement|null}\n     */\n  }, {\n    key: \"getCellAtCoords\",\n    value: function getCellAtCoords(coords, topmost) {\n      var td = this.wt.getCell(coords, topmost);\n      if (td < 0) {\n        // there was an exit code (cell is out of bounds)\n        return null;\n      }\n      return td;\n    }\n    /**\n     * Scroll viewport to a cell.\n     *\n     * @param {CellCoords} coords Renderable cell coordinates.\n     * @param {boolean} [snapToTop] If `true`, viewport is scrolled to show the cell on the top of the table.\n     * @param {boolean} [snapToRight] If `true`, viewport is scrolled to show the cell on the right side of the table.\n     * @param {boolean} [snapToBottom] If `true`, viewport is scrolled to show the cell on the bottom side of the table.\n     * @param {boolean} [snapToLeft] If `true`, viewport is scrolled to show the cell on the left side of the table.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"scrollViewport\",\n    value: function scrollViewport(coords, snapToTop, snapToRight, snapToBottom, snapToLeft) {\n      return this.wt.scrollViewport(coords, snapToTop, snapToRight, snapToBottom, snapToLeft);\n    }\n    /**\n     * Scroll viewport to a column.\n     *\n     * @param {number} column Renderable column index.\n     * @param {boolean} [snapToRight] If `true`, viewport is scrolled to show the cell on the right side of the table.\n     * @param {boolean} [snapToLeft] If `true`, viewport is scrolled to show the cell on the left side of the table.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"scrollViewportHorizontally\",\n    value: function scrollViewportHorizontally(column, snapToRight, snapToLeft) {\n      return this.wt.scrollViewportHorizontally(column, snapToRight, snapToLeft);\n    }\n    /**\n     * Scroll viewport to a row.\n     *\n     * @param {number} row Renderable row index.\n     * @param {boolean} [snapToTop] If `true`, viewport is scrolled to show the cell on the top of the table.\n     * @param {boolean} [snapToBottom] If `true`, viewport is scrolled to show the cell on the bottom side of the table.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"scrollViewportVertically\",\n    value: function scrollViewportVertically(row, snapToTop, snapToBottom) {\n      return this.wt.scrollViewportVertically(row, snapToTop, snapToBottom);\n    }\n    /**\n     * Prepares DOMElements and adds correct className to the root element.\n     *\n     * @private\n     */\n  }, {\n    key: \"createElements\",\n    value: function createElements() {\n      var priv = privatePool.get(this);\n      var _this$instance = this.instance,\n        rootElement = _this$instance.rootElement,\n        rootDocument = _this$instance.rootDocument;\n      var originalStyle = rootElement.getAttribute('style');\n      if (originalStyle) {\n        rootElement.setAttribute('data-originalstyle', originalStyle); // needed to retrieve original style in jsFiddle link generator in HT examples. may be removed in future versions\n      }\n      addClass(rootElement, 'handsontable');\n      priv.table = rootDocument.createElement('TABLE');\n      addClass(priv.table, 'htCore');\n      if (this.instance.getSettings().tableClassName) {\n        addClass(priv.table, this.instance.getSettings().tableClassName);\n      }\n      this.THEAD = rootDocument.createElement('THEAD');\n      priv.table.appendChild(this.THEAD);\n      this.TBODY = rootDocument.createElement('TBODY');\n      priv.table.appendChild(this.TBODY);\n      this.instance.table = priv.table;\n      this.instance.container.insertBefore(priv.table, this.instance.container.firstChild);\n    }\n    /**\n     * Attaches necessary listeners.\n     *\n     * @private\n     */\n  }, {\n    key: \"registerEvents\",\n    value: function registerEvents() {\n      var _this = this;\n      var priv = privatePool.get(this);\n      var _this$instance2 = this.instance,\n        rootElement = _this$instance2.rootElement,\n        rootDocument = _this$instance2.rootDocument,\n        selection = _this$instance2.selection;\n      var documentElement = rootDocument.documentElement;\n      this.eventManager.addEventListener(rootElement, 'mousedown', function (event) {\n        priv.selectionMouseDown = true;\n        if (!_this.isTextSelectionAllowed(event.target)) {\n          var rootWindow = _this.instance.rootWindow;\n          clearTextSelection(rootWindow);\n          event.preventDefault();\n          rootWindow.focus(); // make sure that window that contains HOT is active. Important when HOT is in iframe.\n        }\n      });\n      this.eventManager.addEventListener(rootElement, 'mouseup', function () {\n        priv.selectionMouseDown = false;\n      });\n      this.eventManager.addEventListener(rootElement, 'mousemove', function (event) {\n        if (priv.selectionMouseDown && !_this.isTextSelectionAllowed(event.target)) {\n          // Clear selection only when fragmentSelection is enabled, otherwise clearing selection breakes the IME editor.\n          if (_this.settings.fragmentSelection) {\n            clearTextSelection(_this.instance.rootWindow);\n          }\n          event.preventDefault();\n        }\n      });\n      this.eventManager.addEventListener(documentElement, 'keyup', function (event) {\n        if (selection.isInProgress() && !event.shiftKey) {\n          selection.finish();\n        }\n      });\n      this.eventManager.addEventListener(documentElement, 'mouseup', function (event) {\n        if (selection.isInProgress() && isLeftClick(event)) {\n          // is left mouse button\n          selection.finish();\n        }\n        priv.mouseDown = false;\n        if (isOutsideInput(rootDocument.activeElement) || !selection.isSelected() && !selection.isSelectedByAnyHeader() && !rootElement.contains(event.target) && !isRightClick(event)) {\n          _this.instance.unlisten();\n        }\n      });\n      this.eventManager.addEventListener(documentElement, 'contextmenu', function (event) {\n        if (selection.isInProgress() && isRightClick(event)) {\n          selection.finish();\n          priv.mouseDown = false;\n        }\n      });\n      this.eventManager.addEventListener(documentElement, 'touchend', function () {\n        if (selection.isInProgress()) {\n          selection.finish();\n        }\n        priv.mouseDown = false;\n      });\n      this.eventManager.addEventListener(documentElement, 'mousedown', function (event) {\n        var originalTarget = event.target;\n        var eventX = event.x || event.clientX;\n        var eventY = event.y || event.clientY;\n        var next = event.target;\n        if (priv.mouseDown || !rootElement || !_this.instance.view) {\n          return; // it must have been started in a cell\n        } // immediate click on \"holder\" means click on the right side of vertical scrollbar\n\n        var holder = _this.instance.view.wt.wtTable.holder;\n        if (next === holder) {\n          var scrollbarWidth = getScrollbarWidth(rootDocument);\n          if (rootDocument.elementFromPoint(eventX + scrollbarWidth, eventY) !== holder || rootDocument.elementFromPoint(eventX, eventY + scrollbarWidth) !== holder) {\n            return;\n          }\n        } else {\n          while (next !== documentElement) {\n            if (next === null) {\n              if (event.isTargetWebComponent) {\n                break;\n              } // click on something that was a row but now is detached (possibly because your click triggered a rerender)\n\n              return;\n            }\n            if (next === rootElement) {\n              // click inside container\n              return;\n            }\n            next = next.parentNode;\n          }\n        } // function did not return until here, we have an outside click!\n\n        var outsideClickDeselects = typeof _this.settings.outsideClickDeselects === 'function' ? _this.settings.outsideClickDeselects(originalTarget) : _this.settings.outsideClickDeselects;\n        if (outsideClickDeselects) {\n          _this.instance.deselectCell();\n        } else {\n          _this.instance.destroyEditor(false, false);\n        }\n      });\n      this.eventManager.addEventListener(priv.table, 'selectstart', function (event) {\n        if (_this.settings.fragmentSelection || isInput(event.target)) {\n          return;\n        } // https://github.com/handsontable/handsontable/issues/160\n        // Prevent text from being selected when performing drag down.\n\n        event.preventDefault();\n      });\n    }\n    /**\n     * Translate renderable cell coordinates to visual coordinates.\n     *\n     * @param {CellCoords} coords The cell coordinates.\n     * @returns {CellCoords}\n     */\n  }, {\n    key: \"translateFromRenderableToVisualCoords\",\n    value: function translateFromRenderableToVisualCoords(_ref) {\n      var row = _ref.row,\n        col = _ref.col;\n      // TODO: To consider an idea to reusing the CellCoords instance instead creating new one.\n      return _construct(CellCoords, _toConsumableArray(this.translateFromRenderableToVisualIndex(row, col)));\n    }\n    /**\n     * Translate renderable row and column indexes to visual row and column indexes.\n     *\n     * @param {number} renderableRow Renderable row index.\n     * @param {number} renderableColumn Renderable columnIndex.\n     * @returns {number[]}\n     */\n  }, {\n    key: \"translateFromRenderableToVisualIndex\",\n    value: function translateFromRenderableToVisualIndex(renderableRow, renderableColumn) {\n      // TODO: Some helper may be needed.\n      // We perform translation for indexes (without headers).\n      var visualRow = renderableRow >= 0 ? this.instance.rowIndexMapper.getVisualFromRenderableIndex(renderableRow) : renderableRow;\n      var visualColumn = renderableColumn >= 0 ? this.instance.columnIndexMapper.getVisualFromRenderableIndex(renderableColumn) : renderableColumn;\n      if (visualRow === null) {\n        visualRow = renderableRow;\n      }\n      if (visualColumn === null) {\n        visualColumn = renderableColumn;\n      }\n      return [visualRow, visualColumn];\n    }\n    /**\n     * Returns the number of renderable indexes.\n     *\n     * @private\n     * @param {IndexMapper} indexMapper The IndexMapper instance for specific axis.\n     * @param {number} maxElements Maximum number of elements (rows or columns).\n     *\n     * @returns {number|*}\n     */\n  }, {\n    key: \"countRenderableIndexes\",\n    value: function countRenderableIndexes(indexMapper, maxElements) {\n      var consideredElements = Math.min(indexMapper.getNotTrimmedIndexesLength(), maxElements); // Don't take hidden indexes into account. We are looking just for renderable indexes.\n\n      var firstNotHiddenIndex = indexMapper.getFirstNotHiddenIndex(consideredElements - 1, -1); // There are no renderable indexes.\n\n      if (firstNotHiddenIndex === null) {\n        return 0;\n      }\n      return indexMapper.getRenderableFromVisualIndex(firstNotHiddenIndex) + 1;\n    }\n    /**\n     * Returns the number of renderable columns.\n     *\n     * @returns {number}\n     */\n  }, {\n    key: \"countRenderableColumns\",\n    value: function countRenderableColumns() {\n      return this.countRenderableIndexes(this.instance.columnIndexMapper, this.settings.maxCols);\n    }\n    /**\n     * Returns the number of renderable rows.\n     *\n     * @returns {number}\n     */\n  }, {\n    key: \"countRenderableRows\",\n    value: function countRenderableRows() {\n      return this.countRenderableIndexes(this.instance.rowIndexMapper, this.settings.maxRows);\n    }\n    /**\n     * Returns number of not hidden row indexes counting from the passed starting index.\n     * The counting direction can be controlled by `incrementBy` argument.\n     *\n     * @param {number} visualIndex The visual index from which the counting begins.\n     * @param {number} incrementBy If `-1` then counting is backwards or forward when `1`.\n     * @returns {number}\n     */\n  }, {\n    key: \"countNotHiddenRowIndexes\",\n    value: function countNotHiddenRowIndexes(visualIndex, incrementBy) {\n      return this.countNotHiddenIndexes(visualIndex, incrementBy, this.instance.rowIndexMapper, this.countRenderableRows());\n    }\n    /**\n     * Returns number of not hidden column indexes counting from the passed starting index.\n     * The counting direction can be controlled by `incrementBy` argument.\n     *\n     * @param {number} visualIndex The visual index from which the counting begins.\n     * @param {number} incrementBy If `-1` then counting is backwards or forward when `1`.\n     * @returns {number}\n     */\n  }, {\n    key: \"countNotHiddenColumnIndexes\",\n    value: function countNotHiddenColumnIndexes(visualIndex, incrementBy) {\n      return this.countNotHiddenIndexes(visualIndex, incrementBy, this.instance.columnIndexMapper, this.countRenderableColumns());\n    }\n    /**\n     * Returns number of not hidden indexes counting from the passed starting index.\n     * The counting direction can be controlled by `incrementBy` argument.\n     *\n     * @param {number} visualIndex The visual index from which the counting begins.\n     * @param {number} incrementBy If `-1` then counting is backwards or forward when `1`.\n     * @param {IndexMapper} indexMapper The IndexMapper instance for specific axis.\n     * @param {number} renderableIndexesCount Total count of renderable indexes for specific axis.\n     * @returns {number}\n     */\n  }, {\n    key: \"countNotHiddenIndexes\",\n    value: function countNotHiddenIndexes(visualIndex, incrementBy, indexMapper, renderableIndexesCount) {\n      if (isNaN(visualIndex) || visualIndex < 0) {\n        return 0;\n      }\n      var firstVisibleIndex = indexMapper.getFirstNotHiddenIndex(visualIndex, incrementBy);\n      var renderableIndex = indexMapper.getRenderableFromVisualIndex(firstVisibleIndex);\n      if (!Number.isInteger(renderableIndex)) {\n        return 0;\n      }\n      var notHiddenIndexes = 0;\n      if (incrementBy < 0) {\n        // Zero-based numbering for renderable indexes corresponds to a number of not hidden indexes.\n        notHiddenIndexes = renderableIndex + 1;\n      } else if (incrementBy > 0) {\n        notHiddenIndexes = renderableIndexesCount - renderableIndex;\n      }\n      return notHiddenIndexes;\n    }\n    /**\n     * Defines default configuration and initializes WalkOnTable intance.\n     *\n     * @private\n     */\n  }, {\n    key: \"initializeWalkontable\",\n    value: function initializeWalkontable() {\n      var _this2 = this;\n      var priv = privatePool.get(this);\n      var walkontableConfig = {\n        externalRowCalculator: this.instance.getPlugin('autoRowSize') && this.instance.getPlugin('autoRowSize').isEnabled(),\n        table: priv.table,\n        isDataViewInstance: function isDataViewInstance() {\n          return isRootInstance(_this2.instance);\n        },\n        preventOverflow: function preventOverflow() {\n          return _this2.settings.preventOverflow;\n        },\n        preventWheel: function preventWheel() {\n          return _this2.settings.preventWheel;\n        },\n        stretchH: function stretchH() {\n          return _this2.settings.stretchH;\n        },\n        data: function data(renderableRow, renderableColumn) {\n          var _this2$instance;\n          return (_this2$instance = _this2.instance).getDataAtCell.apply(_this2$instance, _toConsumableArray(_this2.translateFromRenderableToVisualIndex(renderableRow, renderableColumn)));\n        },\n        totalRows: function totalRows() {\n          return _this2.countRenderableRows();\n        },\n        totalColumns: function totalColumns() {\n          return _this2.countRenderableColumns();\n        },\n        // Number of renderable columns for the left overlay.\n        fixedColumnsLeft: function fixedColumnsLeft() {\n          var countCols = _this2.instance.countCols();\n          var visualFixedColumnsLeft = Math.min(parseInt(_this2.settings.fixedColumnsLeft, 10), countCols) - 1;\n          return _this2.countNotHiddenColumnIndexes(visualFixedColumnsLeft, -1);\n        },\n        // Number of renderable rows for the top overlay.\n        fixedRowsTop: function fixedRowsTop() {\n          var countRows = _this2.instance.countRows();\n          var visualFixedRowsTop = Math.min(parseInt(_this2.settings.fixedRowsTop, 10), countRows) - 1;\n          return _this2.countNotHiddenRowIndexes(visualFixedRowsTop, -1);\n        },\n        // Number of renderable rows for the bottom overlay.\n        fixedRowsBottom: function fixedRowsBottom() {\n          var countRows = _this2.instance.countRows();\n          var visualFixedRowsBottom = Math.max(countRows - parseInt(_this2.settings.fixedRowsBottom, 10), 0);\n          return _this2.countNotHiddenRowIndexes(visualFixedRowsBottom, 1);\n        },\n        // Enable the left overlay when conditions are met.\n        shouldRenderLeftOverlay: function shouldRenderLeftOverlay() {\n          return _this2.settings.fixedColumnsLeft > 0 || walkontableConfig.rowHeaders().length > 0;\n        },\n        // Enable the top overlay when conditions are met.\n        shouldRenderTopOverlay: function shouldRenderTopOverlay() {\n          return _this2.settings.fixedRowsTop > 0 || walkontableConfig.columnHeaders().length > 0;\n        },\n        // Enable the bottom overlay when conditions are met.\n        shouldRenderBottomOverlay: function shouldRenderBottomOverlay() {\n          return _this2.settings.fixedRowsBottom > 0;\n        },\n        minSpareRows: function minSpareRows() {\n          return _this2.settings.minSpareRows;\n        },\n        renderAllRows: this.settings.renderAllRows,\n        rowHeaders: function rowHeaders() {\n          var headerRenderers = [];\n          if (_this2.instance.hasRowHeaders()) {\n            headerRenderers.push(function (renderableRowIndex, TH) {\n              // TODO: Some helper may be needed.\n              // We perform translation for row indexes (without row headers).\n              var visualRowIndex = renderableRowIndex >= 0 ? _this2.instance.rowIndexMapper.getVisualFromRenderableIndex(renderableRowIndex) : renderableRowIndex;\n              _this2.appendRowHeader(visualRowIndex, TH);\n            });\n          }\n          _this2.instance.runHooks('afterGetRowHeaderRenderers', headerRenderers);\n          return headerRenderers;\n        },\n        columnHeaders: function columnHeaders() {\n          var headerRenderers = [];\n          if (_this2.instance.hasColHeaders()) {\n            headerRenderers.push(function (renderedColumnIndex, TH) {\n              // TODO: Some helper may be needed.\n              // We perform translation for columns indexes (without column headers).\n              var visualColumnsIndex = renderedColumnIndex >= 0 ? _this2.instance.columnIndexMapper.getVisualFromRenderableIndex(renderedColumnIndex) : renderedColumnIndex;\n              _this2.appendColHeader(visualColumnsIndex, TH);\n            });\n          }\n          _this2.instance.runHooks('afterGetColumnHeaderRenderers', headerRenderers);\n          return headerRenderers;\n        },\n        columnWidth: function columnWidth(renderedColumnIndex) {\n          var visualIndex = _this2.instance.columnIndexMapper.getVisualFromRenderableIndex(renderedColumnIndex); // It's not a bug that we can't find visual index for some handled by method indexes. The function is called also\n          // for not displayed indexes (beyond the table boundaries), i.e. when `fixedColumnsLeft` > `startCols` (wrong config?) or\n          // scrolling and dataset is empty (scroll should handle that?).\n\n          return _this2.instance.getColWidth(visualIndex === null ? renderedColumnIndex : visualIndex);\n        },\n        rowHeight: function rowHeight(renderedRowIndex) {\n          var visualIndex = _this2.instance.rowIndexMapper.getVisualFromRenderableIndex(renderedRowIndex);\n          return _this2.instance.getRowHeight(visualIndex === null ? renderedRowIndex : visualIndex);\n        },\n        cellRenderer: function cellRenderer(renderedRowIndex, renderedColumnIndex, TD) {\n          var _this2$translateFromR = _this2.translateFromRenderableToVisualIndex(renderedRowIndex, renderedColumnIndex),\n            _this2$translateFromR2 = _slicedToArray(_this2$translateFromR, 2),\n            visualRowIndex = _this2$translateFromR2[0],\n            visualColumnIndex = _this2$translateFromR2[1]; // Coords may be modified. For example, by the `MergeCells` plugin. It should affect cell value and cell meta.\n\n          var modifiedCellCoords = _this2.instance.runHooks('modifyGetCellCoords', visualRowIndex, visualColumnIndex);\n          var visualRowToCheck = visualRowIndex;\n          var visualColumnToCheck = visualColumnIndex;\n          if (Array.isArray(modifiedCellCoords)) {\n            var _modifiedCellCoords = _slicedToArray(modifiedCellCoords, 2);\n            visualRowToCheck = _modifiedCellCoords[0];\n            visualColumnToCheck = _modifiedCellCoords[1];\n          }\n          var cellProperties = _this2.instance.getCellMeta(visualRowToCheck, visualColumnToCheck);\n          var prop = _this2.instance.colToProp(visualColumnToCheck);\n          var value = _this2.instance.getDataAtRowProp(visualRowToCheck, prop);\n          if (_this2.instance.hasHook('beforeValueRender')) {\n            value = _this2.instance.runHooks('beforeValueRender', value, cellProperties);\n          }\n          _this2.instance.runHooks('beforeRenderer', TD, visualRowIndex, visualColumnIndex, prop, value, cellProperties);\n          _this2.instance.getCellRenderer(cellProperties)(_this2.instance, TD, visualRowIndex, visualColumnIndex, prop, value, cellProperties);\n          _this2.instance.runHooks('afterRenderer', TD, visualRowIndex, visualColumnIndex, prop, value, cellProperties);\n        },\n        selections: this.instance.selection.highlight,\n        hideBorderOnMouseDownOver: function hideBorderOnMouseDownOver() {\n          return _this2.settings.fragmentSelection;\n        },\n        onWindowResize: function onWindowResize() {\n          if (!_this2.instance || _this2.instance.isDestroyed) {\n            return;\n          }\n          _this2.instance.refreshDimensions();\n        },\n        onCellMouseDown: function onCellMouseDown(event, coords, TD, wt) {\n          var visualCoords = _this2.translateFromRenderableToVisualCoords(coords);\n          var controller = {\n            row: false,\n            column: false,\n            cell: false\n          };\n          _this2.instance.listen();\n          _this2.activeWt = wt;\n          priv.mouseDown = true;\n          _this2.instance.runHooks('beforeOnCellMouseDown', event, visualCoords, TD, controller);\n          if (isImmediatePropagationStopped(event)) {\n            return;\n          }\n          handleMouseEvent(event, {\n            coords: visualCoords,\n            selection: _this2.instance.selection,\n            controller: controller\n          });\n          _this2.instance.runHooks('afterOnCellMouseDown', event, visualCoords, TD);\n          _this2.activeWt = _this2.wt;\n        },\n        onCellContextMenu: function onCellContextMenu(event, coords, TD, wt) {\n          var visualCoords = _this2.translateFromRenderableToVisualCoords(coords);\n          _this2.activeWt = wt;\n          priv.mouseDown = false;\n          if (_this2.instance.selection.isInProgress()) {\n            _this2.instance.selection.finish();\n          }\n          _this2.instance.runHooks('beforeOnCellContextMenu', event, visualCoords, TD);\n          if (isImmediatePropagationStopped(event)) {\n            return;\n          }\n          _this2.instance.runHooks('afterOnCellContextMenu', event, visualCoords, TD);\n          _this2.activeWt = _this2.wt;\n        },\n        onCellMouseOut: function onCellMouseOut(event, coords, TD, wt) {\n          var visualCoords = _this2.translateFromRenderableToVisualCoords(coords);\n          _this2.activeWt = wt;\n          _this2.instance.runHooks('beforeOnCellMouseOut', event, visualCoords, TD);\n          if (isImmediatePropagationStopped(event)) {\n            return;\n          }\n          _this2.instance.runHooks('afterOnCellMouseOut', event, visualCoords, TD);\n          _this2.activeWt = _this2.wt;\n        },\n        onCellMouseOver: function onCellMouseOver(event, coords, TD, wt) {\n          var visualCoords = _this2.translateFromRenderableToVisualCoords(coords);\n          var controller = {\n            row: false,\n            column: false,\n            cell: false\n          };\n          _this2.activeWt = wt;\n          _this2.instance.runHooks('beforeOnCellMouseOver', event, visualCoords, TD, controller);\n          if (isImmediatePropagationStopped(event)) {\n            return;\n          }\n          if (priv.mouseDown) {\n            handleMouseEvent(event, {\n              coords: visualCoords,\n              selection: _this2.instance.selection,\n              controller: controller\n            });\n          }\n          _this2.instance.runHooks('afterOnCellMouseOver', event, visualCoords, TD);\n          _this2.activeWt = _this2.wt;\n        },\n        onCellMouseUp: function onCellMouseUp(event, coords, TD, wt) {\n          var visualCoords = _this2.translateFromRenderableToVisualCoords(coords);\n          _this2.activeWt = wt;\n          _this2.instance.runHooks('beforeOnCellMouseUp', event, visualCoords, TD); // TODO: The second condition check is a workaround. Callback corresponding the method `updateSettings`\n          // disable plugin and enable it again. Disabling plugin closes the menu. Thus, calling the\n          // `updateSettings` in a body of any callback executed right after some context-menu action\n          // breaks the table (#7231).\n\n          if (isImmediatePropagationStopped(event) || _this2.instance.isDestroyed) {\n            return;\n          }\n          _this2.instance.runHooks('afterOnCellMouseUp', event, visualCoords, TD);\n          _this2.activeWt = _this2.wt;\n        },\n        onCellCornerMouseDown: function onCellCornerMouseDown(event) {\n          event.preventDefault();\n          _this2.instance.runHooks('afterOnCellCornerMouseDown', event);\n        },\n        onCellCornerDblClick: function onCellCornerDblClick(event) {\n          event.preventDefault();\n          _this2.instance.runHooks('afterOnCellCornerDblClick', event);\n        },\n        beforeDraw: function beforeDraw(force, skipRender) {\n          return _this2.beforeRender(force, skipRender);\n        },\n        onDraw: function onDraw(force) {\n          return _this2.afterRender(force);\n        },\n        onScrollVertically: function onScrollVertically() {\n          return _this2.instance.runHooks('afterScrollVertically');\n        },\n        onScrollHorizontally: function onScrollHorizontally() {\n          return _this2.instance.runHooks('afterScrollHorizontally');\n        },\n        onBeforeRemoveCellClassNames: function onBeforeRemoveCellClassNames() {\n          return _this2.instance.runHooks('beforeRemoveCellClassNames');\n        },\n        onBeforeHighlightingRowHeader: function onBeforeHighlightingRowHeader(renderableRow, headerLevel, highlightMeta) {\n          var rowMapper = _this2.instance.rowIndexMapper;\n          var visualRow = rowMapper.getVisualFromRenderableIndex(renderableRow);\n          var newVisualRow = _this2.instance.runHooks('beforeHighlightingRowHeader', visualRow, headerLevel, highlightMeta);\n          return rowMapper.getRenderableFromVisualIndex(rowMapper.getFirstNotHiddenIndex(newVisualRow, 1));\n        },\n        onBeforeHighlightingColumnHeader: function onBeforeHighlightingColumnHeader(renderableColumn, headerLevel, highlightMeta) {\n          var columnMapper = _this2.instance.columnIndexMapper;\n          var visualColumn = columnMapper.getVisualFromRenderableIndex(renderableColumn);\n          var newVisualColumn = _this2.instance.runHooks('beforeHighlightingColumnHeader', visualColumn, headerLevel, highlightMeta);\n          return columnMapper.getRenderableFromVisualIndex(columnMapper.getFirstNotHiddenIndex(newVisualColumn, 1));\n        },\n        onAfterDrawSelection: function onAfterDrawSelection(currentRow, currentColumn, layerLevel) {\n          var cornersOfSelection;\n          var _this2$translateFromR3 = _this2.translateFromRenderableToVisualIndex(currentRow, currentColumn),\n            _this2$translateFromR4 = _slicedToArray(_this2$translateFromR3, 2),\n            visualRowIndex = _this2$translateFromR4[0],\n            visualColumnIndex = _this2$translateFromR4[1];\n          var selectedRange = _this2.instance.selection.getSelectedRange();\n          var selectionRangeSize = selectedRange.size();\n          if (selectionRangeSize > 0) {\n            // Selection layers are stored from the \"oldest\" to the \"newest\". We should calculate the offset.\n            // Please look at the `SelectedRange` class and it's method for getting selection's layer for more information.\n            var selectionOffset = (layerLevel !== null && layerLevel !== void 0 ? layerLevel : 0) + 1 - selectionRangeSize;\n            var selectionForLayer = selectedRange.peekByIndex(selectionOffset);\n            cornersOfSelection = [selectionForLayer.from.row, selectionForLayer.from.col, selectionForLayer.to.row, selectionForLayer.to.col];\n          }\n          return _this2.instance.runHooks('afterDrawSelection', visualRowIndex, visualColumnIndex, cornersOfSelection, layerLevel);\n        },\n        onBeforeDrawBorders: function onBeforeDrawBorders(corners, borderClassName) {\n          var _corners = _slicedToArray(corners, 4),\n            startRenderableRow = _corners[0],\n            startRenderableColumn = _corners[1],\n            endRenderableRow = _corners[2],\n            endRenderableColumn = _corners[3];\n          var visualCorners = [_this2.instance.rowIndexMapper.getVisualFromRenderableIndex(startRenderableRow), _this2.instance.columnIndexMapper.getVisualFromRenderableIndex(startRenderableColumn), _this2.instance.rowIndexMapper.getVisualFromRenderableIndex(endRenderableRow), _this2.instance.columnIndexMapper.getVisualFromRenderableIndex(endRenderableColumn)];\n          return _this2.instance.runHooks('beforeDrawBorders', visualCorners, borderClassName);\n        },\n        onBeforeTouchScroll: function onBeforeTouchScroll() {\n          return _this2.instance.runHooks('beforeTouchScroll');\n        },\n        onAfterMomentumScroll: function onAfterMomentumScroll() {\n          return _this2.instance.runHooks('afterMomentumScroll');\n        },\n        onBeforeStretchingColumnWidth: function onBeforeStretchingColumnWidth(stretchedWidth, renderedColumnIndex) {\n          var visualColumnIndex = _this2.instance.columnIndexMapper.getVisualFromRenderableIndex(renderedColumnIndex);\n          return _this2.instance.runHooks('beforeStretchingColumnWidth', stretchedWidth, visualColumnIndex);\n        },\n        onModifyRowHeaderWidth: function onModifyRowHeaderWidth(rowHeaderWidth) {\n          return _this2.instance.runHooks('modifyRowHeaderWidth', rowHeaderWidth);\n        },\n        onModifyGetCellCoords: function onModifyGetCellCoords(renderableRowIndex, renderableColumnIndex, topmost) {\n          var rowMapper = _this2.instance.rowIndexMapper;\n          var columnMapper = _this2.instance.columnIndexMapper; // Callback handle also headers. We shouldn't translate them.\n\n          var visualColumnIndex = renderableColumnIndex >= 0 ? columnMapper.getVisualFromRenderableIndex(renderableColumnIndex) : renderableColumnIndex;\n          var visualRowIndex = renderableRowIndex >= 0 ? rowMapper.getVisualFromRenderableIndex(renderableRowIndex) : renderableRowIndex;\n          var visualIndexes = _this2.instance.runHooks('modifyGetCellCoords', visualRowIndex, visualColumnIndex, topmost);\n          if (Array.isArray(visualIndexes)) {\n            var _visualIndexes = _slicedToArray(visualIndexes, 4),\n              visualRowFrom = _visualIndexes[0],\n              visualColumnFrom = _visualIndexes[1],\n              visualRowTo = _visualIndexes[2],\n              visualColumnTo = _visualIndexes[3]; // Result of the hook is handled by the Walkontable (renderable indexes).\n\n            return [visualRowFrom >= 0 ? rowMapper.getRenderableFromVisualIndex(rowMapper.getFirstNotHiddenIndex(visualRowFrom, 1)) : visualRowFrom, visualColumnFrom >= 0 ? columnMapper.getRenderableFromVisualIndex(columnMapper.getFirstNotHiddenIndex(visualColumnFrom, 1)) : visualColumnFrom, visualRowTo >= 0 ? rowMapper.getRenderableFromVisualIndex(rowMapper.getFirstNotHiddenIndex(visualRowTo, -1)) : visualRowTo, visualColumnTo >= 0 ? columnMapper.getRenderableFromVisualIndex(columnMapper.getFirstNotHiddenIndex(visualColumnTo, -1)) : visualColumnTo];\n          }\n        },\n        viewportRowCalculatorOverride: function viewportRowCalculatorOverride(calc) {\n          var viewportOffset = _this2.settings.viewportRowRenderingOffset;\n          if (viewportOffset === 'auto' && _this2.settings.fixedRowsTop) {\n            viewportOffset = 10;\n          }\n          if (viewportOffset > 0 || viewportOffset === 'auto') {\n            var renderableRows = _this2.countRenderableRows();\n            var firstRenderedRow = calc.startRow;\n            var lastRenderedRow = calc.endRow;\n            if (typeof viewportOffset === 'number') {\n              calc.startRow = Math.max(firstRenderedRow - viewportOffset, 0);\n              calc.endRow = Math.min(lastRenderedRow + viewportOffset, renderableRows - 1);\n            } else if (viewportOffset === 'auto') {\n              var offset = Math.ceil(lastRenderedRow / renderableRows * 12);\n              calc.startRow = Math.max(firstRenderedRow - offset, 0);\n              calc.endRow = Math.min(lastRenderedRow + offset, renderableRows - 1);\n            }\n          }\n          _this2.instance.runHooks('afterViewportRowCalculatorOverride', calc);\n        },\n        viewportColumnCalculatorOverride: function viewportColumnCalculatorOverride(calc) {\n          var viewportOffset = _this2.settings.viewportColumnRenderingOffset;\n          if (viewportOffset === 'auto' && _this2.settings.fixedColumnsLeft) {\n            viewportOffset = 10;\n          }\n          if (viewportOffset > 0 || viewportOffset === 'auto') {\n            var renderableColumns = _this2.countRenderableColumns();\n            var firstRenderedColumn = calc.startColumn;\n            var lastRenderedColumn = calc.endColumn;\n            if (typeof viewportOffset === 'number') {\n              calc.startColumn = Math.max(firstRenderedColumn - viewportOffset, 0);\n              calc.endColumn = Math.min(lastRenderedColumn + viewportOffset, renderableColumns - 1);\n            }\n            if (viewportOffset === 'auto') {\n              var offset = Math.ceil(lastRenderedColumn / renderableColumns * 6);\n              calc.startColumn = Math.max(firstRenderedColumn - offset, 0);\n              calc.endColumn = Math.min(lastRenderedColumn + offset, renderableColumns - 1);\n            }\n          }\n          _this2.instance.runHooks('afterViewportColumnCalculatorOverride', calc);\n        },\n        rowHeaderWidth: function rowHeaderWidth() {\n          return _this2.settings.rowHeaderWidth;\n        },\n        columnHeaderHeight: function columnHeaderHeight() {\n          var columnHeaderHeight = _this2.instance.runHooks('modifyColumnHeaderHeight');\n          return _this2.settings.columnHeaderHeight || columnHeaderHeight;\n        }\n      };\n      this.instance.runHooks('beforeInitWalkontable', walkontableConfig);\n      this.wt = new Walkontable(walkontableConfig);\n      this.activeWt = this.wt;\n      var spreader = this.wt.wtTable.spreader; // We have to cache width and height after Walkontable initialization.\n\n      var _this$instance$rootEl = this.instance.rootElement.getBoundingClientRect(),\n        width = _this$instance$rootEl.width,\n        height = _this$instance$rootEl.height;\n      this.setLastSize(width, height);\n      this.eventManager.addEventListener(spreader, 'mousedown', function (event) {\n        // right mouse button exactly on spreader means right click on the right hand side of vertical scrollbar\n        if (event.target === spreader && event.which === 3) {\n          event.stopPropagation();\n        }\n      });\n      this.eventManager.addEventListener(spreader, 'contextmenu', function (event) {\n        // right mouse button exactly on spreader means right click on the right hand side of vertical scrollbar\n        if (event.target === spreader && event.which === 3) {\n          event.stopPropagation();\n        }\n      });\n      this.eventManager.addEventListener(this.instance.rootDocument.documentElement, 'click', function () {\n        if (_this2.settings.observeDOMVisibility) {\n          if (_this2.wt.drawInterrupted) {\n            _this2.instance.forceFullRender = true;\n            _this2.render();\n          }\n        }\n      });\n    }\n    /**\n     * Checks if it's possible to create text selection in element.\n     *\n     * @private\n     * @param {HTMLElement} el The element to check.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"isTextSelectionAllowed\",\n    value: function isTextSelectionAllowed(el) {\n      if (isInput(el)) {\n        return true;\n      }\n      var isChildOfTableBody = isChildOf(el, this.instance.view.wt.wtTable.spreader);\n      if (this.settings.fragmentSelection === true && isChildOfTableBody) {\n        return true;\n      }\n      if (this.settings.fragmentSelection === 'cell' && this.isSelectedOnlyCell() && isChildOfTableBody) {\n        return true;\n      }\n      if (!this.settings.fragmentSelection && this.isCellEdited() && this.isSelectedOnlyCell()) {\n        return true;\n      }\n      return false;\n    }\n    /**\n     * Checks if user's been called mousedown.\n     *\n     * @private\n     * @returns {boolean}\n     */\n  }, {\n    key: \"isMouseDown\",\n    value: function isMouseDown() {\n      return privatePool.get(this).mouseDown;\n    }\n    /**\n     * Check if selected only one cell.\n     *\n     * @private\n     * @returns {boolean}\n     */\n  }, {\n    key: \"isSelectedOnlyCell\",\n    value: function isSelectedOnlyCell() {\n      var _this$instance$getSel, _this$instance$getSel2;\n      return (_this$instance$getSel = (_this$instance$getSel2 = this.instance.getSelectedRangeLast()) === null || _this$instance$getSel2 === void 0 ? void 0 : _this$instance$getSel2.isSingle()) !== null && _this$instance$getSel !== void 0 ? _this$instance$getSel : false;\n    }\n    /**\n     * Checks if active cell is editing.\n     *\n     * @private\n     * @returns {boolean}\n     */\n  }, {\n    key: \"isCellEdited\",\n    value: function isCellEdited() {\n      var activeEditor = this.instance.getActiveEditor();\n      return activeEditor && activeEditor.isOpened();\n    }\n    /**\n     * `beforeDraw` callback.\n     *\n     * @private\n     * @param {boolean} force If `true` rendering was triggered by a change of settings or data or `false` if\n     *                        rendering was triggered by scrolling or moving selection.\n     * @param {object} skipRender Object with `skipRender` property, if it is set to `true ` the next rendering\n     *                            cycle will be skipped.\n     */\n  }, {\n    key: \"beforeRender\",\n    value: function beforeRender(force, skipRender) {\n      if (force) {\n        // this.instance.forceFullRender = did Handsontable request full render?\n        this.instance.runHooks('beforeViewRender', this.instance.forceFullRender, skipRender);\n      }\n    }\n    /**\n     * `afterRender` callback.\n     *\n     * @private\n     * @param {boolean} force If `true` rendering was triggered by a change of settings or data or `false` if\n     *                        rendering was triggered by scrolling or moving selection.\n     */\n  }, {\n    key: \"afterRender\",\n    value: function afterRender(force) {\n      if (force) {\n        // this.instance.forceFullRender = did Handsontable request full render?\n        this.instance.runHooks('afterViewRender', this.instance.forceFullRender);\n      }\n    }\n    /**\n     * Append row header to a TH element.\n     *\n     * @private\n     * @param {number} visualRowIndex The visual row index.\n     * @param {HTMLTableHeaderCellElement} TH The table header element.\n     */\n  }, {\n    key: \"appendRowHeader\",\n    value: function appendRowHeader(visualRowIndex, TH) {\n      if (TH.firstChild) {\n        var container = TH.firstChild;\n        if (!hasClass(container, 'relative')) {\n          empty(TH);\n          this.appendRowHeader(visualRowIndex, TH);\n          return;\n        }\n        this.updateCellHeader(container.querySelector('.rowHeader'), visualRowIndex, this.instance.getRowHeader);\n      } else {\n        var _this$instance3 = this.instance,\n          rootDocument = _this$instance3.rootDocument,\n          getRowHeader = _this$instance3.getRowHeader;\n        var div = rootDocument.createElement('div');\n        var span = rootDocument.createElement('span');\n        div.className = 'relative';\n        span.className = 'rowHeader';\n        this.updateCellHeader(span, visualRowIndex, getRowHeader);\n        div.appendChild(span);\n        TH.appendChild(div);\n      }\n      this.instance.runHooks('afterGetRowHeader', visualRowIndex, TH);\n    }\n    /**\n     * Append column header to a TH element.\n     *\n     * @private\n     * @param {number} visualColumnIndex Visual column index.\n     * @param {HTMLTableHeaderCellElement} TH The table header element.\n     */\n  }, {\n    key: \"appendColHeader\",\n    value: function appendColHeader(visualColumnIndex, TH) {\n      if (TH.firstChild) {\n        var container = TH.firstChild;\n        if (hasClass(container, 'relative')) {\n          this.updateCellHeader(container.querySelector('.colHeader'), visualColumnIndex, this.instance.getColHeader);\n        } else {\n          empty(TH);\n          this.appendColHeader(visualColumnIndex, TH);\n        }\n      } else {\n        var rootDocument = this.instance.rootDocument;\n        var div = rootDocument.createElement('div');\n        var span = rootDocument.createElement('span');\n        div.className = 'relative';\n        span.className = 'colHeader';\n        this.updateCellHeader(span, visualColumnIndex, this.instance.getColHeader);\n        div.appendChild(span);\n        TH.appendChild(div);\n      }\n      this.instance.runHooks('afterGetColHeader', visualColumnIndex, TH);\n    }\n    /**\n     * Updates header cell content.\n     *\n     * @since 0.15.0-beta4\n     * @param {HTMLElement} element Element to update.\n     * @param {number} index Row index or column index.\n     * @param {Function} content Function which should be returns content for this cell.\n     */\n  }, {\n    key: \"updateCellHeader\",\n    value: function updateCellHeader(element, index, content) {\n      var renderedIndex = index;\n      var parentOverlay = this.wt.wtOverlays.getParentOverlay(element) || this.wt; // prevent wrong calculations from SampleGenerator\n\n      if (element.parentNode) {\n        if (hasClass(element, 'colHeader')) {\n          renderedIndex = parentOverlay.wtTable.columnFilter.sourceToRendered(index);\n        } else if (hasClass(element, 'rowHeader')) {\n          renderedIndex = parentOverlay.wtTable.rowFilter.sourceToRendered(index);\n        }\n      }\n      if (renderedIndex > -1) {\n        fastInnerHTML(element, content(index));\n      } else {\n        // workaround for https://github.com/handsontable/handsontable/issues/1946\n        fastInnerText(element, String.fromCharCode(160));\n        addClass(element, 'cornerHeader');\n      }\n    }\n    /**\n     * Given a element's left position relative to the viewport, returns maximum element width until the right\n     * edge of the viewport (before scrollbar).\n     *\n     * @private\n     * @param {number} leftOffset The left offset.\n     * @returns {number}\n     */\n  }, {\n    key: \"maximumVisibleElementWidth\",\n    value: function maximumVisibleElementWidth(leftOffset) {\n      var workspaceWidth = this.wt.wtViewport.getWorkspaceWidth();\n      var maxWidth = workspaceWidth - leftOffset;\n      return maxWidth > 0 ? maxWidth : 0;\n    }\n    /**\n     * Given a element's top position relative to the viewport, returns maximum element height until the bottom\n     * edge of the viewport (before scrollbar).\n     *\n     * @private\n     * @param {number} topOffset The top offset.\n     * @returns {number}\n     */\n  }, {\n    key: \"maximumVisibleElementHeight\",\n    value: function maximumVisibleElementHeight(topOffset) {\n      var workspaceHeight = this.wt.wtViewport.getWorkspaceHeight();\n      var maxHeight = workspaceHeight - topOffset;\n      return maxHeight > 0 ? maxHeight : 0;\n    }\n    /**\n     * Sets new dimensions of the container.\n     *\n     * @param {number} width The table width.\n     * @param {number} height The table height.\n     */\n  }, {\n    key: \"setLastSize\",\n    value: function setLastSize(width, height) {\n      var priv = privatePool.get(this);\n      var _ref2 = [width, height];\n      priv.lastWidth = _ref2[0];\n      priv.lastHeight = _ref2[1];\n    }\n    /**\n     * Returns cached dimensions.\n     *\n     * @returns {object}\n     */\n  }, {\n    key: \"getLastSize\",\n    value: function getLastSize() {\n      var priv = privatePool.get(this);\n      return {\n        width: priv.lastWidth,\n        height: priv.lastHeight\n      };\n    }\n    /**\n     * Checks if master overlay is active.\n     *\n     * @private\n     * @returns {boolean}\n     */\n  }, {\n    key: \"mainViewIsActive\",\n    value: function mainViewIsActive() {\n      return this.wt === this.activeWt;\n    }\n    /**\n     * Destroyes internal WalkOnTable's instance. Detaches all of the bonded listeners.\n     *\n     * @private\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.wt.destroy();\n      this.eventManager.destroy();\n    }\n  }]);\n  return TableView;\n}();\nexport default TableView;","map":{"version":3,"names":["_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","_i","Symbol","iterator","_arr","_n","_d","_s","_e","call","next","done","push","value","length","err","Array","isArray","_construct","Parent","args","Class","_isNativeReflectConstruct","Reflect","construct","a","apply","Constructor","Function","bind","instance","_setPrototypeOf","prototype","arguments","sham","Proxy","Boolean","valueOf","e","o","p","Object","setPrototypeOf","__proto__","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","minLen","_arrayLikeToArray","n","toString","slice","constructor","name","from","test","iter","len","arr2","_classCallCheck","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","addClass","clearTextSelection","empty","fastInnerHTML","fastInnerText","getScrollbarWidth","hasClass","isChildOf","isInput","isOutsideInput","EventManager","isImmediatePropagationStopped","isRightClick","isLeftClick","Walkontable","CellCoords","handleMouseEvent","isRootInstance","privatePool","WeakMap","TableView","eventManager","settings","getSettings","THEAD","TBODY","wt","activeWt","postponedAdjustElementsSize","set","selectionMouseDown","mouseDown","table","lastWidth","lastHeight","createElements","registerEvents","initializeWalkontable","render","isRenderSuspended","runHooks","forceFullRender","adjustElementsSize","draw","renderCall","force","undefined","wtOverlays","getCellAtCoords","coords","topmost","td","getCell","scrollViewport","snapToTop","snapToRight","snapToBottom","snapToLeft","scrollViewportHorizontally","column","scrollViewportVertically","row","priv","get","_this$instance","rootElement","rootDocument","originalStyle","getAttribute","setAttribute","createElement","tableClassName","appendChild","container","insertBefore","firstChild","_this","_this$instance2","selection","documentElement","addEventListener","event","isTextSelectionAllowed","rootWindow","preventDefault","focus","fragmentSelection","isInProgress","shiftKey","finish","activeElement","isSelected","isSelectedByAnyHeader","contains","unlisten","originalTarget","eventX","x","clientX","eventY","y","clientY","view","holder","wtTable","scrollbarWidth","elementFromPoint","isTargetWebComponent","parentNode","outsideClickDeselects","deselectCell","destroyEditor","translateFromRenderableToVisualCoords","_ref","col","translateFromRenderableToVisualIndex","renderableRow","renderableColumn","visualRow","rowIndexMapper","getVisualFromRenderableIndex","visualColumn","columnIndexMapper","countRenderableIndexes","indexMapper","maxElements","consideredElements","Math","min","getNotTrimmedIndexesLength","firstNotHiddenIndex","getFirstNotHiddenIndex","getRenderableFromVisualIndex","countRenderableColumns","maxCols","countRenderableRows","maxRows","countNotHiddenRowIndexes","visualIndex","incrementBy","countNotHiddenIndexes","countNotHiddenColumnIndexes","renderableIndexesCount","isNaN","firstVisibleIndex","renderableIndex","Number","isInteger","notHiddenIndexes","_this2","walkontableConfig","externalRowCalculator","getPlugin","isEnabled","isDataViewInstance","preventOverflow","preventWheel","stretchH","data","_this2$instance","getDataAtCell","totalRows","totalColumns","fixedColumnsLeft","countCols","visualFixedColumnsLeft","parseInt","fixedRowsTop","countRows","visualFixedRowsTop","fixedRowsBottom","visualFixedRowsBottom","max","shouldRenderLeftOverlay","rowHeaders","shouldRenderTopOverlay","columnHeaders","shouldRenderBottomOverlay","minSpareRows","renderAllRows","headerRenderers","hasRowHeaders","renderableRowIndex","TH","visualRowIndex","appendRowHeader","hasColHeaders","renderedColumnIndex","visualColumnsIndex","appendColHeader","columnWidth","getColWidth","rowHeight","renderedRowIndex","getRowHeight","cellRenderer","TD","_this2$translateFromR","_this2$translateFromR2","visualColumnIndex","modifiedCellCoords","visualRowToCheck","visualColumnToCheck","_modifiedCellCoords","cellProperties","getCellMeta","prop","colToProp","getDataAtRowProp","hasHook","getCellRenderer","selections","highlight","hideBorderOnMouseDownOver","onWindowResize","isDestroyed","refreshDimensions","onCellMouseDown","visualCoords","controller","cell","listen","onCellContextMenu","onCellMouseOut","onCellMouseOver","onCellMouseUp","onCellCornerMouseDown","onCellCornerDblClick","beforeDraw","skipRender","beforeRender","onDraw","afterRender","onScrollVertically","onScrollHorizontally","onBeforeRemoveCellClassNames","onBeforeHighlightingRowHeader","headerLevel","highlightMeta","rowMapper","newVisualRow","onBeforeHighlightingColumnHeader","columnMapper","newVisualColumn","onAfterDrawSelection","currentRow","currentColumn","layerLevel","cornersOfSelection","_this2$translateFromR3","_this2$translateFromR4","selectedRange","getSelectedRange","selectionRangeSize","size","selectionOffset","selectionForLayer","peekByIndex","to","onBeforeDrawBorders","corners","borderClassName","_corners","startRenderableRow","startRenderableColumn","endRenderableRow","endRenderableColumn","visualCorners","onBeforeTouchScroll","onAfterMomentumScroll","onBeforeStretchingColumnWidth","stretchedWidth","onModifyRowHeaderWidth","rowHeaderWidth","onModifyGetCellCoords","renderableColumnIndex","visualIndexes","_visualIndexes","visualRowFrom","visualColumnFrom","visualRowTo","visualColumnTo","viewportRowCalculatorOverride","calc","viewportOffset","viewportRowRenderingOffset","renderableRows","firstRenderedRow","startRow","lastRenderedRow","endRow","offset","ceil","viewportColumnCalculatorOverride","viewportColumnRenderingOffset","renderableColumns","firstRenderedColumn","startColumn","lastRenderedColumn","endColumn","columnHeaderHeight","spreader","_this$instance$rootEl","getBoundingClientRect","width","height","setLastSize","which","stopPropagation","observeDOMVisibility","drawInterrupted","el","isChildOfTableBody","isSelectedOnlyCell","isCellEdited","isMouseDown","_this$instance$getSel","_this$instance$getSel2","getSelectedRangeLast","isSingle","activeEditor","getActiveEditor","isOpened","updateCellHeader","querySelector","getRowHeader","_this$instance3","div","span","className","getColHeader","element","index","content","renderedIndex","parentOverlay","getParentOverlay","columnFilter","sourceToRendered","rowFilter","String","fromCharCode","maximumVisibleElementWidth","leftOffset","workspaceWidth","wtViewport","getWorkspaceWidth","maxWidth","maximumVisibleElementHeight","topOffset","workspaceHeight","getWorkspaceHeight","maxHeight","_ref2","getLastSize","mainViewIsActive","destroy"],"sources":["/Users/priyadeliwala/Desktop/sales-dashboard/node_modules/handsontable/tableView.mjs"],"sourcesContent":["function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.weak-map.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.number.is-integer.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.object.set-prototype-of.js\";\nimport \"core-js/modules/es.reflect.construct.js\";\nimport { addClass, clearTextSelection, empty, fastInnerHTML, fastInnerText, getScrollbarWidth, hasClass, isChildOf, isInput, isOutsideInput } from \"./helpers/dom/element.mjs\";\nimport EventManager from \"./eventManager.mjs\";\nimport { isImmediatePropagationStopped, isRightClick, isLeftClick } from \"./helpers/dom/event.mjs\";\nimport Walkontable, { CellCoords } from \"./3rdparty/walkontable/src/index.mjs\";\nimport { handleMouseEvent } from \"./selection/mouseEventHandler.mjs\";\nimport { isRootInstance } from \"./utils/rootInstance.mjs\";\nvar privatePool = new WeakMap();\n/**\n * @class TableView\n * @private\n */\n\nvar TableView = /*#__PURE__*/function () {\n  /**\n   * @param {Hanstontable} instance Instance of {@link Handsontable}.\n   */\n  function TableView(instance) {\n    _classCallCheck(this, TableView);\n\n    /**\n     * Instance of {@link Handsontable}.\n     *\n     * @private\n     * @type {Handsontable}\n     */\n    this.instance = instance;\n    /**\n     * Instance of {@link EventManager}.\n     *\n     * @private\n     * @type {EventManager}\n     */\n\n    this.eventManager = new EventManager(instance);\n    /**\n     * Current Handsontable's GridSettings object.\n     *\n     * @private\n     * @type {GridSettings}\n     */\n\n    this.settings = instance.getSettings();\n    /**\n     * Main <THEAD> element.\n     *\n     * @type {HTMLTableSectionElement}\n     */\n\n    this.THEAD = void 0;\n    /**\n     * Main <TBODY> element.\n     *\n     * @type {HTMLTableSectionElement}\n     */\n\n    this.TBODY = void 0;\n    /**\n     * Main Walkontable instance.\n     *\n     * @type {Walkontable}\n     */\n\n    this.wt = void 0;\n    /**\n     * Main Walkontable instance.\n     *\n     * @private\n     * @type {Walkontable}\n     */\n\n    this.activeWt = void 0;\n    /**\n     * The flag determines if the `adjustElementsSize` method call was made during\n     * the render suspending. If true, the method has to be triggered once after render\n     * resuming.\n     *\n     * @private\n     * @type {boolean}\n     */\n\n    this.postponedAdjustElementsSize = false;\n    privatePool.set(this, {\n      /**\n       * Defines if the text should be selected during mousemove.\n       *\n       * @private\n       * @type {boolean}\n       */\n      selectionMouseDown: false,\n\n      /**\n       * @private\n       * @type {boolean}\n       */\n      mouseDown: void 0,\n\n      /**\n       * Main <TABLE> element.\n       *\n       * @private\n       * @type {HTMLTableElement}\n       */\n      table: void 0,\n\n      /**\n       * Cached width of the rootElement.\n       *\n       * @type {number}\n       */\n      lastWidth: 0,\n\n      /**\n       * Cached height of the rootElement.\n       *\n       * @type {number}\n       */\n      lastHeight: 0\n    });\n    this.createElements();\n    this.registerEvents();\n    this.initializeWalkontable();\n  }\n  /**\n   * Renders WalkontableUI.\n   */\n\n\n  _createClass(TableView, [{\n    key: \"render\",\n    value: function render() {\n      if (!this.instance.isRenderSuspended()) {\n        this.instance.runHooks('beforeRender', this.instance.forceFullRender);\n\n        if (this.postponedAdjustElementsSize) {\n          this.postponedAdjustElementsSize = false;\n          this.adjustElementsSize(true);\n        }\n\n        this.wt.draw(!this.instance.forceFullRender);\n        this.instance.runHooks('afterRender', this.instance.forceFullRender);\n        this.instance.forceFullRender = false;\n        this.instance.renderCall = false;\n      }\n    }\n    /**\n     * Adjust overlays elements size and master table size.\n     *\n     * @param {boolean} [force=false] When `true`, it adjust the DOM nodes sizes for all overlays.\n     */\n\n  }, {\n    key: \"adjustElementsSize\",\n    value: function adjustElementsSize() {\n      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (this.instance.isRenderSuspended()) {\n        this.postponedAdjustElementsSize = true;\n      } else {\n        this.wt.wtOverlays.adjustElementsSize(force);\n      }\n    }\n    /**\n     * Returns td object given coordinates.\n     *\n     * @param {CellCoords} coords Renderable cell coordinates.\n     * @param {boolean} topmost Indicates whether the cell should be calculated from the topmost.\n     * @returns {HTMLTableCellElement|null}\n     */\n\n  }, {\n    key: \"getCellAtCoords\",\n    value: function getCellAtCoords(coords, topmost) {\n      var td = this.wt.getCell(coords, topmost);\n\n      if (td < 0) {\n        // there was an exit code (cell is out of bounds)\n        return null;\n      }\n\n      return td;\n    }\n    /**\n     * Scroll viewport to a cell.\n     *\n     * @param {CellCoords} coords Renderable cell coordinates.\n     * @param {boolean} [snapToTop] If `true`, viewport is scrolled to show the cell on the top of the table.\n     * @param {boolean} [snapToRight] If `true`, viewport is scrolled to show the cell on the right side of the table.\n     * @param {boolean} [snapToBottom] If `true`, viewport is scrolled to show the cell on the bottom side of the table.\n     * @param {boolean} [snapToLeft] If `true`, viewport is scrolled to show the cell on the left side of the table.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"scrollViewport\",\n    value: function scrollViewport(coords, snapToTop, snapToRight, snapToBottom, snapToLeft) {\n      return this.wt.scrollViewport(coords, snapToTop, snapToRight, snapToBottom, snapToLeft);\n    }\n    /**\n     * Scroll viewport to a column.\n     *\n     * @param {number} column Renderable column index.\n     * @param {boolean} [snapToRight] If `true`, viewport is scrolled to show the cell on the right side of the table.\n     * @param {boolean} [snapToLeft] If `true`, viewport is scrolled to show the cell on the left side of the table.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"scrollViewportHorizontally\",\n    value: function scrollViewportHorizontally(column, snapToRight, snapToLeft) {\n      return this.wt.scrollViewportHorizontally(column, snapToRight, snapToLeft);\n    }\n    /**\n     * Scroll viewport to a row.\n     *\n     * @param {number} row Renderable row index.\n     * @param {boolean} [snapToTop] If `true`, viewport is scrolled to show the cell on the top of the table.\n     * @param {boolean} [snapToBottom] If `true`, viewport is scrolled to show the cell on the bottom side of the table.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"scrollViewportVertically\",\n    value: function scrollViewportVertically(row, snapToTop, snapToBottom) {\n      return this.wt.scrollViewportVertically(row, snapToTop, snapToBottom);\n    }\n    /**\n     * Prepares DOMElements and adds correct className to the root element.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"createElements\",\n    value: function createElements() {\n      var priv = privatePool.get(this);\n      var _this$instance = this.instance,\n          rootElement = _this$instance.rootElement,\n          rootDocument = _this$instance.rootDocument;\n      var originalStyle = rootElement.getAttribute('style');\n\n      if (originalStyle) {\n        rootElement.setAttribute('data-originalstyle', originalStyle); // needed to retrieve original style in jsFiddle link generator in HT examples. may be removed in future versions\n      }\n\n      addClass(rootElement, 'handsontable');\n      priv.table = rootDocument.createElement('TABLE');\n      addClass(priv.table, 'htCore');\n\n      if (this.instance.getSettings().tableClassName) {\n        addClass(priv.table, this.instance.getSettings().tableClassName);\n      }\n\n      this.THEAD = rootDocument.createElement('THEAD');\n      priv.table.appendChild(this.THEAD);\n      this.TBODY = rootDocument.createElement('TBODY');\n      priv.table.appendChild(this.TBODY);\n      this.instance.table = priv.table;\n      this.instance.container.insertBefore(priv.table, this.instance.container.firstChild);\n    }\n    /**\n     * Attaches necessary listeners.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"registerEvents\",\n    value: function registerEvents() {\n      var _this = this;\n\n      var priv = privatePool.get(this);\n      var _this$instance2 = this.instance,\n          rootElement = _this$instance2.rootElement,\n          rootDocument = _this$instance2.rootDocument,\n          selection = _this$instance2.selection;\n      var documentElement = rootDocument.documentElement;\n      this.eventManager.addEventListener(rootElement, 'mousedown', function (event) {\n        priv.selectionMouseDown = true;\n\n        if (!_this.isTextSelectionAllowed(event.target)) {\n          var rootWindow = _this.instance.rootWindow;\n          clearTextSelection(rootWindow);\n          event.preventDefault();\n          rootWindow.focus(); // make sure that window that contains HOT is active. Important when HOT is in iframe.\n        }\n      });\n      this.eventManager.addEventListener(rootElement, 'mouseup', function () {\n        priv.selectionMouseDown = false;\n      });\n      this.eventManager.addEventListener(rootElement, 'mousemove', function (event) {\n        if (priv.selectionMouseDown && !_this.isTextSelectionAllowed(event.target)) {\n          // Clear selection only when fragmentSelection is enabled, otherwise clearing selection breakes the IME editor.\n          if (_this.settings.fragmentSelection) {\n            clearTextSelection(_this.instance.rootWindow);\n          }\n\n          event.preventDefault();\n        }\n      });\n      this.eventManager.addEventListener(documentElement, 'keyup', function (event) {\n        if (selection.isInProgress() && !event.shiftKey) {\n          selection.finish();\n        }\n      });\n      this.eventManager.addEventListener(documentElement, 'mouseup', function (event) {\n        if (selection.isInProgress() && isLeftClick(event)) {\n          // is left mouse button\n          selection.finish();\n        }\n\n        priv.mouseDown = false;\n\n        if (isOutsideInput(rootDocument.activeElement) || !selection.isSelected() && !selection.isSelectedByAnyHeader() && !rootElement.contains(event.target) && !isRightClick(event)) {\n          _this.instance.unlisten();\n        }\n      });\n      this.eventManager.addEventListener(documentElement, 'contextmenu', function (event) {\n        if (selection.isInProgress() && isRightClick(event)) {\n          selection.finish();\n          priv.mouseDown = false;\n        }\n      });\n      this.eventManager.addEventListener(documentElement, 'touchend', function () {\n        if (selection.isInProgress()) {\n          selection.finish();\n        }\n\n        priv.mouseDown = false;\n      });\n      this.eventManager.addEventListener(documentElement, 'mousedown', function (event) {\n        var originalTarget = event.target;\n        var eventX = event.x || event.clientX;\n        var eventY = event.y || event.clientY;\n        var next = event.target;\n\n        if (priv.mouseDown || !rootElement || !_this.instance.view) {\n          return; // it must have been started in a cell\n        } // immediate click on \"holder\" means click on the right side of vertical scrollbar\n\n\n        var holder = _this.instance.view.wt.wtTable.holder;\n\n        if (next === holder) {\n          var scrollbarWidth = getScrollbarWidth(rootDocument);\n\n          if (rootDocument.elementFromPoint(eventX + scrollbarWidth, eventY) !== holder || rootDocument.elementFromPoint(eventX, eventY + scrollbarWidth) !== holder) {\n            return;\n          }\n        } else {\n          while (next !== documentElement) {\n            if (next === null) {\n              if (event.isTargetWebComponent) {\n                break;\n              } // click on something that was a row but now is detached (possibly because your click triggered a rerender)\n\n\n              return;\n            }\n\n            if (next === rootElement) {\n              // click inside container\n              return;\n            }\n\n            next = next.parentNode;\n          }\n        } // function did not return until here, we have an outside click!\n\n\n        var outsideClickDeselects = typeof _this.settings.outsideClickDeselects === 'function' ? _this.settings.outsideClickDeselects(originalTarget) : _this.settings.outsideClickDeselects;\n\n        if (outsideClickDeselects) {\n          _this.instance.deselectCell();\n        } else {\n          _this.instance.destroyEditor(false, false);\n        }\n      });\n      this.eventManager.addEventListener(priv.table, 'selectstart', function (event) {\n        if (_this.settings.fragmentSelection || isInput(event.target)) {\n          return;\n        } // https://github.com/handsontable/handsontable/issues/160\n        // Prevent text from being selected when performing drag down.\n\n\n        event.preventDefault();\n      });\n    }\n    /**\n     * Translate renderable cell coordinates to visual coordinates.\n     *\n     * @param {CellCoords} coords The cell coordinates.\n     * @returns {CellCoords}\n     */\n\n  }, {\n    key: \"translateFromRenderableToVisualCoords\",\n    value: function translateFromRenderableToVisualCoords(_ref) {\n      var row = _ref.row,\n          col = _ref.col;\n      // TODO: To consider an idea to reusing the CellCoords instance instead creating new one.\n      return _construct(CellCoords, _toConsumableArray(this.translateFromRenderableToVisualIndex(row, col)));\n    }\n    /**\n     * Translate renderable row and column indexes to visual row and column indexes.\n     *\n     * @param {number} renderableRow Renderable row index.\n     * @param {number} renderableColumn Renderable columnIndex.\n     * @returns {number[]}\n     */\n\n  }, {\n    key: \"translateFromRenderableToVisualIndex\",\n    value: function translateFromRenderableToVisualIndex(renderableRow, renderableColumn) {\n      // TODO: Some helper may be needed.\n      // We perform translation for indexes (without headers).\n      var visualRow = renderableRow >= 0 ? this.instance.rowIndexMapper.getVisualFromRenderableIndex(renderableRow) : renderableRow;\n      var visualColumn = renderableColumn >= 0 ? this.instance.columnIndexMapper.getVisualFromRenderableIndex(renderableColumn) : renderableColumn;\n\n      if (visualRow === null) {\n        visualRow = renderableRow;\n      }\n\n      if (visualColumn === null) {\n        visualColumn = renderableColumn;\n      }\n\n      return [visualRow, visualColumn];\n    }\n    /**\n     * Returns the number of renderable indexes.\n     *\n     * @private\n     * @param {IndexMapper} indexMapper The IndexMapper instance for specific axis.\n     * @param {number} maxElements Maximum number of elements (rows or columns).\n     *\n     * @returns {number|*}\n     */\n\n  }, {\n    key: \"countRenderableIndexes\",\n    value: function countRenderableIndexes(indexMapper, maxElements) {\n      var consideredElements = Math.min(indexMapper.getNotTrimmedIndexesLength(), maxElements); // Don't take hidden indexes into account. We are looking just for renderable indexes.\n\n      var firstNotHiddenIndex = indexMapper.getFirstNotHiddenIndex(consideredElements - 1, -1); // There are no renderable indexes.\n\n      if (firstNotHiddenIndex === null) {\n        return 0;\n      }\n\n      return indexMapper.getRenderableFromVisualIndex(firstNotHiddenIndex) + 1;\n    }\n    /**\n     * Returns the number of renderable columns.\n     *\n     * @returns {number}\n     */\n\n  }, {\n    key: \"countRenderableColumns\",\n    value: function countRenderableColumns() {\n      return this.countRenderableIndexes(this.instance.columnIndexMapper, this.settings.maxCols);\n    }\n    /**\n     * Returns the number of renderable rows.\n     *\n     * @returns {number}\n     */\n\n  }, {\n    key: \"countRenderableRows\",\n    value: function countRenderableRows() {\n      return this.countRenderableIndexes(this.instance.rowIndexMapper, this.settings.maxRows);\n    }\n    /**\n     * Returns number of not hidden row indexes counting from the passed starting index.\n     * The counting direction can be controlled by `incrementBy` argument.\n     *\n     * @param {number} visualIndex The visual index from which the counting begins.\n     * @param {number} incrementBy If `-1` then counting is backwards or forward when `1`.\n     * @returns {number}\n     */\n\n  }, {\n    key: \"countNotHiddenRowIndexes\",\n    value: function countNotHiddenRowIndexes(visualIndex, incrementBy) {\n      return this.countNotHiddenIndexes(visualIndex, incrementBy, this.instance.rowIndexMapper, this.countRenderableRows());\n    }\n    /**\n     * Returns number of not hidden column indexes counting from the passed starting index.\n     * The counting direction can be controlled by `incrementBy` argument.\n     *\n     * @param {number} visualIndex The visual index from which the counting begins.\n     * @param {number} incrementBy If `-1` then counting is backwards or forward when `1`.\n     * @returns {number}\n     */\n\n  }, {\n    key: \"countNotHiddenColumnIndexes\",\n    value: function countNotHiddenColumnIndexes(visualIndex, incrementBy) {\n      return this.countNotHiddenIndexes(visualIndex, incrementBy, this.instance.columnIndexMapper, this.countRenderableColumns());\n    }\n    /**\n     * Returns number of not hidden indexes counting from the passed starting index.\n     * The counting direction can be controlled by `incrementBy` argument.\n     *\n     * @param {number} visualIndex The visual index from which the counting begins.\n     * @param {number} incrementBy If `-1` then counting is backwards or forward when `1`.\n     * @param {IndexMapper} indexMapper The IndexMapper instance for specific axis.\n     * @param {number} renderableIndexesCount Total count of renderable indexes for specific axis.\n     * @returns {number}\n     */\n\n  }, {\n    key: \"countNotHiddenIndexes\",\n    value: function countNotHiddenIndexes(visualIndex, incrementBy, indexMapper, renderableIndexesCount) {\n      if (isNaN(visualIndex) || visualIndex < 0) {\n        return 0;\n      }\n\n      var firstVisibleIndex = indexMapper.getFirstNotHiddenIndex(visualIndex, incrementBy);\n      var renderableIndex = indexMapper.getRenderableFromVisualIndex(firstVisibleIndex);\n\n      if (!Number.isInteger(renderableIndex)) {\n        return 0;\n      }\n\n      var notHiddenIndexes = 0;\n\n      if (incrementBy < 0) {\n        // Zero-based numbering for renderable indexes corresponds to a number of not hidden indexes.\n        notHiddenIndexes = renderableIndex + 1;\n      } else if (incrementBy > 0) {\n        notHiddenIndexes = renderableIndexesCount - renderableIndex;\n      }\n\n      return notHiddenIndexes;\n    }\n    /**\n     * Defines default configuration and initializes WalkOnTable intance.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"initializeWalkontable\",\n    value: function initializeWalkontable() {\n      var _this2 = this;\n\n      var priv = privatePool.get(this);\n      var walkontableConfig = {\n        externalRowCalculator: this.instance.getPlugin('autoRowSize') && this.instance.getPlugin('autoRowSize').isEnabled(),\n        table: priv.table,\n        isDataViewInstance: function isDataViewInstance() {\n          return isRootInstance(_this2.instance);\n        },\n        preventOverflow: function preventOverflow() {\n          return _this2.settings.preventOverflow;\n        },\n        preventWheel: function preventWheel() {\n          return _this2.settings.preventWheel;\n        },\n        stretchH: function stretchH() {\n          return _this2.settings.stretchH;\n        },\n        data: function data(renderableRow, renderableColumn) {\n          var _this2$instance;\n\n          return (_this2$instance = _this2.instance).getDataAtCell.apply(_this2$instance, _toConsumableArray(_this2.translateFromRenderableToVisualIndex(renderableRow, renderableColumn)));\n        },\n        totalRows: function totalRows() {\n          return _this2.countRenderableRows();\n        },\n        totalColumns: function totalColumns() {\n          return _this2.countRenderableColumns();\n        },\n        // Number of renderable columns for the left overlay.\n        fixedColumnsLeft: function fixedColumnsLeft() {\n          var countCols = _this2.instance.countCols();\n\n          var visualFixedColumnsLeft = Math.min(parseInt(_this2.settings.fixedColumnsLeft, 10), countCols) - 1;\n          return _this2.countNotHiddenColumnIndexes(visualFixedColumnsLeft, -1);\n        },\n        // Number of renderable rows for the top overlay.\n        fixedRowsTop: function fixedRowsTop() {\n          var countRows = _this2.instance.countRows();\n\n          var visualFixedRowsTop = Math.min(parseInt(_this2.settings.fixedRowsTop, 10), countRows) - 1;\n          return _this2.countNotHiddenRowIndexes(visualFixedRowsTop, -1);\n        },\n        // Number of renderable rows for the bottom overlay.\n        fixedRowsBottom: function fixedRowsBottom() {\n          var countRows = _this2.instance.countRows();\n\n          var visualFixedRowsBottom = Math.max(countRows - parseInt(_this2.settings.fixedRowsBottom, 10), 0);\n          return _this2.countNotHiddenRowIndexes(visualFixedRowsBottom, 1);\n        },\n        // Enable the left overlay when conditions are met.\n        shouldRenderLeftOverlay: function shouldRenderLeftOverlay() {\n          return _this2.settings.fixedColumnsLeft > 0 || walkontableConfig.rowHeaders().length > 0;\n        },\n        // Enable the top overlay when conditions are met.\n        shouldRenderTopOverlay: function shouldRenderTopOverlay() {\n          return _this2.settings.fixedRowsTop > 0 || walkontableConfig.columnHeaders().length > 0;\n        },\n        // Enable the bottom overlay when conditions are met.\n        shouldRenderBottomOverlay: function shouldRenderBottomOverlay() {\n          return _this2.settings.fixedRowsBottom > 0;\n        },\n        minSpareRows: function minSpareRows() {\n          return _this2.settings.minSpareRows;\n        },\n        renderAllRows: this.settings.renderAllRows,\n        rowHeaders: function rowHeaders() {\n          var headerRenderers = [];\n\n          if (_this2.instance.hasRowHeaders()) {\n            headerRenderers.push(function (renderableRowIndex, TH) {\n              // TODO: Some helper may be needed.\n              // We perform translation for row indexes (without row headers).\n              var visualRowIndex = renderableRowIndex >= 0 ? _this2.instance.rowIndexMapper.getVisualFromRenderableIndex(renderableRowIndex) : renderableRowIndex;\n\n              _this2.appendRowHeader(visualRowIndex, TH);\n            });\n          }\n\n          _this2.instance.runHooks('afterGetRowHeaderRenderers', headerRenderers);\n\n          return headerRenderers;\n        },\n        columnHeaders: function columnHeaders() {\n          var headerRenderers = [];\n\n          if (_this2.instance.hasColHeaders()) {\n            headerRenderers.push(function (renderedColumnIndex, TH) {\n              // TODO: Some helper may be needed.\n              // We perform translation for columns indexes (without column headers).\n              var visualColumnsIndex = renderedColumnIndex >= 0 ? _this2.instance.columnIndexMapper.getVisualFromRenderableIndex(renderedColumnIndex) : renderedColumnIndex;\n\n              _this2.appendColHeader(visualColumnsIndex, TH);\n            });\n          }\n\n          _this2.instance.runHooks('afterGetColumnHeaderRenderers', headerRenderers);\n\n          return headerRenderers;\n        },\n        columnWidth: function columnWidth(renderedColumnIndex) {\n          var visualIndex = _this2.instance.columnIndexMapper.getVisualFromRenderableIndex(renderedColumnIndex); // It's not a bug that we can't find visual index for some handled by method indexes. The function is called also\n          // for not displayed indexes (beyond the table boundaries), i.e. when `fixedColumnsLeft` > `startCols` (wrong config?) or\n          // scrolling and dataset is empty (scroll should handle that?).\n\n\n          return _this2.instance.getColWidth(visualIndex === null ? renderedColumnIndex : visualIndex);\n        },\n        rowHeight: function rowHeight(renderedRowIndex) {\n          var visualIndex = _this2.instance.rowIndexMapper.getVisualFromRenderableIndex(renderedRowIndex);\n\n          return _this2.instance.getRowHeight(visualIndex === null ? renderedRowIndex : visualIndex);\n        },\n        cellRenderer: function cellRenderer(renderedRowIndex, renderedColumnIndex, TD) {\n          var _this2$translateFromR = _this2.translateFromRenderableToVisualIndex(renderedRowIndex, renderedColumnIndex),\n              _this2$translateFromR2 = _slicedToArray(_this2$translateFromR, 2),\n              visualRowIndex = _this2$translateFromR2[0],\n              visualColumnIndex = _this2$translateFromR2[1]; // Coords may be modified. For example, by the `MergeCells` plugin. It should affect cell value and cell meta.\n\n\n          var modifiedCellCoords = _this2.instance.runHooks('modifyGetCellCoords', visualRowIndex, visualColumnIndex);\n\n          var visualRowToCheck = visualRowIndex;\n          var visualColumnToCheck = visualColumnIndex;\n\n          if (Array.isArray(modifiedCellCoords)) {\n            var _modifiedCellCoords = _slicedToArray(modifiedCellCoords, 2);\n\n            visualRowToCheck = _modifiedCellCoords[0];\n            visualColumnToCheck = _modifiedCellCoords[1];\n          }\n\n          var cellProperties = _this2.instance.getCellMeta(visualRowToCheck, visualColumnToCheck);\n\n          var prop = _this2.instance.colToProp(visualColumnToCheck);\n\n          var value = _this2.instance.getDataAtRowProp(visualRowToCheck, prop);\n\n          if (_this2.instance.hasHook('beforeValueRender')) {\n            value = _this2.instance.runHooks('beforeValueRender', value, cellProperties);\n          }\n\n          _this2.instance.runHooks('beforeRenderer', TD, visualRowIndex, visualColumnIndex, prop, value, cellProperties);\n\n          _this2.instance.getCellRenderer(cellProperties)(_this2.instance, TD, visualRowIndex, visualColumnIndex, prop, value, cellProperties);\n\n          _this2.instance.runHooks('afterRenderer', TD, visualRowIndex, visualColumnIndex, prop, value, cellProperties);\n        },\n        selections: this.instance.selection.highlight,\n        hideBorderOnMouseDownOver: function hideBorderOnMouseDownOver() {\n          return _this2.settings.fragmentSelection;\n        },\n        onWindowResize: function onWindowResize() {\n          if (!_this2.instance || _this2.instance.isDestroyed) {\n            return;\n          }\n\n          _this2.instance.refreshDimensions();\n        },\n        onCellMouseDown: function onCellMouseDown(event, coords, TD, wt) {\n          var visualCoords = _this2.translateFromRenderableToVisualCoords(coords);\n\n          var controller = {\n            row: false,\n            column: false,\n            cell: false\n          };\n\n          _this2.instance.listen();\n\n          _this2.activeWt = wt;\n          priv.mouseDown = true;\n\n          _this2.instance.runHooks('beforeOnCellMouseDown', event, visualCoords, TD, controller);\n\n          if (isImmediatePropagationStopped(event)) {\n            return;\n          }\n\n          handleMouseEvent(event, {\n            coords: visualCoords,\n            selection: _this2.instance.selection,\n            controller: controller\n          });\n\n          _this2.instance.runHooks('afterOnCellMouseDown', event, visualCoords, TD);\n\n          _this2.activeWt = _this2.wt;\n        },\n        onCellContextMenu: function onCellContextMenu(event, coords, TD, wt) {\n          var visualCoords = _this2.translateFromRenderableToVisualCoords(coords);\n\n          _this2.activeWt = wt;\n          priv.mouseDown = false;\n\n          if (_this2.instance.selection.isInProgress()) {\n            _this2.instance.selection.finish();\n          }\n\n          _this2.instance.runHooks('beforeOnCellContextMenu', event, visualCoords, TD);\n\n          if (isImmediatePropagationStopped(event)) {\n            return;\n          }\n\n          _this2.instance.runHooks('afterOnCellContextMenu', event, visualCoords, TD);\n\n          _this2.activeWt = _this2.wt;\n        },\n        onCellMouseOut: function onCellMouseOut(event, coords, TD, wt) {\n          var visualCoords = _this2.translateFromRenderableToVisualCoords(coords);\n\n          _this2.activeWt = wt;\n\n          _this2.instance.runHooks('beforeOnCellMouseOut', event, visualCoords, TD);\n\n          if (isImmediatePropagationStopped(event)) {\n            return;\n          }\n\n          _this2.instance.runHooks('afterOnCellMouseOut', event, visualCoords, TD);\n\n          _this2.activeWt = _this2.wt;\n        },\n        onCellMouseOver: function onCellMouseOver(event, coords, TD, wt) {\n          var visualCoords = _this2.translateFromRenderableToVisualCoords(coords);\n\n          var controller = {\n            row: false,\n            column: false,\n            cell: false\n          };\n          _this2.activeWt = wt;\n\n          _this2.instance.runHooks('beforeOnCellMouseOver', event, visualCoords, TD, controller);\n\n          if (isImmediatePropagationStopped(event)) {\n            return;\n          }\n\n          if (priv.mouseDown) {\n            handleMouseEvent(event, {\n              coords: visualCoords,\n              selection: _this2.instance.selection,\n              controller: controller\n            });\n          }\n\n          _this2.instance.runHooks('afterOnCellMouseOver', event, visualCoords, TD);\n\n          _this2.activeWt = _this2.wt;\n        },\n        onCellMouseUp: function onCellMouseUp(event, coords, TD, wt) {\n          var visualCoords = _this2.translateFromRenderableToVisualCoords(coords);\n\n          _this2.activeWt = wt;\n\n          _this2.instance.runHooks('beforeOnCellMouseUp', event, visualCoords, TD); // TODO: The second condition check is a workaround. Callback corresponding the method `updateSettings`\n          // disable plugin and enable it again. Disabling plugin closes the menu. Thus, calling the\n          // `updateSettings` in a body of any callback executed right after some context-menu action\n          // breaks the table (#7231).\n\n\n          if (isImmediatePropagationStopped(event) || _this2.instance.isDestroyed) {\n            return;\n          }\n\n          _this2.instance.runHooks('afterOnCellMouseUp', event, visualCoords, TD);\n\n          _this2.activeWt = _this2.wt;\n        },\n        onCellCornerMouseDown: function onCellCornerMouseDown(event) {\n          event.preventDefault();\n\n          _this2.instance.runHooks('afterOnCellCornerMouseDown', event);\n        },\n        onCellCornerDblClick: function onCellCornerDblClick(event) {\n          event.preventDefault();\n\n          _this2.instance.runHooks('afterOnCellCornerDblClick', event);\n        },\n        beforeDraw: function beforeDraw(force, skipRender) {\n          return _this2.beforeRender(force, skipRender);\n        },\n        onDraw: function onDraw(force) {\n          return _this2.afterRender(force);\n        },\n        onScrollVertically: function onScrollVertically() {\n          return _this2.instance.runHooks('afterScrollVertically');\n        },\n        onScrollHorizontally: function onScrollHorizontally() {\n          return _this2.instance.runHooks('afterScrollHorizontally');\n        },\n        onBeforeRemoveCellClassNames: function onBeforeRemoveCellClassNames() {\n          return _this2.instance.runHooks('beforeRemoveCellClassNames');\n        },\n        onBeforeHighlightingRowHeader: function onBeforeHighlightingRowHeader(renderableRow, headerLevel, highlightMeta) {\n          var rowMapper = _this2.instance.rowIndexMapper;\n          var visualRow = rowMapper.getVisualFromRenderableIndex(renderableRow);\n\n          var newVisualRow = _this2.instance.runHooks('beforeHighlightingRowHeader', visualRow, headerLevel, highlightMeta);\n\n          return rowMapper.getRenderableFromVisualIndex(rowMapper.getFirstNotHiddenIndex(newVisualRow, 1));\n        },\n        onBeforeHighlightingColumnHeader: function onBeforeHighlightingColumnHeader(renderableColumn, headerLevel, highlightMeta) {\n          var columnMapper = _this2.instance.columnIndexMapper;\n          var visualColumn = columnMapper.getVisualFromRenderableIndex(renderableColumn);\n\n          var newVisualColumn = _this2.instance.runHooks('beforeHighlightingColumnHeader', visualColumn, headerLevel, highlightMeta);\n\n          return columnMapper.getRenderableFromVisualIndex(columnMapper.getFirstNotHiddenIndex(newVisualColumn, 1));\n        },\n        onAfterDrawSelection: function onAfterDrawSelection(currentRow, currentColumn, layerLevel) {\n          var cornersOfSelection;\n\n          var _this2$translateFromR3 = _this2.translateFromRenderableToVisualIndex(currentRow, currentColumn),\n              _this2$translateFromR4 = _slicedToArray(_this2$translateFromR3, 2),\n              visualRowIndex = _this2$translateFromR4[0],\n              visualColumnIndex = _this2$translateFromR4[1];\n\n          var selectedRange = _this2.instance.selection.getSelectedRange();\n\n          var selectionRangeSize = selectedRange.size();\n\n          if (selectionRangeSize > 0) {\n            // Selection layers are stored from the \"oldest\" to the \"newest\". We should calculate the offset.\n            // Please look at the `SelectedRange` class and it's method for getting selection's layer for more information.\n            var selectionOffset = (layerLevel !== null && layerLevel !== void 0 ? layerLevel : 0) + 1 - selectionRangeSize;\n            var selectionForLayer = selectedRange.peekByIndex(selectionOffset);\n            cornersOfSelection = [selectionForLayer.from.row, selectionForLayer.from.col, selectionForLayer.to.row, selectionForLayer.to.col];\n          }\n\n          return _this2.instance.runHooks('afterDrawSelection', visualRowIndex, visualColumnIndex, cornersOfSelection, layerLevel);\n        },\n        onBeforeDrawBorders: function onBeforeDrawBorders(corners, borderClassName) {\n          var _corners = _slicedToArray(corners, 4),\n              startRenderableRow = _corners[0],\n              startRenderableColumn = _corners[1],\n              endRenderableRow = _corners[2],\n              endRenderableColumn = _corners[3];\n\n          var visualCorners = [_this2.instance.rowIndexMapper.getVisualFromRenderableIndex(startRenderableRow), _this2.instance.columnIndexMapper.getVisualFromRenderableIndex(startRenderableColumn), _this2.instance.rowIndexMapper.getVisualFromRenderableIndex(endRenderableRow), _this2.instance.columnIndexMapper.getVisualFromRenderableIndex(endRenderableColumn)];\n          return _this2.instance.runHooks('beforeDrawBorders', visualCorners, borderClassName);\n        },\n        onBeforeTouchScroll: function onBeforeTouchScroll() {\n          return _this2.instance.runHooks('beforeTouchScroll');\n        },\n        onAfterMomentumScroll: function onAfterMomentumScroll() {\n          return _this2.instance.runHooks('afterMomentumScroll');\n        },\n        onBeforeStretchingColumnWidth: function onBeforeStretchingColumnWidth(stretchedWidth, renderedColumnIndex) {\n          var visualColumnIndex = _this2.instance.columnIndexMapper.getVisualFromRenderableIndex(renderedColumnIndex);\n\n          return _this2.instance.runHooks('beforeStretchingColumnWidth', stretchedWidth, visualColumnIndex);\n        },\n        onModifyRowHeaderWidth: function onModifyRowHeaderWidth(rowHeaderWidth) {\n          return _this2.instance.runHooks('modifyRowHeaderWidth', rowHeaderWidth);\n        },\n        onModifyGetCellCoords: function onModifyGetCellCoords(renderableRowIndex, renderableColumnIndex, topmost) {\n          var rowMapper = _this2.instance.rowIndexMapper;\n          var columnMapper = _this2.instance.columnIndexMapper; // Callback handle also headers. We shouldn't translate them.\n\n          var visualColumnIndex = renderableColumnIndex >= 0 ? columnMapper.getVisualFromRenderableIndex(renderableColumnIndex) : renderableColumnIndex;\n          var visualRowIndex = renderableRowIndex >= 0 ? rowMapper.getVisualFromRenderableIndex(renderableRowIndex) : renderableRowIndex;\n\n          var visualIndexes = _this2.instance.runHooks('modifyGetCellCoords', visualRowIndex, visualColumnIndex, topmost);\n\n          if (Array.isArray(visualIndexes)) {\n            var _visualIndexes = _slicedToArray(visualIndexes, 4),\n                visualRowFrom = _visualIndexes[0],\n                visualColumnFrom = _visualIndexes[1],\n                visualRowTo = _visualIndexes[2],\n                visualColumnTo = _visualIndexes[3]; // Result of the hook is handled by the Walkontable (renderable indexes).\n\n\n            return [visualRowFrom >= 0 ? rowMapper.getRenderableFromVisualIndex(rowMapper.getFirstNotHiddenIndex(visualRowFrom, 1)) : visualRowFrom, visualColumnFrom >= 0 ? columnMapper.getRenderableFromVisualIndex(columnMapper.getFirstNotHiddenIndex(visualColumnFrom, 1)) : visualColumnFrom, visualRowTo >= 0 ? rowMapper.getRenderableFromVisualIndex(rowMapper.getFirstNotHiddenIndex(visualRowTo, -1)) : visualRowTo, visualColumnTo >= 0 ? columnMapper.getRenderableFromVisualIndex(columnMapper.getFirstNotHiddenIndex(visualColumnTo, -1)) : visualColumnTo];\n          }\n        },\n        viewportRowCalculatorOverride: function viewportRowCalculatorOverride(calc) {\n          var viewportOffset = _this2.settings.viewportRowRenderingOffset;\n\n          if (viewportOffset === 'auto' && _this2.settings.fixedRowsTop) {\n            viewportOffset = 10;\n          }\n\n          if (viewportOffset > 0 || viewportOffset === 'auto') {\n            var renderableRows = _this2.countRenderableRows();\n\n            var firstRenderedRow = calc.startRow;\n            var lastRenderedRow = calc.endRow;\n\n            if (typeof viewportOffset === 'number') {\n              calc.startRow = Math.max(firstRenderedRow - viewportOffset, 0);\n              calc.endRow = Math.min(lastRenderedRow + viewportOffset, renderableRows - 1);\n            } else if (viewportOffset === 'auto') {\n              var offset = Math.ceil(lastRenderedRow / renderableRows * 12);\n              calc.startRow = Math.max(firstRenderedRow - offset, 0);\n              calc.endRow = Math.min(lastRenderedRow + offset, renderableRows - 1);\n            }\n          }\n\n          _this2.instance.runHooks('afterViewportRowCalculatorOverride', calc);\n        },\n        viewportColumnCalculatorOverride: function viewportColumnCalculatorOverride(calc) {\n          var viewportOffset = _this2.settings.viewportColumnRenderingOffset;\n\n          if (viewportOffset === 'auto' && _this2.settings.fixedColumnsLeft) {\n            viewportOffset = 10;\n          }\n\n          if (viewportOffset > 0 || viewportOffset === 'auto') {\n            var renderableColumns = _this2.countRenderableColumns();\n\n            var firstRenderedColumn = calc.startColumn;\n            var lastRenderedColumn = calc.endColumn;\n\n            if (typeof viewportOffset === 'number') {\n              calc.startColumn = Math.max(firstRenderedColumn - viewportOffset, 0);\n              calc.endColumn = Math.min(lastRenderedColumn + viewportOffset, renderableColumns - 1);\n            }\n\n            if (viewportOffset === 'auto') {\n              var offset = Math.ceil(lastRenderedColumn / renderableColumns * 6);\n              calc.startColumn = Math.max(firstRenderedColumn - offset, 0);\n              calc.endColumn = Math.min(lastRenderedColumn + offset, renderableColumns - 1);\n            }\n          }\n\n          _this2.instance.runHooks('afterViewportColumnCalculatorOverride', calc);\n        },\n        rowHeaderWidth: function rowHeaderWidth() {\n          return _this2.settings.rowHeaderWidth;\n        },\n        columnHeaderHeight: function columnHeaderHeight() {\n          var columnHeaderHeight = _this2.instance.runHooks('modifyColumnHeaderHeight');\n\n          return _this2.settings.columnHeaderHeight || columnHeaderHeight;\n        }\n      };\n      this.instance.runHooks('beforeInitWalkontable', walkontableConfig);\n      this.wt = new Walkontable(walkontableConfig);\n      this.activeWt = this.wt;\n      var spreader = this.wt.wtTable.spreader; // We have to cache width and height after Walkontable initialization.\n\n      var _this$instance$rootEl = this.instance.rootElement.getBoundingClientRect(),\n          width = _this$instance$rootEl.width,\n          height = _this$instance$rootEl.height;\n\n      this.setLastSize(width, height);\n      this.eventManager.addEventListener(spreader, 'mousedown', function (event) {\n        // right mouse button exactly on spreader means right click on the right hand side of vertical scrollbar\n        if (event.target === spreader && event.which === 3) {\n          event.stopPropagation();\n        }\n      });\n      this.eventManager.addEventListener(spreader, 'contextmenu', function (event) {\n        // right mouse button exactly on spreader means right click on the right hand side of vertical scrollbar\n        if (event.target === spreader && event.which === 3) {\n          event.stopPropagation();\n        }\n      });\n      this.eventManager.addEventListener(this.instance.rootDocument.documentElement, 'click', function () {\n        if (_this2.settings.observeDOMVisibility) {\n          if (_this2.wt.drawInterrupted) {\n            _this2.instance.forceFullRender = true;\n\n            _this2.render();\n          }\n        }\n      });\n    }\n    /**\n     * Checks if it's possible to create text selection in element.\n     *\n     * @private\n     * @param {HTMLElement} el The element to check.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isTextSelectionAllowed\",\n    value: function isTextSelectionAllowed(el) {\n      if (isInput(el)) {\n        return true;\n      }\n\n      var isChildOfTableBody = isChildOf(el, this.instance.view.wt.wtTable.spreader);\n\n      if (this.settings.fragmentSelection === true && isChildOfTableBody) {\n        return true;\n      }\n\n      if (this.settings.fragmentSelection === 'cell' && this.isSelectedOnlyCell() && isChildOfTableBody) {\n        return true;\n      }\n\n      if (!this.settings.fragmentSelection && this.isCellEdited() && this.isSelectedOnlyCell()) {\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Checks if user's been called mousedown.\n     *\n     * @private\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isMouseDown\",\n    value: function isMouseDown() {\n      return privatePool.get(this).mouseDown;\n    }\n    /**\n     * Check if selected only one cell.\n     *\n     * @private\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isSelectedOnlyCell\",\n    value: function isSelectedOnlyCell() {\n      var _this$instance$getSel, _this$instance$getSel2;\n\n      return (_this$instance$getSel = (_this$instance$getSel2 = this.instance.getSelectedRangeLast()) === null || _this$instance$getSel2 === void 0 ? void 0 : _this$instance$getSel2.isSingle()) !== null && _this$instance$getSel !== void 0 ? _this$instance$getSel : false;\n    }\n    /**\n     * Checks if active cell is editing.\n     *\n     * @private\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isCellEdited\",\n    value: function isCellEdited() {\n      var activeEditor = this.instance.getActiveEditor();\n      return activeEditor && activeEditor.isOpened();\n    }\n    /**\n     * `beforeDraw` callback.\n     *\n     * @private\n     * @param {boolean} force If `true` rendering was triggered by a change of settings or data or `false` if\n     *                        rendering was triggered by scrolling or moving selection.\n     * @param {object} skipRender Object with `skipRender` property, if it is set to `true ` the next rendering\n     *                            cycle will be skipped.\n     */\n\n  }, {\n    key: \"beforeRender\",\n    value: function beforeRender(force, skipRender) {\n      if (force) {\n        // this.instance.forceFullRender = did Handsontable request full render?\n        this.instance.runHooks('beforeViewRender', this.instance.forceFullRender, skipRender);\n      }\n    }\n    /**\n     * `afterRender` callback.\n     *\n     * @private\n     * @param {boolean} force If `true` rendering was triggered by a change of settings or data or `false` if\n     *                        rendering was triggered by scrolling or moving selection.\n     */\n\n  }, {\n    key: \"afterRender\",\n    value: function afterRender(force) {\n      if (force) {\n        // this.instance.forceFullRender = did Handsontable request full render?\n        this.instance.runHooks('afterViewRender', this.instance.forceFullRender);\n      }\n    }\n    /**\n     * Append row header to a TH element.\n     *\n     * @private\n     * @param {number} visualRowIndex The visual row index.\n     * @param {HTMLTableHeaderCellElement} TH The table header element.\n     */\n\n  }, {\n    key: \"appendRowHeader\",\n    value: function appendRowHeader(visualRowIndex, TH) {\n      if (TH.firstChild) {\n        var container = TH.firstChild;\n\n        if (!hasClass(container, 'relative')) {\n          empty(TH);\n          this.appendRowHeader(visualRowIndex, TH);\n          return;\n        }\n\n        this.updateCellHeader(container.querySelector('.rowHeader'), visualRowIndex, this.instance.getRowHeader);\n      } else {\n        var _this$instance3 = this.instance,\n            rootDocument = _this$instance3.rootDocument,\n            getRowHeader = _this$instance3.getRowHeader;\n        var div = rootDocument.createElement('div');\n        var span = rootDocument.createElement('span');\n        div.className = 'relative';\n        span.className = 'rowHeader';\n        this.updateCellHeader(span, visualRowIndex, getRowHeader);\n        div.appendChild(span);\n        TH.appendChild(div);\n      }\n\n      this.instance.runHooks('afterGetRowHeader', visualRowIndex, TH);\n    }\n    /**\n     * Append column header to a TH element.\n     *\n     * @private\n     * @param {number} visualColumnIndex Visual column index.\n     * @param {HTMLTableHeaderCellElement} TH The table header element.\n     */\n\n  }, {\n    key: \"appendColHeader\",\n    value: function appendColHeader(visualColumnIndex, TH) {\n      if (TH.firstChild) {\n        var container = TH.firstChild;\n\n        if (hasClass(container, 'relative')) {\n          this.updateCellHeader(container.querySelector('.colHeader'), visualColumnIndex, this.instance.getColHeader);\n        } else {\n          empty(TH);\n          this.appendColHeader(visualColumnIndex, TH);\n        }\n      } else {\n        var rootDocument = this.instance.rootDocument;\n        var div = rootDocument.createElement('div');\n        var span = rootDocument.createElement('span');\n        div.className = 'relative';\n        span.className = 'colHeader';\n        this.updateCellHeader(span, visualColumnIndex, this.instance.getColHeader);\n        div.appendChild(span);\n        TH.appendChild(div);\n      }\n\n      this.instance.runHooks('afterGetColHeader', visualColumnIndex, TH);\n    }\n    /**\n     * Updates header cell content.\n     *\n     * @since 0.15.0-beta4\n     * @param {HTMLElement} element Element to update.\n     * @param {number} index Row index or column index.\n     * @param {Function} content Function which should be returns content for this cell.\n     */\n\n  }, {\n    key: \"updateCellHeader\",\n    value: function updateCellHeader(element, index, content) {\n      var renderedIndex = index;\n      var parentOverlay = this.wt.wtOverlays.getParentOverlay(element) || this.wt; // prevent wrong calculations from SampleGenerator\n\n      if (element.parentNode) {\n        if (hasClass(element, 'colHeader')) {\n          renderedIndex = parentOverlay.wtTable.columnFilter.sourceToRendered(index);\n        } else if (hasClass(element, 'rowHeader')) {\n          renderedIndex = parentOverlay.wtTable.rowFilter.sourceToRendered(index);\n        }\n      }\n\n      if (renderedIndex > -1) {\n        fastInnerHTML(element, content(index));\n      } else {\n        // workaround for https://github.com/handsontable/handsontable/issues/1946\n        fastInnerText(element, String.fromCharCode(160));\n        addClass(element, 'cornerHeader');\n      }\n    }\n    /**\n     * Given a element's left position relative to the viewport, returns maximum element width until the right\n     * edge of the viewport (before scrollbar).\n     *\n     * @private\n     * @param {number} leftOffset The left offset.\n     * @returns {number}\n     */\n\n  }, {\n    key: \"maximumVisibleElementWidth\",\n    value: function maximumVisibleElementWidth(leftOffset) {\n      var workspaceWidth = this.wt.wtViewport.getWorkspaceWidth();\n      var maxWidth = workspaceWidth - leftOffset;\n      return maxWidth > 0 ? maxWidth : 0;\n    }\n    /**\n     * Given a element's top position relative to the viewport, returns maximum element height until the bottom\n     * edge of the viewport (before scrollbar).\n     *\n     * @private\n     * @param {number} topOffset The top offset.\n     * @returns {number}\n     */\n\n  }, {\n    key: \"maximumVisibleElementHeight\",\n    value: function maximumVisibleElementHeight(topOffset) {\n      var workspaceHeight = this.wt.wtViewport.getWorkspaceHeight();\n      var maxHeight = workspaceHeight - topOffset;\n      return maxHeight > 0 ? maxHeight : 0;\n    }\n    /**\n     * Sets new dimensions of the container.\n     *\n     * @param {number} width The table width.\n     * @param {number} height The table height.\n     */\n\n  }, {\n    key: \"setLastSize\",\n    value: function setLastSize(width, height) {\n      var priv = privatePool.get(this);\n      var _ref2 = [width, height];\n      priv.lastWidth = _ref2[0];\n      priv.lastHeight = _ref2[1];\n    }\n    /**\n     * Returns cached dimensions.\n     *\n     * @returns {object}\n     */\n\n  }, {\n    key: \"getLastSize\",\n    value: function getLastSize() {\n      var priv = privatePool.get(this);\n      return {\n        width: priv.lastWidth,\n        height: priv.lastHeight\n      };\n    }\n    /**\n     * Checks if master overlay is active.\n     *\n     * @private\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"mainViewIsActive\",\n    value: function mainViewIsActive() {\n      return this.wt === this.activeWt;\n    }\n    /**\n     * Destroyes internal WalkOnTable's instance. Detaches all of the bonded listeners.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.wt.destroy();\n      this.eventManager.destroy();\n    }\n  }]);\n\n  return TableView;\n}();\n\nexport default TableView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
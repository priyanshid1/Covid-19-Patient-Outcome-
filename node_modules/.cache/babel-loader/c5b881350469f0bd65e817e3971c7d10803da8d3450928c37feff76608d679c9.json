{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nimport RowHeadersRenderer from \"./rowHeaders.mjs\";\nimport ColumnHeadersRenderer from \"./columnHeaders.mjs\";\nimport ColGroupRenderer from \"./colGroup.mjs\";\nimport RowsRenderer from \"./rows.mjs\";\nimport CellsRenderer from \"./cells.mjs\";\nimport TableRenderer from \"./table.mjs\";\n/**\n * Content renderer.\n *\n * @class Renderer\n */\n\nvar Renderer = /*#__PURE__*/function () {\n  function Renderer() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      TABLE = _ref.TABLE,\n      THEAD = _ref.THEAD,\n      COLGROUP = _ref.COLGROUP,\n      TBODY = _ref.TBODY,\n      rowUtils = _ref.rowUtils,\n      columnUtils = _ref.columnUtils,\n      cellRenderer = _ref.cellRenderer;\n    _classCallCheck(this, Renderer);\n\n    /**\n     * General renderer class used to render Walkontable content on screen.\n     *\n     * @type {TableRenderer}\n     */\n    this.renderer = new TableRenderer(TABLE, {\n      cellRenderer: cellRenderer\n    });\n    this.renderer.setRenderers({\n      rowHeaders: new RowHeadersRenderer(),\n      columnHeaders: new ColumnHeadersRenderer(THEAD),\n      colGroup: new ColGroupRenderer(COLGROUP),\n      rows: new RowsRenderer(TBODY),\n      cells: new CellsRenderer()\n    });\n    this.renderer.setAxisUtils(rowUtils, columnUtils);\n  }\n  /**\n   * Sets filter calculators for newly calculated row and column position. The filters are used to transform visual\n   * indexes (0 to N) to source indexes provided by Handsontable.\n   *\n   * @param {RowFilter} rowFilter The row filter instance.\n   * @param {ColumnFilter} columnFilter The column filter instance.\n   * @returns {Renderer}\n   */\n\n  _createClass(Renderer, [{\n    key: \"setFilters\",\n    value: function setFilters(rowFilter, columnFilter) {\n      this.renderer.setFilters(rowFilter, columnFilter);\n      return this;\n    }\n    /**\n     * Sets the viewport size of the rendered table.\n     *\n     * @param {number} rowsCount An amount of rows to render.\n     * @param {number} columnsCount An amount of columns to render.\n     * @returns {Renderer}\n     */\n  }, {\n    key: \"setViewportSize\",\n    value: function setViewportSize(rowsCount, columnsCount) {\n      this.renderer.setViewportSize(rowsCount, columnsCount);\n      return this;\n    }\n    /**\n     * Sets row and column header functions.\n     *\n     * @param {Function[]} rowHeaders Row header functions. Factories for creating content for row headers.\n     * @param {Function[]} columnHeaders Column header functions. Factories for creating content for column headers.\n     * @returns {Renderer}\n     */\n  }, {\n    key: \"setHeaderContentRenderers\",\n    value: function setHeaderContentRenderers(rowHeaders, columnHeaders) {\n      this.renderer.setHeaderContentRenderers(rowHeaders, columnHeaders);\n      return this;\n    }\n    /**\n     * Adjusts the table (preparing for render).\n     */\n  }, {\n    key: \"adjust\",\n    value: function adjust() {\n      this.renderer.adjust();\n    }\n    /**\n     * Renders the table.\n     */\n  }, {\n    key: \"render\",\n    value: function render() {\n      this.renderer.render();\n    }\n  }]);\n  return Renderer;\n}();\nexport { RowHeadersRenderer, ColumnHeadersRenderer, ColGroupRenderer, RowsRenderer, CellsRenderer, TableRenderer, Renderer };","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","RowHeadersRenderer","ColumnHeadersRenderer","ColGroupRenderer","RowsRenderer","CellsRenderer","TableRenderer","Renderer","_ref","arguments","undefined","TABLE","THEAD","COLGROUP","TBODY","rowUtils","columnUtils","cellRenderer","renderer","setRenderers","rowHeaders","columnHeaders","colGroup","rows","cells","setAxisUtils","value","setFilters","rowFilter","columnFilter","setViewportSize","rowsCount","columnsCount","setHeaderContentRenderers","adjust","render"],"sources":["/Users/priyadeliwala/Desktop/sales-dashboard/node_modules/handsontable/3rdparty/walkontable/src/renderer/index.mjs"],"sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nimport RowHeadersRenderer from \"./rowHeaders.mjs\";\nimport ColumnHeadersRenderer from \"./columnHeaders.mjs\";\nimport ColGroupRenderer from \"./colGroup.mjs\";\nimport RowsRenderer from \"./rows.mjs\";\nimport CellsRenderer from \"./cells.mjs\";\nimport TableRenderer from \"./table.mjs\";\n/**\n * Content renderer.\n *\n * @class Renderer\n */\n\nvar Renderer = /*#__PURE__*/function () {\n  function Renderer() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        TABLE = _ref.TABLE,\n        THEAD = _ref.THEAD,\n        COLGROUP = _ref.COLGROUP,\n        TBODY = _ref.TBODY,\n        rowUtils = _ref.rowUtils,\n        columnUtils = _ref.columnUtils,\n        cellRenderer = _ref.cellRenderer;\n\n    _classCallCheck(this, Renderer);\n\n    /**\n     * General renderer class used to render Walkontable content on screen.\n     *\n     * @type {TableRenderer}\n     */\n    this.renderer = new TableRenderer(TABLE, {\n      cellRenderer: cellRenderer\n    });\n    this.renderer.setRenderers({\n      rowHeaders: new RowHeadersRenderer(),\n      columnHeaders: new ColumnHeadersRenderer(THEAD),\n      colGroup: new ColGroupRenderer(COLGROUP),\n      rows: new RowsRenderer(TBODY),\n      cells: new CellsRenderer()\n    });\n    this.renderer.setAxisUtils(rowUtils, columnUtils);\n  }\n  /**\n   * Sets filter calculators for newly calculated row and column position. The filters are used to transform visual\n   * indexes (0 to N) to source indexes provided by Handsontable.\n   *\n   * @param {RowFilter} rowFilter The row filter instance.\n   * @param {ColumnFilter} columnFilter The column filter instance.\n   * @returns {Renderer}\n   */\n\n\n  _createClass(Renderer, [{\n    key: \"setFilters\",\n    value: function setFilters(rowFilter, columnFilter) {\n      this.renderer.setFilters(rowFilter, columnFilter);\n      return this;\n    }\n    /**\n     * Sets the viewport size of the rendered table.\n     *\n     * @param {number} rowsCount An amount of rows to render.\n     * @param {number} columnsCount An amount of columns to render.\n     * @returns {Renderer}\n     */\n\n  }, {\n    key: \"setViewportSize\",\n    value: function setViewportSize(rowsCount, columnsCount) {\n      this.renderer.setViewportSize(rowsCount, columnsCount);\n      return this;\n    }\n    /**\n     * Sets row and column header functions.\n     *\n     * @param {Function[]} rowHeaders Row header functions. Factories for creating content for row headers.\n     * @param {Function[]} columnHeaders Column header functions. Factories for creating content for column headers.\n     * @returns {Renderer}\n     */\n\n  }, {\n    key: \"setHeaderContentRenderers\",\n    value: function setHeaderContentRenderers(rowHeaders, columnHeaders) {\n      this.renderer.setHeaderContentRenderers(rowHeaders, columnHeaders);\n      return this;\n    }\n    /**\n     * Adjusts the table (preparing for render).\n     */\n\n  }, {\n    key: \"adjust\",\n    value: function adjust() {\n      this.renderer.adjust();\n    }\n    /**\n     * Renders the table.\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      this.renderer.render();\n    }\n  }]);\n\n  return Renderer;\n}();\n\nexport { RowHeadersRenderer, ColumnHeadersRenderer, ColGroupRenderer, RowsRenderer, CellsRenderer, TableRenderer, Renderer };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
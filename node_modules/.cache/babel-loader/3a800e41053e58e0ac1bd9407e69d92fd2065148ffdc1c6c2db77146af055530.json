{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _s, _e;\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n  return _arr;\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nimport { BasePlugin } from \"../base/index.mjs\";\nimport Hooks from \"../../pluginHooks.mjs\";\nimport { offset, outerHeight, outerWidth } from \"../../helpers/dom/element.mjs\";\nimport { arrayEach, arrayMap } from \"../../helpers/array.mjs\";\nimport EventManager from \"../../eventManager.mjs\";\nimport { CellCoords, CellRange } from \"../../3rdparty/walkontable/src/index.mjs\";\nimport { getDeltas, getDragDirectionAndRange, DIRECTIONS, getMappedFillHandleSetting } from \"./utils.mjs\";\nHooks.getSingleton().register('modifyAutofillRange');\nHooks.getSingleton().register('beforeAutofill');\nHooks.getSingleton().register('afterAutofill');\nexport var PLUGIN_KEY = 'autofill';\nexport var PLUGIN_PRIORITY = 20;\nvar INSERT_ROW_ALTER_ACTION_NAME = 'insert_row';\nvar INTERVAL_FOR_ADDING_ROW = 200;\n/**\n * This plugin provides \"drag-down\" and \"copy-down\" functionalities, both operated using the small square in the right\n * bottom of the cell selection.\n *\n * \"Drag-down\" expands the value of the selected cells to the neighbouring cells when you drag the small\n * square in the corner.\n *\n * \"Copy-down\" copies the value of the selection to all empty cells below when you double click the small square.\n *\n * @class Autofill\n * @plugin Autofill\n */\n\nexport var Autofill = /*#__PURE__*/function (_BasePlugin) {\n  _inherits(Autofill, _BasePlugin);\n  var _super = _createSuper(Autofill);\n  function Autofill(hotInstance) {\n    var _this;\n    _classCallCheck(this, Autofill);\n    _this = _super.call(this, hotInstance);\n    /**\n     * Event manager instance.\n     *\n     * @private\n     * @type {EventManager}\n     */\n\n    _this.eventManager = new EventManager(_assertThisInitialized(_this));\n    /**\n     * Specifies if adding new row started.\n     *\n     * @private\n     * @type {boolean}\n     */\n\n    _this.addingStarted = false;\n    /**\n     * Specifies if there was mouse down on the cell corner.\n     *\n     * @private\n     * @type {boolean}\n     */\n\n    _this.mouseDownOnCellCorner = false;\n    /**\n     * Specifies if mouse was dragged outside Handsontable.\n     *\n     * @private\n     * @type {boolean}\n     */\n\n    _this.mouseDragOutside = false;\n    /**\n     * Specifies how many cell levels were dragged using the handle.\n     *\n     * @private\n     * @type {boolean}\n     */\n\n    _this.handleDraggedCells = 0;\n    /**\n     * Specifies allowed directions of drag (`'horizontal'` or '`vertical`').\n     *\n     * @private\n     * @type {string[]}\n     */\n\n    _this.directions = [];\n    /**\n     * Specifies if can insert new rows if needed.\n     *\n     * @type {boolean}\n     */\n\n    _this.autoInsertRow = false;\n    return _this;\n  }\n  /**\n   * Checks if the plugin is enabled in the Handsontable settings.\n   *\n   * @returns {boolean}\n   */\n\n  _createClass(Autofill, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return this.hot.getSettings().fillHandle;\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n      if (this.enabled) {\n        return;\n      }\n      this.mapSettings();\n      this.registerEvents();\n      this.addHook('afterOnCellCornerMouseDown', function (event) {\n        return _this2.onAfterCellCornerMouseDown(event);\n      });\n      this.addHook('afterOnCellCornerDblClick', function (event) {\n        return _this2.onCellCornerDblClick(event);\n      });\n      this.addHook('beforeOnCellMouseOver', function (_, coords) {\n        return _this2.onBeforeCellMouseOver(coords);\n      });\n      _get(_getPrototypeOf(Autofill.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Updates the plugin state. This method is executed when {@link Core#updateSettings} is invoked.\n     */\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n      _get(_getPrototypeOf(Autofill.prototype), \"updatePlugin\", this).call(this);\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      this.clearMappedSettings();\n      _get(_getPrototypeOf(Autofill.prototype), \"disablePlugin\", this).call(this);\n    }\n    /**\n     * Gets selection data.\n     *\n     * @private\n     * @returns {object[]} Ranges Array of objects with properties `startRow`, `startCol`, `endRow` and `endCol`.\n     */\n  }, {\n    key: \"getSelectionData\",\n    value: function getSelectionData() {\n      var _this3 = this;\n      var selection = this.hot.getSelectedRangeLast();\n      var _selection$getTopLeft = selection.getTopLeftCorner(),\n        startRow = _selection$getTopLeft.row,\n        startCol = _selection$getTopLeft.col;\n      var _selection$getBottomR = selection.getBottomRightCorner(),\n        endRow = _selection$getBottomR.row,\n        endCol = _selection$getBottomR.col;\n      var copyableRanges = this.hot.runHooks('modifyCopyableRange', [{\n        startRow: startRow,\n        startCol: startCol,\n        endRow: endRow,\n        endCol: endCol\n      }]);\n      var copyableRows = [];\n      var copyableColumns = [];\n      var data = [];\n      arrayEach(copyableRanges, function (range) {\n        for (var visualRow = range.startRow; visualRow <= range.endRow; visualRow += 1) {\n          if (copyableRows.indexOf(visualRow) === -1) {\n            copyableRows.push(visualRow);\n          }\n        }\n        for (var visualColumn = range.startCol; visualColumn <= range.endCol; visualColumn += 1) {\n          if (copyableColumns.indexOf(visualColumn) === -1) {\n            copyableColumns.push(visualColumn);\n          }\n        }\n      });\n      arrayEach(copyableRows, function (row) {\n        var rowSet = [];\n        arrayEach(copyableColumns, function (column) {\n          rowSet.push(_this3.hot.getCopyableData(row, column));\n        });\n        data.push(rowSet);\n      });\n      return data;\n    }\n    /**\n     * Try to apply fill values to the area in fill border, omitting the selection border.\n     *\n     * @private\n     * @returns {boolean} Reports if fill was applied.\n     *\n     * @fires Hooks#modifyAutofillRange\n     * @fires Hooks#beforeAutofill\n     * @fires Hooks#afterAutofill\n     */\n  }, {\n    key: \"fillIn\",\n    value: function fillIn() {\n      if (this.hot.selection.highlight.getFill().isEmpty()) {\n        return false;\n      } // Fill area may starts or ends with invisible cell. There won't be any information about it as highlighted\n      // selection store just renderable indexes (It's part of Walkontable). I extrapolate where the start or/and\n      // the end is.\n\n      var _this$hot$selection$h = this.hot.selection.highlight.getFill().getVisualCorners(),\n        _this$hot$selection$h2 = _slicedToArray(_this$hot$selection$h, 4),\n        fillStartRow = _this$hot$selection$h2[0],\n        fillStartColumn = _this$hot$selection$h2[1],\n        fillEndRow = _this$hot$selection$h2[2],\n        fillEndColumn = _this$hot$selection$h2[3];\n      var selectionRangeLast = this.hot.getSelectedRangeLast();\n      var topLeftCorner = selectionRangeLast.getTopLeftCorner();\n      var bottomRightCorner = selectionRangeLast.getBottomRightCorner();\n      this.resetSelectionOfDraggedArea();\n      var cornersOfSelectedCells = [topLeftCorner.row, topLeftCorner.col, bottomRightCorner.row, bottomRightCorner.col];\n      var cornersOfSelectionAndDragAreas = this.hot.runHooks('modifyAutofillRange', [Math.min(topLeftCorner.row, fillStartRow), Math.min(topLeftCorner.col, fillStartColumn), Math.max(bottomRightCorner.row, fillEndRow), Math.max(bottomRightCorner.col, fillEndColumn)], cornersOfSelectedCells);\n      var _getDragDirectionAndR = getDragDirectionAndRange(cornersOfSelectedCells, cornersOfSelectionAndDragAreas),\n        directionOfDrag = _getDragDirectionAndR.directionOfDrag,\n        startOfDragCoords = _getDragDirectionAndR.startOfDragCoords,\n        endOfDragCoords = _getDragDirectionAndR.endOfDragCoords;\n      if (startOfDragCoords && startOfDragCoords.row > -1 && startOfDragCoords.col > -1) {\n        var selectionData = this.getSelectionData();\n        var sourceRange = selectionRangeLast.clone();\n        var targetRange = new CellRange(startOfDragCoords, startOfDragCoords, endOfDragCoords);\n        var beforeAutofillHookResult = this.hot.runHooks('beforeAutofill', selectionData, sourceRange, targetRange, directionOfDrag);\n        if (beforeAutofillHookResult === false) {\n          this.hot.selection.highlight.getFill().clear();\n          this.hot.render();\n          return false;\n        }\n        var deltas = getDeltas(startOfDragCoords, endOfDragCoords, selectionData, directionOfDrag);\n        var fillData = beforeAutofillHookResult;\n        var res = beforeAutofillHookResult;\n        if (['up', 'left'].indexOf(directionOfDrag) > -1 && !(res.length === 1 && res[0].length === 0)) {\n          fillData = [];\n          if (directionOfDrag === 'up') {\n            var dragLength = endOfDragCoords.row - startOfDragCoords.row + 1;\n            var fillOffset = dragLength % res.length;\n            for (var i = 0; i < dragLength; i++) {\n              fillData.push(res[(i + (res.length - fillOffset)) % res.length]);\n            }\n          } else {\n            var _dragLength = endOfDragCoords.col - startOfDragCoords.col + 1;\n            var _fillOffset = _dragLength % res[0].length;\n            for (var _i2 = 0; _i2 < res.length; _i2++) {\n              fillData.push([]);\n              for (var j = 0; j < _dragLength; j++) {\n                fillData[_i2].push(res[_i2][(j + (res[_i2].length - _fillOffset)) % res[_i2].length]);\n              }\n            }\n          }\n        }\n        this.hot.populateFromArray(startOfDragCoords.row, startOfDragCoords.col, fillData, endOfDragCoords.row, endOfDragCoords.col, \"\".concat(this.pluginName, \".fill\"), null, directionOfDrag, deltas);\n        this.setSelection(cornersOfSelectionAndDragAreas);\n        this.hot.runHooks('afterAutofill', fillData, sourceRange, targetRange, directionOfDrag);\n        this.hot.render();\n      } else {\n        // reset to avoid some range bug\n        this.hot._refreshBorders();\n      }\n      return true;\n    }\n    /**\n     * Reduces the selection area if the handle was dragged outside of the table or on headers.\n     *\n     * @private\n     * @param {CellCoords} coords Indexes of selection corners.\n     * @returns {CellCoords}\n     */\n  }, {\n    key: \"reduceSelectionAreaIfNeeded\",\n    value: function reduceSelectionAreaIfNeeded(coords) {\n      if (coords.row < 0) {\n        coords.row = 0;\n      }\n      if (coords.col < 0) {\n        coords.col = 0;\n      }\n      return coords;\n    }\n    /**\n     * Gets the coordinates of the drag & drop borders.\n     *\n     * @private\n     * @param {CellCoords} coordsOfSelection `CellCoords` coord object.\n     * @returns {CellCoords}\n     */\n  }, {\n    key: \"getCoordsOfDragAndDropBorders\",\n    value: function getCoordsOfDragAndDropBorders(coordsOfSelection) {\n      var currentSelection = this.hot.getSelectedRangeLast();\n      var bottomRightCorner = currentSelection.getBottomRightCorner();\n      var coords = coordsOfSelection;\n      if (this.directions.includes(DIRECTIONS.vertical) && this.directions.includes(DIRECTIONS.horizontal)) {\n        var topLeftCorner = currentSelection.getTopLeftCorner();\n        if (bottomRightCorner.col <= coordsOfSelection.col || topLeftCorner.col >= coordsOfSelection.col) {\n          coords = new CellCoords(bottomRightCorner.row, coordsOfSelection.col);\n        }\n        if (bottomRightCorner.row < coordsOfSelection.row || topLeftCorner.row > coordsOfSelection.row) {\n          coords = new CellCoords(coordsOfSelection.row, bottomRightCorner.col);\n        }\n      } else if (this.directions.includes(DIRECTIONS.vertical)) {\n        coords = new CellCoords(coordsOfSelection.row, bottomRightCorner.col);\n      } else if (this.directions.includes(DIRECTIONS.horizontal)) {\n        coords = new CellCoords(bottomRightCorner.row, coordsOfSelection.col);\n      } else {\n        // wrong direction\n        return;\n      }\n      return this.reduceSelectionAreaIfNeeded(coords);\n    }\n    /**\n     * Show the fill border.\n     *\n     * @private\n     * @param {CellCoords} coordsOfSelection `CellCoords` coord object.\n     */\n  }, {\n    key: \"showBorder\",\n    value: function showBorder(coordsOfSelection) {\n      var coordsOfDragAndDropBorders = this.getCoordsOfDragAndDropBorders(coordsOfSelection);\n      if (coordsOfDragAndDropBorders) {\n        this.redrawBorders(coordsOfDragAndDropBorders);\n      }\n    }\n    /**\n     * Add new row.\n     *\n     * @private\n     */\n  }, {\n    key: \"addRow\",\n    value: function addRow() {\n      var _this4 = this;\n      this.hot._registerTimeout(function () {\n        _this4.hot.alter(INSERT_ROW_ALTER_ACTION_NAME, void 0, 1, \"\".concat(_this4.pluginName, \".fill\"));\n        _this4.addingStarted = false;\n      }, INTERVAL_FOR_ADDING_ROW);\n    }\n    /**\n     * Add new rows if they are needed to continue auto-filling values.\n     *\n     * @private\n     */\n  }, {\n    key: \"addNewRowIfNeeded\",\n    value: function addNewRowIfNeeded() {\n      if (!this.hot.selection.highlight.getFill().isEmpty() && this.addingStarted === false && this.autoInsertRow) {\n        var cornersOfSelectedCells = this.hot.getSelectedLast();\n        var cornersOfSelectedDragArea = this.hot.selection.highlight.getFill().getVisualCorners();\n        var nrOfTableRows = this.hot.countRows();\n        if (cornersOfSelectedCells[2] < nrOfTableRows - 1 && cornersOfSelectedDragArea[2] === nrOfTableRows - 1) {\n          this.addingStarted = true;\n          this.addRow();\n        }\n      }\n    }\n    /**\n     * Get index of last adjacent filled in row.\n     *\n     * @private\n     * @param {Array} cornersOfSelectedCells Indexes of selection corners.\n     * @returns {number} Gives number greater than or equal to zero when selection adjacent can be applied.\n     *                   Or -1 when selection adjacent can't be applied.\n     */\n  }, {\n    key: \"getIndexOfLastAdjacentFilledInRow\",\n    value: function getIndexOfLastAdjacentFilledInRow(cornersOfSelectedCells) {\n      var data = this.hot.getData();\n      var nrOfTableRows = this.hot.countRows();\n      var lastFilledInRowIndex;\n      for (var rowIndex = cornersOfSelectedCells[2] + 1; rowIndex < nrOfTableRows; rowIndex++) {\n        for (var columnIndex = cornersOfSelectedCells[1]; columnIndex <= cornersOfSelectedCells[3]; columnIndex++) {\n          var dataInCell = data[rowIndex][columnIndex];\n          if (dataInCell) {\n            return -1;\n          }\n        }\n        var dataInNextLeftCell = data[rowIndex][cornersOfSelectedCells[1] - 1];\n        var dataInNextRightCell = data[rowIndex][cornersOfSelectedCells[3] + 1];\n        if (!!dataInNextLeftCell || !!dataInNextRightCell) {\n          lastFilledInRowIndex = rowIndex;\n        }\n      }\n      return lastFilledInRowIndex;\n    }\n    /**\n     * Adds a selection from the start area to the specific row index.\n     *\n     * @private\n     * @param {Array} selectStartArea Selection area from which we start to create more comprehensive selection.\n     * @param {number} rowIndex The row index into the selection will be added.\n     */\n  }, {\n    key: \"addSelectionFromStartAreaToSpecificRowIndex\",\n    value: function addSelectionFromStartAreaToSpecificRowIndex(selectStartArea, rowIndex) {\n      this.hot.selection.highlight.getFill().clear().add(new CellCoords(selectStartArea[0], selectStartArea[1])).add(new CellCoords(rowIndex, selectStartArea[3])).commit();\n    }\n    /**\n     * Sets selection based on passed corners.\n     *\n     * @private\n     * @param {Array} cornersOfArea An array witch defines selection.\n     */\n  }, {\n    key: \"setSelection\",\n    value: function setSelection(cornersOfArea) {\n      var _this$hot;\n      (_this$hot = this.hot).selectCell.apply(_this$hot, _toConsumableArray(arrayMap(cornersOfArea, function (index) {\n        return Math.max(index, 0);\n      })).concat([false, false]));\n    }\n    /**\n     * Try to select cells down to the last row in the left column and then returns if selection was applied.\n     *\n     * @private\n     * @returns {boolean}\n     */\n  }, {\n    key: \"selectAdjacent\",\n    value: function selectAdjacent() {\n      var cornersOfSelectedCells = this.hot.getSelectedLast();\n      var lastFilledInRowIndex = this.getIndexOfLastAdjacentFilledInRow(cornersOfSelectedCells);\n      if (lastFilledInRowIndex === -1 || lastFilledInRowIndex === void 0) {\n        return false;\n      }\n      this.addSelectionFromStartAreaToSpecificRowIndex(cornersOfSelectedCells, lastFilledInRowIndex);\n      return true;\n    }\n    /**\n     * Resets selection of dragged area.\n     *\n     * @private\n     */\n  }, {\n    key: \"resetSelectionOfDraggedArea\",\n    value: function resetSelectionOfDraggedArea() {\n      this.handleDraggedCells = 0;\n      this.hot.selection.highlight.getFill().clear();\n    }\n    /**\n     * Redraws borders.\n     *\n     * @private\n     * @param {CellCoords} coords `CellCoords` coord object.\n     */\n  }, {\n    key: \"redrawBorders\",\n    value: function redrawBorders(coords) {\n      this.hot.selection.highlight.getFill().clear().add(this.hot.getSelectedRangeLast().from).add(this.hot.getSelectedRangeLast().to).add(coords).commit();\n      this.hot.view.render();\n    }\n    /**\n     * Get if mouse was dragged outside.\n     *\n     * @private\n     * @param {MouseEvent} event `mousemove` event properties.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"getIfMouseWasDraggedOutside\",\n    value: function getIfMouseWasDraggedOutside(event) {\n      var documentElement = this.hot.rootDocument.documentElement;\n      var tableBottom = offset(this.hot.table).top - (this.hot.rootWindow.pageYOffset || documentElement.scrollTop) + outerHeight(this.hot.table);\n      var tableRight = offset(this.hot.table).left - (this.hot.rootWindow.pageXOffset || documentElement.scrollLeft) + outerWidth(this.hot.table);\n      return event.clientY > tableBottom && event.clientX <= tableRight;\n    }\n    /**\n     * Bind the events used by the plugin.\n     *\n     * @private\n     */\n  }, {\n    key: \"registerEvents\",\n    value: function registerEvents() {\n      var _this5 = this;\n      var documentElement = this.hot.rootDocument.documentElement;\n      this.eventManager.addEventListener(documentElement, 'mouseup', function () {\n        return _this5.onMouseUp();\n      });\n      this.eventManager.addEventListener(documentElement, 'mousemove', function (event) {\n        return _this5.onMouseMove(event);\n      });\n    }\n    /**\n     * On cell corner double click callback.\n     *\n     * @private\n     */\n  }, {\n    key: \"onCellCornerDblClick\",\n    value: function onCellCornerDblClick() {\n      var selectionApplied = this.selectAdjacent();\n      if (selectionApplied) {\n        this.fillIn();\n      }\n    }\n    /**\n     * On after cell corner mouse down listener.\n     *\n     * @private\n     */\n  }, {\n    key: \"onAfterCellCornerMouseDown\",\n    value: function onAfterCellCornerMouseDown() {\n      this.handleDraggedCells = 1;\n      this.mouseDownOnCellCorner = true;\n    }\n    /**\n     * On before cell mouse over listener.\n     *\n     * @private\n     * @param {CellCoords} coords `CellCoords` coord object.\n     */\n  }, {\n    key: \"onBeforeCellMouseOver\",\n    value: function onBeforeCellMouseOver(coords) {\n      if (this.mouseDownOnCellCorner && !this.hot.view.isMouseDown() && this.handleDraggedCells) {\n        this.handleDraggedCells += 1;\n        this.showBorder(coords);\n        this.addNewRowIfNeeded();\n      }\n    }\n    /**\n     * On mouse up listener.\n     *\n     * @private\n     */\n  }, {\n    key: \"onMouseUp\",\n    value: function onMouseUp() {\n      if (this.handleDraggedCells) {\n        if (this.handleDraggedCells > 1) {\n          this.fillIn();\n        }\n        this.handleDraggedCells = 0;\n        this.mouseDownOnCellCorner = false;\n      }\n    }\n    /**\n     * On mouse move listener.\n     *\n     * @private\n     * @param {MouseEvent} event `mousemove` event properties.\n     */\n  }, {\n    key: \"onMouseMove\",\n    value: function onMouseMove(event) {\n      var mouseWasDraggedOutside = this.getIfMouseWasDraggedOutside(event);\n      if (this.addingStarted === false && this.handleDraggedCells > 0 && mouseWasDraggedOutside) {\n        this.mouseDragOutside = true;\n        this.addingStarted = true;\n      } else {\n        this.mouseDragOutside = false;\n      }\n      if (this.mouseDragOutside && this.autoInsertRow) {\n        this.addRow();\n      }\n    }\n    /**\n     * Clears mapped settings.\n     *\n     * @private\n     */\n  }, {\n    key: \"clearMappedSettings\",\n    value: function clearMappedSettings() {\n      this.directions.length = 0;\n      this.autoInsertRow = false;\n    }\n    /**\n     * Map settings.\n     *\n     * @private\n     */\n  }, {\n    key: \"mapSettings\",\n    value: function mapSettings() {\n      var mappedSettings = getMappedFillHandleSetting(this.hot.getSettings().fillHandle);\n      this.directions = mappedSettings.directions;\n      this.autoInsertRow = mappedSettings.autoInsertRow;\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _get(_getPrototypeOf(Autofill.prototype), \"destroy\", this).call(this);\n    }\n  }], [{\n    key: \"PLUGIN_KEY\",\n    get: function get() {\n      return PLUGIN_KEY;\n    }\n  }, {\n    key: \"PLUGIN_PRIORITY\",\n    get: function get() {\n      return PLUGIN_PRIORITY;\n    }\n  }]);\n  return Autofill;\n}(BasePlugin);","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","iter","Array","from","isArray","_arrayLikeToArray","_slicedToArray","i","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","o","minLen","n","Object","toString","call","slice","name","test","len","length","arr2","_i","_arr","_n","_d","_s","_e","next","done","push","value","err","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","_get","Reflect","get","property","receiver","base","_superPropBase","desc","getOwnPropertyDescriptor","arguments","apply","object","hasOwnProperty","_getPrototypeOf","_inherits","subClass","superClass","create","_setPrototypeOf","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","construct","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","BasePlugin","Hooks","offset","outerHeight","outerWidth","arrayEach","arrayMap","EventManager","CellCoords","CellRange","getDeltas","getDragDirectionAndRange","DIRECTIONS","getMappedFillHandleSetting","getSingleton","register","PLUGIN_KEY","PLUGIN_PRIORITY","INSERT_ROW_ALTER_ACTION_NAME","INTERVAL_FOR_ADDING_ROW","Autofill","_BasePlugin","_super","hotInstance","_this","eventManager","addingStarted","mouseDownOnCellCorner","mouseDragOutside","handleDraggedCells","directions","autoInsertRow","isEnabled","hot","getSettings","fillHandle","enablePlugin","_this2","enabled","mapSettings","registerEvents","addHook","event","onAfterCellCornerMouseDown","onCellCornerDblClick","_","coords","onBeforeCellMouseOver","updatePlugin","disablePlugin","clearMappedSettings","getSelectionData","_this3","selection","getSelectedRangeLast","_selection$getTopLeft","getTopLeftCorner","startRow","row","startCol","col","_selection$getBottomR","getBottomRightCorner","endRow","endCol","copyableRanges","runHooks","copyableRows","copyableColumns","data","range","visualRow","indexOf","visualColumn","rowSet","column","getCopyableData","fillIn","highlight","getFill","isEmpty","_this$hot$selection$h","getVisualCorners","_this$hot$selection$h2","fillStartRow","fillStartColumn","fillEndRow","fillEndColumn","selectionRangeLast","topLeftCorner","bottomRightCorner","resetSelectionOfDraggedArea","cornersOfSelectedCells","cornersOfSelectionAndDragAreas","Math","min","max","_getDragDirectionAndR","directionOfDrag","startOfDragCoords","endOfDragCoords","selectionData","sourceRange","clone","targetRange","beforeAutofillHookResult","clear","render","deltas","fillData","res","dragLength","fillOffset","_dragLength","_fillOffset","_i2","j","populateFromArray","concat","pluginName","setSelection","_refreshBorders","reduceSelectionAreaIfNeeded","getCoordsOfDragAndDropBorders","coordsOfSelection","currentSelection","includes","vertical","horizontal","showBorder","coordsOfDragAndDropBorders","redrawBorders","addRow","_this4","_registerTimeout","alter","addNewRowIfNeeded","getSelectedLast","cornersOfSelectedDragArea","nrOfTableRows","countRows","getIndexOfLastAdjacentFilledInRow","getData","lastFilledInRowIndex","rowIndex","columnIndex","dataInCell","dataInNextLeftCell","dataInNextRightCell","addSelectionFromStartAreaToSpecificRowIndex","selectStartArea","add","commit","cornersOfArea","_this$hot","selectCell","index","selectAdjacent","to","view","getIfMouseWasDraggedOutside","documentElement","rootDocument","tableBottom","table","top","rootWindow","pageYOffset","scrollTop","tableRight","left","pageXOffset","scrollLeft","clientY","clientX","_this5","addEventListener","onMouseUp","onMouseMove","selectionApplied","isMouseDown","mouseWasDraggedOutside","mappedSettings","destroy"],"sources":["/Users/priyadeliwala/Desktop/sales-dashboard/node_modules/handsontable/plugins/autofill/autofill.mjs"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.set-prototype-of.js\";\nimport \"core-js/modules/es.object.get-prototype-of.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.reflect.construct.js\";\nimport \"core-js/modules/es.reflect.get.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _get() { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport { BasePlugin } from \"../base/index.mjs\";\nimport Hooks from \"../../pluginHooks.mjs\";\nimport { offset, outerHeight, outerWidth } from \"../../helpers/dom/element.mjs\";\nimport { arrayEach, arrayMap } from \"../../helpers/array.mjs\";\nimport EventManager from \"../../eventManager.mjs\";\nimport { CellCoords, CellRange } from \"../../3rdparty/walkontable/src/index.mjs\";\nimport { getDeltas, getDragDirectionAndRange, DIRECTIONS, getMappedFillHandleSetting } from \"./utils.mjs\";\nHooks.getSingleton().register('modifyAutofillRange');\nHooks.getSingleton().register('beforeAutofill');\nHooks.getSingleton().register('afterAutofill');\nexport var PLUGIN_KEY = 'autofill';\nexport var PLUGIN_PRIORITY = 20;\nvar INSERT_ROW_ALTER_ACTION_NAME = 'insert_row';\nvar INTERVAL_FOR_ADDING_ROW = 200;\n/**\n * This plugin provides \"drag-down\" and \"copy-down\" functionalities, both operated using the small square in the right\n * bottom of the cell selection.\n *\n * \"Drag-down\" expands the value of the selected cells to the neighbouring cells when you drag the small\n * square in the corner.\n *\n * \"Copy-down\" copies the value of the selection to all empty cells below when you double click the small square.\n *\n * @class Autofill\n * @plugin Autofill\n */\n\nexport var Autofill = /*#__PURE__*/function (_BasePlugin) {\n  _inherits(Autofill, _BasePlugin);\n\n  var _super = _createSuper(Autofill);\n\n  function Autofill(hotInstance) {\n    var _this;\n\n    _classCallCheck(this, Autofill);\n\n    _this = _super.call(this, hotInstance);\n    /**\n     * Event manager instance.\n     *\n     * @private\n     * @type {EventManager}\n     */\n\n    _this.eventManager = new EventManager(_assertThisInitialized(_this));\n    /**\n     * Specifies if adding new row started.\n     *\n     * @private\n     * @type {boolean}\n     */\n\n    _this.addingStarted = false;\n    /**\n     * Specifies if there was mouse down on the cell corner.\n     *\n     * @private\n     * @type {boolean}\n     */\n\n    _this.mouseDownOnCellCorner = false;\n    /**\n     * Specifies if mouse was dragged outside Handsontable.\n     *\n     * @private\n     * @type {boolean}\n     */\n\n    _this.mouseDragOutside = false;\n    /**\n     * Specifies how many cell levels were dragged using the handle.\n     *\n     * @private\n     * @type {boolean}\n     */\n\n    _this.handleDraggedCells = 0;\n    /**\n     * Specifies allowed directions of drag (`'horizontal'` or '`vertical`').\n     *\n     * @private\n     * @type {string[]}\n     */\n\n    _this.directions = [];\n    /**\n     * Specifies if can insert new rows if needed.\n     *\n     * @type {boolean}\n     */\n\n    _this.autoInsertRow = false;\n    return _this;\n  }\n  /**\n   * Checks if the plugin is enabled in the Handsontable settings.\n   *\n   * @returns {boolean}\n   */\n\n\n  _createClass(Autofill, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return this.hot.getSettings().fillHandle;\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n\n      if (this.enabled) {\n        return;\n      }\n\n      this.mapSettings();\n      this.registerEvents();\n      this.addHook('afterOnCellCornerMouseDown', function (event) {\n        return _this2.onAfterCellCornerMouseDown(event);\n      });\n      this.addHook('afterOnCellCornerDblClick', function (event) {\n        return _this2.onCellCornerDblClick(event);\n      });\n      this.addHook('beforeOnCellMouseOver', function (_, coords) {\n        return _this2.onBeforeCellMouseOver(coords);\n      });\n\n      _get(_getPrototypeOf(Autofill.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Updates the plugin state. This method is executed when {@link Core#updateSettings} is invoked.\n     */\n\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n\n      _get(_getPrototypeOf(Autofill.prototype), \"updatePlugin\", this).call(this);\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      this.clearMappedSettings();\n\n      _get(_getPrototypeOf(Autofill.prototype), \"disablePlugin\", this).call(this);\n    }\n    /**\n     * Gets selection data.\n     *\n     * @private\n     * @returns {object[]} Ranges Array of objects with properties `startRow`, `startCol`, `endRow` and `endCol`.\n     */\n\n  }, {\n    key: \"getSelectionData\",\n    value: function getSelectionData() {\n      var _this3 = this;\n\n      var selection = this.hot.getSelectedRangeLast();\n\n      var _selection$getTopLeft = selection.getTopLeftCorner(),\n          startRow = _selection$getTopLeft.row,\n          startCol = _selection$getTopLeft.col;\n\n      var _selection$getBottomR = selection.getBottomRightCorner(),\n          endRow = _selection$getBottomR.row,\n          endCol = _selection$getBottomR.col;\n\n      var copyableRanges = this.hot.runHooks('modifyCopyableRange', [{\n        startRow: startRow,\n        startCol: startCol,\n        endRow: endRow,\n        endCol: endCol\n      }]);\n      var copyableRows = [];\n      var copyableColumns = [];\n      var data = [];\n      arrayEach(copyableRanges, function (range) {\n        for (var visualRow = range.startRow; visualRow <= range.endRow; visualRow += 1) {\n          if (copyableRows.indexOf(visualRow) === -1) {\n            copyableRows.push(visualRow);\n          }\n        }\n\n        for (var visualColumn = range.startCol; visualColumn <= range.endCol; visualColumn += 1) {\n          if (copyableColumns.indexOf(visualColumn) === -1) {\n            copyableColumns.push(visualColumn);\n          }\n        }\n      });\n      arrayEach(copyableRows, function (row) {\n        var rowSet = [];\n        arrayEach(copyableColumns, function (column) {\n          rowSet.push(_this3.hot.getCopyableData(row, column));\n        });\n        data.push(rowSet);\n      });\n      return data;\n    }\n    /**\n     * Try to apply fill values to the area in fill border, omitting the selection border.\n     *\n     * @private\n     * @returns {boolean} Reports if fill was applied.\n     *\n     * @fires Hooks#modifyAutofillRange\n     * @fires Hooks#beforeAutofill\n     * @fires Hooks#afterAutofill\n     */\n\n  }, {\n    key: \"fillIn\",\n    value: function fillIn() {\n      if (this.hot.selection.highlight.getFill().isEmpty()) {\n        return false;\n      } // Fill area may starts or ends with invisible cell. There won't be any information about it as highlighted\n      // selection store just renderable indexes (It's part of Walkontable). I extrapolate where the start or/and\n      // the end is.\n\n\n      var _this$hot$selection$h = this.hot.selection.highlight.getFill().getVisualCorners(),\n          _this$hot$selection$h2 = _slicedToArray(_this$hot$selection$h, 4),\n          fillStartRow = _this$hot$selection$h2[0],\n          fillStartColumn = _this$hot$selection$h2[1],\n          fillEndRow = _this$hot$selection$h2[2],\n          fillEndColumn = _this$hot$selection$h2[3];\n\n      var selectionRangeLast = this.hot.getSelectedRangeLast();\n      var topLeftCorner = selectionRangeLast.getTopLeftCorner();\n      var bottomRightCorner = selectionRangeLast.getBottomRightCorner();\n      this.resetSelectionOfDraggedArea();\n      var cornersOfSelectedCells = [topLeftCorner.row, topLeftCorner.col, bottomRightCorner.row, bottomRightCorner.col];\n      var cornersOfSelectionAndDragAreas = this.hot.runHooks('modifyAutofillRange', [Math.min(topLeftCorner.row, fillStartRow), Math.min(topLeftCorner.col, fillStartColumn), Math.max(bottomRightCorner.row, fillEndRow), Math.max(bottomRightCorner.col, fillEndColumn)], cornersOfSelectedCells);\n\n      var _getDragDirectionAndR = getDragDirectionAndRange(cornersOfSelectedCells, cornersOfSelectionAndDragAreas),\n          directionOfDrag = _getDragDirectionAndR.directionOfDrag,\n          startOfDragCoords = _getDragDirectionAndR.startOfDragCoords,\n          endOfDragCoords = _getDragDirectionAndR.endOfDragCoords;\n\n      if (startOfDragCoords && startOfDragCoords.row > -1 && startOfDragCoords.col > -1) {\n        var selectionData = this.getSelectionData();\n        var sourceRange = selectionRangeLast.clone();\n        var targetRange = new CellRange(startOfDragCoords, startOfDragCoords, endOfDragCoords);\n        var beforeAutofillHookResult = this.hot.runHooks('beforeAutofill', selectionData, sourceRange, targetRange, directionOfDrag);\n\n        if (beforeAutofillHookResult === false) {\n          this.hot.selection.highlight.getFill().clear();\n          this.hot.render();\n          return false;\n        }\n\n        var deltas = getDeltas(startOfDragCoords, endOfDragCoords, selectionData, directionOfDrag);\n        var fillData = beforeAutofillHookResult;\n        var res = beforeAutofillHookResult;\n\n        if (['up', 'left'].indexOf(directionOfDrag) > -1 && !(res.length === 1 && res[0].length === 0)) {\n          fillData = [];\n\n          if (directionOfDrag === 'up') {\n            var dragLength = endOfDragCoords.row - startOfDragCoords.row + 1;\n            var fillOffset = dragLength % res.length;\n\n            for (var i = 0; i < dragLength; i++) {\n              fillData.push(res[(i + (res.length - fillOffset)) % res.length]);\n            }\n          } else {\n            var _dragLength = endOfDragCoords.col - startOfDragCoords.col + 1;\n\n            var _fillOffset = _dragLength % res[0].length;\n\n            for (var _i2 = 0; _i2 < res.length; _i2++) {\n              fillData.push([]);\n\n              for (var j = 0; j < _dragLength; j++) {\n                fillData[_i2].push(res[_i2][(j + (res[_i2].length - _fillOffset)) % res[_i2].length]);\n              }\n            }\n          }\n        }\n\n        this.hot.populateFromArray(startOfDragCoords.row, startOfDragCoords.col, fillData, endOfDragCoords.row, endOfDragCoords.col, \"\".concat(this.pluginName, \".fill\"), null, directionOfDrag, deltas);\n        this.setSelection(cornersOfSelectionAndDragAreas);\n        this.hot.runHooks('afterAutofill', fillData, sourceRange, targetRange, directionOfDrag);\n        this.hot.render();\n      } else {\n        // reset to avoid some range bug\n        this.hot._refreshBorders();\n      }\n\n      return true;\n    }\n    /**\n     * Reduces the selection area if the handle was dragged outside of the table or on headers.\n     *\n     * @private\n     * @param {CellCoords} coords Indexes of selection corners.\n     * @returns {CellCoords}\n     */\n\n  }, {\n    key: \"reduceSelectionAreaIfNeeded\",\n    value: function reduceSelectionAreaIfNeeded(coords) {\n      if (coords.row < 0) {\n        coords.row = 0;\n      }\n\n      if (coords.col < 0) {\n        coords.col = 0;\n      }\n\n      return coords;\n    }\n    /**\n     * Gets the coordinates of the drag & drop borders.\n     *\n     * @private\n     * @param {CellCoords} coordsOfSelection `CellCoords` coord object.\n     * @returns {CellCoords}\n     */\n\n  }, {\n    key: \"getCoordsOfDragAndDropBorders\",\n    value: function getCoordsOfDragAndDropBorders(coordsOfSelection) {\n      var currentSelection = this.hot.getSelectedRangeLast();\n      var bottomRightCorner = currentSelection.getBottomRightCorner();\n      var coords = coordsOfSelection;\n\n      if (this.directions.includes(DIRECTIONS.vertical) && this.directions.includes(DIRECTIONS.horizontal)) {\n        var topLeftCorner = currentSelection.getTopLeftCorner();\n\n        if (bottomRightCorner.col <= coordsOfSelection.col || topLeftCorner.col >= coordsOfSelection.col) {\n          coords = new CellCoords(bottomRightCorner.row, coordsOfSelection.col);\n        }\n\n        if (bottomRightCorner.row < coordsOfSelection.row || topLeftCorner.row > coordsOfSelection.row) {\n          coords = new CellCoords(coordsOfSelection.row, bottomRightCorner.col);\n        }\n      } else if (this.directions.includes(DIRECTIONS.vertical)) {\n        coords = new CellCoords(coordsOfSelection.row, bottomRightCorner.col);\n      } else if (this.directions.includes(DIRECTIONS.horizontal)) {\n        coords = new CellCoords(bottomRightCorner.row, coordsOfSelection.col);\n      } else {\n        // wrong direction\n        return;\n      }\n\n      return this.reduceSelectionAreaIfNeeded(coords);\n    }\n    /**\n     * Show the fill border.\n     *\n     * @private\n     * @param {CellCoords} coordsOfSelection `CellCoords` coord object.\n     */\n\n  }, {\n    key: \"showBorder\",\n    value: function showBorder(coordsOfSelection) {\n      var coordsOfDragAndDropBorders = this.getCoordsOfDragAndDropBorders(coordsOfSelection);\n\n      if (coordsOfDragAndDropBorders) {\n        this.redrawBorders(coordsOfDragAndDropBorders);\n      }\n    }\n    /**\n     * Add new row.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"addRow\",\n    value: function addRow() {\n      var _this4 = this;\n\n      this.hot._registerTimeout(function () {\n        _this4.hot.alter(INSERT_ROW_ALTER_ACTION_NAME, void 0, 1, \"\".concat(_this4.pluginName, \".fill\"));\n\n        _this4.addingStarted = false;\n      }, INTERVAL_FOR_ADDING_ROW);\n    }\n    /**\n     * Add new rows if they are needed to continue auto-filling values.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"addNewRowIfNeeded\",\n    value: function addNewRowIfNeeded() {\n      if (!this.hot.selection.highlight.getFill().isEmpty() && this.addingStarted === false && this.autoInsertRow) {\n        var cornersOfSelectedCells = this.hot.getSelectedLast();\n        var cornersOfSelectedDragArea = this.hot.selection.highlight.getFill().getVisualCorners();\n        var nrOfTableRows = this.hot.countRows();\n\n        if (cornersOfSelectedCells[2] < nrOfTableRows - 1 && cornersOfSelectedDragArea[2] === nrOfTableRows - 1) {\n          this.addingStarted = true;\n          this.addRow();\n        }\n      }\n    }\n    /**\n     * Get index of last adjacent filled in row.\n     *\n     * @private\n     * @param {Array} cornersOfSelectedCells Indexes of selection corners.\n     * @returns {number} Gives number greater than or equal to zero when selection adjacent can be applied.\n     *                   Or -1 when selection adjacent can't be applied.\n     */\n\n  }, {\n    key: \"getIndexOfLastAdjacentFilledInRow\",\n    value: function getIndexOfLastAdjacentFilledInRow(cornersOfSelectedCells) {\n      var data = this.hot.getData();\n      var nrOfTableRows = this.hot.countRows();\n      var lastFilledInRowIndex;\n\n      for (var rowIndex = cornersOfSelectedCells[2] + 1; rowIndex < nrOfTableRows; rowIndex++) {\n        for (var columnIndex = cornersOfSelectedCells[1]; columnIndex <= cornersOfSelectedCells[3]; columnIndex++) {\n          var dataInCell = data[rowIndex][columnIndex];\n\n          if (dataInCell) {\n            return -1;\n          }\n        }\n\n        var dataInNextLeftCell = data[rowIndex][cornersOfSelectedCells[1] - 1];\n        var dataInNextRightCell = data[rowIndex][cornersOfSelectedCells[3] + 1];\n\n        if (!!dataInNextLeftCell || !!dataInNextRightCell) {\n          lastFilledInRowIndex = rowIndex;\n        }\n      }\n\n      return lastFilledInRowIndex;\n    }\n    /**\n     * Adds a selection from the start area to the specific row index.\n     *\n     * @private\n     * @param {Array} selectStartArea Selection area from which we start to create more comprehensive selection.\n     * @param {number} rowIndex The row index into the selection will be added.\n     */\n\n  }, {\n    key: \"addSelectionFromStartAreaToSpecificRowIndex\",\n    value: function addSelectionFromStartAreaToSpecificRowIndex(selectStartArea, rowIndex) {\n      this.hot.selection.highlight.getFill().clear().add(new CellCoords(selectStartArea[0], selectStartArea[1])).add(new CellCoords(rowIndex, selectStartArea[3])).commit();\n    }\n    /**\n     * Sets selection based on passed corners.\n     *\n     * @private\n     * @param {Array} cornersOfArea An array witch defines selection.\n     */\n\n  }, {\n    key: \"setSelection\",\n    value: function setSelection(cornersOfArea) {\n      var _this$hot;\n\n      (_this$hot = this.hot).selectCell.apply(_this$hot, _toConsumableArray(arrayMap(cornersOfArea, function (index) {\n        return Math.max(index, 0);\n      })).concat([false, false]));\n    }\n    /**\n     * Try to select cells down to the last row in the left column and then returns if selection was applied.\n     *\n     * @private\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"selectAdjacent\",\n    value: function selectAdjacent() {\n      var cornersOfSelectedCells = this.hot.getSelectedLast();\n      var lastFilledInRowIndex = this.getIndexOfLastAdjacentFilledInRow(cornersOfSelectedCells);\n\n      if (lastFilledInRowIndex === -1 || lastFilledInRowIndex === void 0) {\n        return false;\n      }\n\n      this.addSelectionFromStartAreaToSpecificRowIndex(cornersOfSelectedCells, lastFilledInRowIndex);\n      return true;\n    }\n    /**\n     * Resets selection of dragged area.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"resetSelectionOfDraggedArea\",\n    value: function resetSelectionOfDraggedArea() {\n      this.handleDraggedCells = 0;\n      this.hot.selection.highlight.getFill().clear();\n    }\n    /**\n     * Redraws borders.\n     *\n     * @private\n     * @param {CellCoords} coords `CellCoords` coord object.\n     */\n\n  }, {\n    key: \"redrawBorders\",\n    value: function redrawBorders(coords) {\n      this.hot.selection.highlight.getFill().clear().add(this.hot.getSelectedRangeLast().from).add(this.hot.getSelectedRangeLast().to).add(coords).commit();\n      this.hot.view.render();\n    }\n    /**\n     * Get if mouse was dragged outside.\n     *\n     * @private\n     * @param {MouseEvent} event `mousemove` event properties.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"getIfMouseWasDraggedOutside\",\n    value: function getIfMouseWasDraggedOutside(event) {\n      var documentElement = this.hot.rootDocument.documentElement;\n      var tableBottom = offset(this.hot.table).top - (this.hot.rootWindow.pageYOffset || documentElement.scrollTop) + outerHeight(this.hot.table);\n      var tableRight = offset(this.hot.table).left - (this.hot.rootWindow.pageXOffset || documentElement.scrollLeft) + outerWidth(this.hot.table);\n      return event.clientY > tableBottom && event.clientX <= tableRight;\n    }\n    /**\n     * Bind the events used by the plugin.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"registerEvents\",\n    value: function registerEvents() {\n      var _this5 = this;\n\n      var documentElement = this.hot.rootDocument.documentElement;\n      this.eventManager.addEventListener(documentElement, 'mouseup', function () {\n        return _this5.onMouseUp();\n      });\n      this.eventManager.addEventListener(documentElement, 'mousemove', function (event) {\n        return _this5.onMouseMove(event);\n      });\n    }\n    /**\n     * On cell corner double click callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onCellCornerDblClick\",\n    value: function onCellCornerDblClick() {\n      var selectionApplied = this.selectAdjacent();\n\n      if (selectionApplied) {\n        this.fillIn();\n      }\n    }\n    /**\n     * On after cell corner mouse down listener.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onAfterCellCornerMouseDown\",\n    value: function onAfterCellCornerMouseDown() {\n      this.handleDraggedCells = 1;\n      this.mouseDownOnCellCorner = true;\n    }\n    /**\n     * On before cell mouse over listener.\n     *\n     * @private\n     * @param {CellCoords} coords `CellCoords` coord object.\n     */\n\n  }, {\n    key: \"onBeforeCellMouseOver\",\n    value: function onBeforeCellMouseOver(coords) {\n      if (this.mouseDownOnCellCorner && !this.hot.view.isMouseDown() && this.handleDraggedCells) {\n        this.handleDraggedCells += 1;\n        this.showBorder(coords);\n        this.addNewRowIfNeeded();\n      }\n    }\n    /**\n     * On mouse up listener.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onMouseUp\",\n    value: function onMouseUp() {\n      if (this.handleDraggedCells) {\n        if (this.handleDraggedCells > 1) {\n          this.fillIn();\n        }\n\n        this.handleDraggedCells = 0;\n        this.mouseDownOnCellCorner = false;\n      }\n    }\n    /**\n     * On mouse move listener.\n     *\n     * @private\n     * @param {MouseEvent} event `mousemove` event properties.\n     */\n\n  }, {\n    key: \"onMouseMove\",\n    value: function onMouseMove(event) {\n      var mouseWasDraggedOutside = this.getIfMouseWasDraggedOutside(event);\n\n      if (this.addingStarted === false && this.handleDraggedCells > 0 && mouseWasDraggedOutside) {\n        this.mouseDragOutside = true;\n        this.addingStarted = true;\n      } else {\n        this.mouseDragOutside = false;\n      }\n\n      if (this.mouseDragOutside && this.autoInsertRow) {\n        this.addRow();\n      }\n    }\n    /**\n     * Clears mapped settings.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"clearMappedSettings\",\n    value: function clearMappedSettings() {\n      this.directions.length = 0;\n      this.autoInsertRow = false;\n    }\n    /**\n     * Map settings.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"mapSettings\",\n    value: function mapSettings() {\n      var mappedSettings = getMappedFillHandleSetting(this.hot.getSettings().fillHandle);\n      this.directions = mappedSettings.directions;\n      this.autoInsertRow = mappedSettings.autoInsertRow;\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _get(_getPrototypeOf(Autofill.prototype), \"destroy\", this).call(this);\n    }\n  }], [{\n    key: \"PLUGIN_KEY\",\n    get: function get() {\n      return PLUGIN_KEY;\n    }\n  }, {\n    key: \"PLUGIN_PRIORITY\",\n    get: function get() {\n      return PLUGIN_PRIORITY;\n    }\n  }]);\n\n  return Autofill;\n}(BasePlugin);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
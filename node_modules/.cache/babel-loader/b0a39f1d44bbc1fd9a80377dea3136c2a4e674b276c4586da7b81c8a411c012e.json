{"ast":null,"code":"function _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _s, _e;\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n  return _arr;\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nimport { addClass, hasClass } from \"./../../../helpers/dom/element.mjs\";\nimport Border from \"./border.mjs\";\nimport CellCoords from \"./cell/coords.mjs\";\nimport CellRange from \"./cell/range.mjs\";\n/**\n * @class Selection\n */\n\nvar Selection = /*#__PURE__*/function () {\n  /**\n   * @param {object} settings The selection settings object.\n   * @param {CellRange} cellRange The cell range instance.\n   */\n  function Selection(settings, cellRange) {\n    _classCallCheck(this, Selection);\n    this.settings = settings;\n    this.cellRange = cellRange || null;\n    this.instanceBorders = {};\n    this.classNames = [this.settings.className];\n    this.classNameGenerator = this.linearClassNameGenerator(this.settings.className, this.settings.layerLevel);\n  }\n  /**\n   * Each Walkontable clone requires it's own border for every selection. This method creates and returns selection\n   * borders per instance.\n   *\n   * @param {Walkontable} wotInstance The Walkontable instance.\n   * @returns {Border}\n   */\n\n  _createClass(Selection, [{\n    key: \"getBorder\",\n    value: function getBorder(wotInstance) {\n      if (!this.instanceBorders[wotInstance.guid]) {\n        this.instanceBorders[wotInstance.guid] = new Border(wotInstance, this.settings);\n      }\n      return this.instanceBorders[wotInstance.guid];\n    }\n    /**\n     * Checks if selection is empty.\n     *\n     * @returns {boolean}\n     */\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return this.cellRange === null;\n    }\n    /**\n     * Adds a cell coords to the selection.\n     *\n     * @param {CellCoords} coords The cell coordinates to add.\n     * @returns {Selection}\n     */\n  }, {\n    key: \"add\",\n    value: function add(coords) {\n      if (this.isEmpty()) {\n        this.cellRange = new CellRange(coords);\n      } else {\n        this.cellRange.expand(coords);\n      }\n      return this;\n    }\n    /**\n     * If selection range from or to property equals oldCoords, replace it with newCoords. Return boolean\n     * information about success.\n     *\n     * @param {CellCoords} oldCoords An old cell coordinates to replace.\n     * @param {CellCoords} newCoords The new cell coordinates.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"replace\",\n    value: function replace(oldCoords, newCoords) {\n      if (!this.isEmpty()) {\n        if (this.cellRange.from.isEqual(oldCoords)) {\n          this.cellRange.from = newCoords;\n          return true;\n        }\n        if (this.cellRange.to.isEqual(oldCoords)) {\n          this.cellRange.to = newCoords;\n          return true;\n        }\n      }\n      return false;\n    }\n    /**\n     * Clears selection.\n     *\n     * @returns {Selection}\n     */\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.cellRange = null;\n      return this;\n    }\n    /**\n     * Returns the top left (TL) and bottom right (BR) selection coordinates.\n     *\n     * @returns {Array} Returns array of coordinates for example `[1, 1, 5, 5]`.\n     */\n  }, {\n    key: \"getCorners\",\n    value: function getCorners() {\n      var topLeft = this.cellRange.getOuterTopLeftCorner();\n      var bottomRight = this.cellRange.getOuterBottomRightCorner();\n      return [topLeft.row, topLeft.col, bottomRight.row, bottomRight.col];\n    }\n    /**\n     * Adds class name to cell element at given coords.\n     *\n     * @param {Walkontable} wotInstance Walkontable instance.\n     * @param {number} sourceRow Cell row coord.\n     * @param {number} sourceColumn Cell column coord.\n     * @param {string} className Class name.\n     * @param {boolean} [markIntersections=false] If `true`, linear className generator will be used to add CSS classes\n     *                                            in a continuous way.\n     * @returns {Selection}\n     */\n  }, {\n    key: \"addClassAtCoords\",\n    value: function addClassAtCoords(wotInstance, sourceRow, sourceColumn, className) {\n      var markIntersections = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n      var TD = wotInstance.wtTable.getCell(new CellCoords(sourceRow, sourceColumn));\n      if (_typeof(TD) === 'object') {\n        var cellClassName = className;\n        if (markIntersections) {\n          cellClassName = this.classNameGenerator(TD);\n          if (!this.classNames.includes(cellClassName)) {\n            this.classNames.push(cellClassName);\n          }\n        }\n        addClass(TD, cellClassName);\n      }\n      return this;\n    }\n    /**\n     * Generate helper for calculating classNames based on previously added base className.\n     * The generated className is always generated as a continuation of the previous className. For example, when\n     * the currently checked element has 'area-2' className the generated new className will be 'area-3'. When\n     * the element doesn't have any classNames than the base className will be returned ('area');.\n     *\n     * @param {string} baseClassName Base className to be used.\n     * @param {number} layerLevelOwner Layer level which the instance of the Selection belongs to.\n     * @returns {Function}\n     */\n  }, {\n    key: \"linearClassNameGenerator\",\n    value: function linearClassNameGenerator(baseClassName, layerLevelOwner) {\n      // TODO: Make this recursive function Proper Tail Calls (TCO/PTC) friendly.\n      return function calcClassName(element) {\n        var previousIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n        if (layerLevelOwner === 0 || previousIndex === 0) {\n          return baseClassName;\n        }\n        var index = previousIndex >= 0 ? previousIndex : layerLevelOwner;\n        var className = baseClassName;\n        index -= 1;\n        var previousClassName = index === 0 ? baseClassName : \"\".concat(baseClassName, \"-\").concat(index);\n        if (hasClass(element, previousClassName)) {\n          var currentLayer = index + 1;\n          className = \"\".concat(baseClassName, \"-\").concat(currentLayer);\n        } else {\n          className = calcClassName(element, index);\n        }\n        return className;\n      };\n    }\n    /**\n     * @param {Walkontable} wotInstance The Walkontable instance.\n     */\n  }, {\n    key: \"draw\",\n    value: function draw(wotInstance) {\n      if (this.isEmpty()) {\n        if (this.settings.border) {\n          this.getBorder(wotInstance).disappear();\n        }\n        return;\n      }\n      var renderedRows = wotInstance.wtTable.getRenderedRowsCount();\n      var renderedColumns = wotInstance.wtTable.getRenderedColumnsCount();\n      var corners = this.getCorners();\n      var _corners = _slicedToArray(corners, 4),\n        topRow = _corners[0],\n        topColumn = _corners[1],\n        bottomRow = _corners[2],\n        bottomColumn = _corners[3];\n      var _this$settings = this.settings,\n        highlightHeaderClassName = _this$settings.highlightHeaderClassName,\n        highlightColumnClassName = _this$settings.highlightColumnClassName,\n        highlightRowClassName = _this$settings.highlightRowClassName,\n        highlightOnlyClosestHeader = _this$settings.highlightOnlyClosestHeader,\n        selectionType = _this$settings.selectionType;\n      var isHeaderSelectionType = selectionType === void 0 || ['active-header', 'header'].includes(selectionType);\n      if (isHeaderSelectionType && topColumn !== null && bottomColumn !== null) {\n        var selectionColumnCursor = 0;\n        for (var column = 0; column < renderedColumns; column += 1) {\n          var sourceCol = wotInstance.wtTable.columnFilter.renderedToSource(column);\n          if (sourceCol >= topColumn && sourceCol <= bottomColumn) {\n            var THs = wotInstance.wtTable.getColumnHeaders(sourceCol);\n            var closestHeaderLevel = THs.length - 1;\n            if (highlightOnlyClosestHeader && THs.length > 1) {\n              THs = [THs[closestHeaderLevel]];\n            }\n            for (var headerLevel = 0; headerLevel < THs.length; headerLevel += 1) {\n              var newClasses = [];\n              var TH = THs[headerLevel];\n              if (highlightHeaderClassName) {\n                newClasses.push(highlightHeaderClassName);\n              }\n              if (highlightColumnClassName) {\n                newClasses.push(highlightColumnClassName);\n              }\n              headerLevel = highlightOnlyClosestHeader ? closestHeaderLevel : headerLevel;\n              var newSourceCol = wotInstance.getSetting('onBeforeHighlightingColumnHeader', sourceCol, headerLevel, {\n                selectionType: selectionType,\n                columnCursor: selectionColumnCursor,\n                selectionWidth: bottomColumn - topColumn + 1,\n                classNames: newClasses\n              });\n              if (newSourceCol !== sourceCol) {\n                TH = wotInstance.wtTable.getColumnHeader(newSourceCol, headerLevel);\n              }\n              addClass(TH, newClasses);\n            }\n            selectionColumnCursor += 1;\n          }\n        }\n      }\n      if (topRow !== null && bottomRow !== null) {\n        var selectionRowCursor = 0;\n        for (var row = 0; row < renderedRows; row += 1) {\n          var sourceRow = wotInstance.wtTable.rowFilter.renderedToSource(row);\n          if (isHeaderSelectionType && sourceRow >= topRow && sourceRow <= bottomRow) {\n            var _THs = wotInstance.wtTable.getRowHeaders(sourceRow);\n            var _closestHeaderLevel = _THs.length - 1;\n            if (highlightOnlyClosestHeader && _THs.length > 1) {\n              _THs = [_THs[_closestHeaderLevel]];\n            }\n            for (var _headerLevel = 0; _headerLevel < _THs.length; _headerLevel += 1) {\n              var _newClasses = [];\n              var _TH = _THs[_headerLevel];\n              if (highlightHeaderClassName) {\n                _newClasses.push(highlightHeaderClassName);\n              }\n              if (highlightRowClassName) {\n                _newClasses.push(highlightRowClassName);\n              }\n              _headerLevel = highlightOnlyClosestHeader ? _closestHeaderLevel : _headerLevel;\n              var newSourceRow = wotInstance.getSetting('onBeforeHighlightingRowHeader', sourceRow, _headerLevel, {\n                selectionType: selectionType,\n                rowCursor: selectionRowCursor,\n                selectionHeight: bottomRow - topRow + 1,\n                classNames: _newClasses\n              });\n              if (newSourceRow !== sourceRow) {\n                _TH = wotInstance.wtTable.getRowHeader(newSourceRow, _headerLevel);\n              }\n              addClass(_TH, _newClasses);\n            }\n            selectionRowCursor += 1;\n          }\n          if (topColumn !== null && bottomColumn !== null) {\n            for (var _column = 0; _column < renderedColumns; _column += 1) {\n              var _sourceCol = wotInstance.wtTable.columnFilter.renderedToSource(_column);\n              if (sourceRow >= topRow && sourceRow <= bottomRow && _sourceCol >= topColumn && _sourceCol <= bottomColumn) {\n                // selected cell\n                if (this.settings.className) {\n                  this.addClassAtCoords(wotInstance, sourceRow, _sourceCol, this.settings.className, this.settings.markIntersections);\n                }\n              } else if (sourceRow >= topRow && sourceRow <= bottomRow) {\n                // selection is in this row\n                if (highlightRowClassName) {\n                  this.addClassAtCoords(wotInstance, sourceRow, _sourceCol, highlightRowClassName);\n                }\n              } else if (_sourceCol >= topColumn && _sourceCol <= bottomColumn) {\n                // selection is in this column\n                if (highlightColumnClassName) {\n                  this.addClassAtCoords(wotInstance, sourceRow, _sourceCol, highlightColumnClassName);\n                }\n              }\n              var additionalSelectionClass = wotInstance.getSetting('onAfterDrawSelection', sourceRow, _sourceCol, this.settings.layerLevel);\n              if (typeof additionalSelectionClass === 'string') {\n                this.addClassAtCoords(wotInstance, sourceRow, _sourceCol, additionalSelectionClass);\n              }\n            }\n          }\n        }\n      }\n      wotInstance.getSetting('onBeforeDrawBorders', corners, this.settings.className);\n      if (this.settings.border) {\n        // warning! border.appear modifies corners!\n        this.getBorder(wotInstance).appear(corners);\n      }\n    }\n    /**\n     * Cleans up all the DOM state related to a Selection instance. Call this prior to deleting a Selection instance.\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      Object.values(this.instanceBorders).forEach(function (border) {\n        return border.destroy();\n      });\n    }\n  }]);\n  return Selection;\n}();\nexport default Selection;","map":{"version":3,"names":["_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","len","length","arr2","_i","Symbol","iterator","_arr","_n","_d","_s","_e","next","done","push","value","err","isArray","_typeof","obj","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","addClass","hasClass","Border","CellCoords","CellRange","Selection","settings","cellRange","instanceBorders","classNames","className","classNameGenerator","linearClassNameGenerator","layerLevel","getBorder","wotInstance","guid","isEmpty","add","coords","expand","replace","oldCoords","newCoords","isEqual","to","clear","getCorners","topLeft","getOuterTopLeftCorner","bottomRight","getOuterBottomRightCorner","row","col","addClassAtCoords","sourceRow","sourceColumn","markIntersections","arguments","undefined","TD","wtTable","getCell","cellClassName","includes","baseClassName","layerLevelOwner","calcClassName","element","previousIndex","index","previousClassName","concat","currentLayer","draw","border","disappear","renderedRows","getRenderedRowsCount","renderedColumns","getRenderedColumnsCount","corners","_corners","topRow","topColumn","bottomRow","bottomColumn","_this$settings","highlightHeaderClassName","highlightColumnClassName","highlightRowClassName","highlightOnlyClosestHeader","selectionType","isHeaderSelectionType","selectionColumnCursor","column","sourceCol","columnFilter","renderedToSource","THs","getColumnHeaders","closestHeaderLevel","headerLevel","newClasses","TH","newSourceCol","getSetting","columnCursor","selectionWidth","getColumnHeader","selectionRowCursor","rowFilter","_THs","getRowHeaders","_closestHeaderLevel","_headerLevel","_newClasses","_TH","newSourceRow","rowCursor","selectionHeight","getRowHeader","_column","_sourceCol","additionalSelectionClass","appear","destroy","values","forEach"],"sources":["/Users/priyadeliwala/Desktop/sales-dashboard/node_modules/handsontable/3rdparty/walkontable/src/selection.mjs"],"sourcesContent":["function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.values.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nimport { addClass, hasClass } from \"./../../../helpers/dom/element.mjs\";\nimport Border from \"./border.mjs\";\nimport CellCoords from \"./cell/coords.mjs\";\nimport CellRange from \"./cell/range.mjs\";\n/**\n * @class Selection\n */\n\nvar Selection = /*#__PURE__*/function () {\n  /**\n   * @param {object} settings The selection settings object.\n   * @param {CellRange} cellRange The cell range instance.\n   */\n  function Selection(settings, cellRange) {\n    _classCallCheck(this, Selection);\n\n    this.settings = settings;\n    this.cellRange = cellRange || null;\n    this.instanceBorders = {};\n    this.classNames = [this.settings.className];\n    this.classNameGenerator = this.linearClassNameGenerator(this.settings.className, this.settings.layerLevel);\n  }\n  /**\n   * Each Walkontable clone requires it's own border for every selection. This method creates and returns selection\n   * borders per instance.\n   *\n   * @param {Walkontable} wotInstance The Walkontable instance.\n   * @returns {Border}\n   */\n\n\n  _createClass(Selection, [{\n    key: \"getBorder\",\n    value: function getBorder(wotInstance) {\n      if (!this.instanceBorders[wotInstance.guid]) {\n        this.instanceBorders[wotInstance.guid] = new Border(wotInstance, this.settings);\n      }\n\n      return this.instanceBorders[wotInstance.guid];\n    }\n    /**\n     * Checks if selection is empty.\n     *\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return this.cellRange === null;\n    }\n    /**\n     * Adds a cell coords to the selection.\n     *\n     * @param {CellCoords} coords The cell coordinates to add.\n     * @returns {Selection}\n     */\n\n  }, {\n    key: \"add\",\n    value: function add(coords) {\n      if (this.isEmpty()) {\n        this.cellRange = new CellRange(coords);\n      } else {\n        this.cellRange.expand(coords);\n      }\n\n      return this;\n    }\n    /**\n     * If selection range from or to property equals oldCoords, replace it with newCoords. Return boolean\n     * information about success.\n     *\n     * @param {CellCoords} oldCoords An old cell coordinates to replace.\n     * @param {CellCoords} newCoords The new cell coordinates.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"replace\",\n    value: function replace(oldCoords, newCoords) {\n      if (!this.isEmpty()) {\n        if (this.cellRange.from.isEqual(oldCoords)) {\n          this.cellRange.from = newCoords;\n          return true;\n        }\n\n        if (this.cellRange.to.isEqual(oldCoords)) {\n          this.cellRange.to = newCoords;\n          return true;\n        }\n      }\n\n      return false;\n    }\n    /**\n     * Clears selection.\n     *\n     * @returns {Selection}\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.cellRange = null;\n      return this;\n    }\n    /**\n     * Returns the top left (TL) and bottom right (BR) selection coordinates.\n     *\n     * @returns {Array} Returns array of coordinates for example `[1, 1, 5, 5]`.\n     */\n\n  }, {\n    key: \"getCorners\",\n    value: function getCorners() {\n      var topLeft = this.cellRange.getOuterTopLeftCorner();\n      var bottomRight = this.cellRange.getOuterBottomRightCorner();\n      return [topLeft.row, topLeft.col, bottomRight.row, bottomRight.col];\n    }\n    /**\n     * Adds class name to cell element at given coords.\n     *\n     * @param {Walkontable} wotInstance Walkontable instance.\n     * @param {number} sourceRow Cell row coord.\n     * @param {number} sourceColumn Cell column coord.\n     * @param {string} className Class name.\n     * @param {boolean} [markIntersections=false] If `true`, linear className generator will be used to add CSS classes\n     *                                            in a continuous way.\n     * @returns {Selection}\n     */\n\n  }, {\n    key: \"addClassAtCoords\",\n    value: function addClassAtCoords(wotInstance, sourceRow, sourceColumn, className) {\n      var markIntersections = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n      var TD = wotInstance.wtTable.getCell(new CellCoords(sourceRow, sourceColumn));\n\n      if (_typeof(TD) === 'object') {\n        var cellClassName = className;\n\n        if (markIntersections) {\n          cellClassName = this.classNameGenerator(TD);\n\n          if (!this.classNames.includes(cellClassName)) {\n            this.classNames.push(cellClassName);\n          }\n        }\n\n        addClass(TD, cellClassName);\n      }\n\n      return this;\n    }\n    /**\n     * Generate helper for calculating classNames based on previously added base className.\n     * The generated className is always generated as a continuation of the previous className. For example, when\n     * the currently checked element has 'area-2' className the generated new className will be 'area-3'. When\n     * the element doesn't have any classNames than the base className will be returned ('area');.\n     *\n     * @param {string} baseClassName Base className to be used.\n     * @param {number} layerLevelOwner Layer level which the instance of the Selection belongs to.\n     * @returns {Function}\n     */\n\n  }, {\n    key: \"linearClassNameGenerator\",\n    value: function linearClassNameGenerator(baseClassName, layerLevelOwner) {\n      // TODO: Make this recursive function Proper Tail Calls (TCO/PTC) friendly.\n      return function calcClassName(element) {\n        var previousIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n\n        if (layerLevelOwner === 0 || previousIndex === 0) {\n          return baseClassName;\n        }\n\n        var index = previousIndex >= 0 ? previousIndex : layerLevelOwner;\n        var className = baseClassName;\n        index -= 1;\n        var previousClassName = index === 0 ? baseClassName : \"\".concat(baseClassName, \"-\").concat(index);\n\n        if (hasClass(element, previousClassName)) {\n          var currentLayer = index + 1;\n          className = \"\".concat(baseClassName, \"-\").concat(currentLayer);\n        } else {\n          className = calcClassName(element, index);\n        }\n\n        return className;\n      };\n    }\n    /**\n     * @param {Walkontable} wotInstance The Walkontable instance.\n     */\n\n  }, {\n    key: \"draw\",\n    value: function draw(wotInstance) {\n      if (this.isEmpty()) {\n        if (this.settings.border) {\n          this.getBorder(wotInstance).disappear();\n        }\n\n        return;\n      }\n\n      var renderedRows = wotInstance.wtTable.getRenderedRowsCount();\n      var renderedColumns = wotInstance.wtTable.getRenderedColumnsCount();\n      var corners = this.getCorners();\n\n      var _corners = _slicedToArray(corners, 4),\n          topRow = _corners[0],\n          topColumn = _corners[1],\n          bottomRow = _corners[2],\n          bottomColumn = _corners[3];\n\n      var _this$settings = this.settings,\n          highlightHeaderClassName = _this$settings.highlightHeaderClassName,\n          highlightColumnClassName = _this$settings.highlightColumnClassName,\n          highlightRowClassName = _this$settings.highlightRowClassName,\n          highlightOnlyClosestHeader = _this$settings.highlightOnlyClosestHeader,\n          selectionType = _this$settings.selectionType;\n      var isHeaderSelectionType = selectionType === void 0 || ['active-header', 'header'].includes(selectionType);\n\n      if (isHeaderSelectionType && topColumn !== null && bottomColumn !== null) {\n        var selectionColumnCursor = 0;\n\n        for (var column = 0; column < renderedColumns; column += 1) {\n          var sourceCol = wotInstance.wtTable.columnFilter.renderedToSource(column);\n\n          if (sourceCol >= topColumn && sourceCol <= bottomColumn) {\n            var THs = wotInstance.wtTable.getColumnHeaders(sourceCol);\n            var closestHeaderLevel = THs.length - 1;\n\n            if (highlightOnlyClosestHeader && THs.length > 1) {\n              THs = [THs[closestHeaderLevel]];\n            }\n\n            for (var headerLevel = 0; headerLevel < THs.length; headerLevel += 1) {\n              var newClasses = [];\n              var TH = THs[headerLevel];\n\n              if (highlightHeaderClassName) {\n                newClasses.push(highlightHeaderClassName);\n              }\n\n              if (highlightColumnClassName) {\n                newClasses.push(highlightColumnClassName);\n              }\n\n              headerLevel = highlightOnlyClosestHeader ? closestHeaderLevel : headerLevel;\n              var newSourceCol = wotInstance.getSetting('onBeforeHighlightingColumnHeader', sourceCol, headerLevel, {\n                selectionType: selectionType,\n                columnCursor: selectionColumnCursor,\n                selectionWidth: bottomColumn - topColumn + 1,\n                classNames: newClasses\n              });\n\n              if (newSourceCol !== sourceCol) {\n                TH = wotInstance.wtTable.getColumnHeader(newSourceCol, headerLevel);\n              }\n\n              addClass(TH, newClasses);\n            }\n\n            selectionColumnCursor += 1;\n          }\n        }\n      }\n\n      if (topRow !== null && bottomRow !== null) {\n        var selectionRowCursor = 0;\n\n        for (var row = 0; row < renderedRows; row += 1) {\n          var sourceRow = wotInstance.wtTable.rowFilter.renderedToSource(row);\n\n          if (isHeaderSelectionType && sourceRow >= topRow && sourceRow <= bottomRow) {\n            var _THs = wotInstance.wtTable.getRowHeaders(sourceRow);\n\n            var _closestHeaderLevel = _THs.length - 1;\n\n            if (highlightOnlyClosestHeader && _THs.length > 1) {\n              _THs = [_THs[_closestHeaderLevel]];\n            }\n\n            for (var _headerLevel = 0; _headerLevel < _THs.length; _headerLevel += 1) {\n              var _newClasses = [];\n              var _TH = _THs[_headerLevel];\n\n              if (highlightHeaderClassName) {\n                _newClasses.push(highlightHeaderClassName);\n              }\n\n              if (highlightRowClassName) {\n                _newClasses.push(highlightRowClassName);\n              }\n\n              _headerLevel = highlightOnlyClosestHeader ? _closestHeaderLevel : _headerLevel;\n              var newSourceRow = wotInstance.getSetting('onBeforeHighlightingRowHeader', sourceRow, _headerLevel, {\n                selectionType: selectionType,\n                rowCursor: selectionRowCursor,\n                selectionHeight: bottomRow - topRow + 1,\n                classNames: _newClasses\n              });\n\n              if (newSourceRow !== sourceRow) {\n                _TH = wotInstance.wtTable.getRowHeader(newSourceRow, _headerLevel);\n              }\n\n              addClass(_TH, _newClasses);\n            }\n\n            selectionRowCursor += 1;\n          }\n\n          if (topColumn !== null && bottomColumn !== null) {\n            for (var _column = 0; _column < renderedColumns; _column += 1) {\n              var _sourceCol = wotInstance.wtTable.columnFilter.renderedToSource(_column);\n\n              if (sourceRow >= topRow && sourceRow <= bottomRow && _sourceCol >= topColumn && _sourceCol <= bottomColumn) {\n                // selected cell\n                if (this.settings.className) {\n                  this.addClassAtCoords(wotInstance, sourceRow, _sourceCol, this.settings.className, this.settings.markIntersections);\n                }\n              } else if (sourceRow >= topRow && sourceRow <= bottomRow) {\n                // selection is in this row\n                if (highlightRowClassName) {\n                  this.addClassAtCoords(wotInstance, sourceRow, _sourceCol, highlightRowClassName);\n                }\n              } else if (_sourceCol >= topColumn && _sourceCol <= bottomColumn) {\n                // selection is in this column\n                if (highlightColumnClassName) {\n                  this.addClassAtCoords(wotInstance, sourceRow, _sourceCol, highlightColumnClassName);\n                }\n              }\n\n              var additionalSelectionClass = wotInstance.getSetting('onAfterDrawSelection', sourceRow, _sourceCol, this.settings.layerLevel);\n\n              if (typeof additionalSelectionClass === 'string') {\n                this.addClassAtCoords(wotInstance, sourceRow, _sourceCol, additionalSelectionClass);\n              }\n            }\n          }\n        }\n      }\n\n      wotInstance.getSetting('onBeforeDrawBorders', corners, this.settings.className);\n\n      if (this.settings.border) {\n        // warning! border.appear modifies corners!\n        this.getBorder(wotInstance).appear(corners);\n      }\n    }\n    /**\n     * Cleans up all the DOM state related to a Selection instance. Call this prior to deleting a Selection instance.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      Object.values(this.instanceBorders).forEach(function (border) {\n        return border.destroy();\n      });\n    }\n  }]);\n\n  return Selection;\n}();\n\nexport default Selection;"],"mappings":"AAAA,SAASA,cAAcA,CAACC,GAAG,EAAEC,CAAC,EAAE;EAAE,OAAOC,eAAe,CAACF,GAAG,CAAC,IAAIG,qBAAqB,CAACH,GAAG,EAAEC,CAAC,CAAC,IAAIG,2BAA2B,CAACJ,GAAG,EAAEC,CAAC,CAAC,IAAII,gBAAgB,CAAC,CAAC;AAAE;AAE7J,SAASA,gBAAgBA,CAAA,EAAG;EAAE,MAAM,IAAIC,SAAS,CAAC,2IAA2I,CAAC;AAAE;AAEhM,SAASF,2BAA2BA,CAACG,CAAC,EAAEC,MAAM,EAAE;EAAE,IAAI,CAACD,CAAC,EAAE;EAAQ,IAAI,OAAOA,CAAC,KAAK,QAAQ,EAAE,OAAOE,iBAAiB,CAACF,CAAC,EAAEC,MAAM,CAAC;EAAE,IAAIE,CAAC,GAAGC,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACP,CAAC,CAAC,CAACQ,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAAE,IAAIL,CAAC,KAAK,QAAQ,IAAIH,CAAC,CAACS,WAAW,EAAEN,CAAC,GAAGH,CAAC,CAACS,WAAW,CAACC,IAAI;EAAE,IAAIP,CAAC,KAAK,KAAK,IAAIA,CAAC,KAAK,KAAK,EAAE,OAAOQ,KAAK,CAACC,IAAI,CAACZ,CAAC,CAAC;EAAE,IAAIG,CAAC,KAAK,WAAW,IAAI,0CAA0C,CAACU,IAAI,CAACV,CAAC,CAAC,EAAE,OAAOD,iBAAiB,CAACF,CAAC,EAAEC,MAAM,CAAC;AAAE;AAE/Z,SAASC,iBAAiBA,CAACT,GAAG,EAAEqB,GAAG,EAAE;EAAE,IAAIA,GAAG,IAAI,IAAI,IAAIA,GAAG,GAAGrB,GAAG,CAACsB,MAAM,EAAED,GAAG,GAAGrB,GAAG,CAACsB,MAAM;EAAE,KAAK,IAAIrB,CAAC,GAAG,CAAC,EAAEsB,IAAI,GAAG,IAAIL,KAAK,CAACG,GAAG,CAAC,EAAEpB,CAAC,GAAGoB,GAAG,EAAEpB,CAAC,EAAE,EAAE;IAAEsB,IAAI,CAACtB,CAAC,CAAC,GAAGD,GAAG,CAACC,CAAC,CAAC;EAAE;EAAE,OAAOsB,IAAI;AAAE;AAEtL,SAASpB,qBAAqBA,CAACH,GAAG,EAAEC,CAAC,EAAE;EAAE,IAAIuB,EAAE,GAAGxB,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,OAAOyB,MAAM,KAAK,WAAW,IAAIzB,GAAG,CAACyB,MAAM,CAACC,QAAQ,CAAC,IAAI1B,GAAG,CAAC,YAAY,CAAC;EAAE,IAAIwB,EAAE,IAAI,IAAI,EAAE;EAAQ,IAAIG,IAAI,GAAG,EAAE;EAAE,IAAIC,EAAE,GAAG,IAAI;EAAE,IAAIC,EAAE,GAAG,KAAK;EAAE,IAAIC,EAAE,EAAEC,EAAE;EAAE,IAAI;IAAE,KAAKP,EAAE,GAAGA,EAAE,CAACV,IAAI,CAACd,GAAG,CAAC,EAAE,EAAE4B,EAAE,GAAG,CAACE,EAAE,GAAGN,EAAE,CAACQ,IAAI,CAAC,CAAC,EAAEC,IAAI,CAAC,EAAEL,EAAE,GAAG,IAAI,EAAE;MAAED,IAAI,CAACO,IAAI,CAACJ,EAAE,CAACK,KAAK,CAAC;MAAE,IAAIlC,CAAC,IAAI0B,IAAI,CAACL,MAAM,KAAKrB,CAAC,EAAE;IAAO;EAAE,CAAC,CAAC,OAAOmC,GAAG,EAAE;IAAEP,EAAE,GAAG,IAAI;IAAEE,EAAE,GAAGK,GAAG;EAAE,CAAC,SAAS;IAAE,IAAI;MAAE,IAAI,CAACR,EAAE,IAAIJ,EAAE,CAAC,QAAQ,CAAC,IAAI,IAAI,EAAEA,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC;IAAE,CAAC,SAAS;MAAE,IAAIK,EAAE,EAAE,MAAME,EAAE;IAAE;EAAE;EAAE,OAAOJ,IAAI;AAAE;AAEhgB,SAASzB,eAAeA,CAACF,GAAG,EAAE;EAAE,IAAIkB,KAAK,CAACmB,OAAO,CAACrC,GAAG,CAAC,EAAE,OAAOA,GAAG;AAAE;AAmBpE,SAASsC,OAAOA,CAACC,GAAG,EAAE;EAAE,yBAAyB;;EAAE,OAAOD,OAAO,GAAG,UAAU,IAAI,OAAOb,MAAM,IAAI,QAAQ,IAAI,OAAOA,MAAM,CAACC,QAAQ,GAAG,UAAUa,GAAG,EAAE;IAAE,OAAO,OAAOA,GAAG;EAAE,CAAC,GAAG,UAAUA,GAAG,EAAE;IAAE,OAAOA,GAAG,IAAI,UAAU,IAAI,OAAOd,MAAM,IAAIc,GAAG,CAACvB,WAAW,KAAKS,MAAM,IAAIc,GAAG,KAAKd,MAAM,CAACb,SAAS,GAAG,QAAQ,GAAG,OAAO2B,GAAG;EAAE,CAAC,EAAED,OAAO,CAACC,GAAG,CAAC;AAAE;AAE/U,SAASC,eAAeA,CAACC,QAAQ,EAAEC,WAAW,EAAE;EAAE,IAAI,EAAED,QAAQ,YAAYC,WAAW,CAAC,EAAE;IAAE,MAAM,IAAIpC,SAAS,CAAC,mCAAmC,CAAC;EAAE;AAAE;AAExJ,SAASqC,iBAAiBA,CAACC,MAAM,EAAEC,KAAK,EAAE;EAAE,KAAK,IAAI5C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4C,KAAK,CAACvB,MAAM,EAAErB,CAAC,EAAE,EAAE;IAAE,IAAI6C,UAAU,GAAGD,KAAK,CAAC5C,CAAC,CAAC;IAAE6C,UAAU,CAACC,UAAU,GAAGD,UAAU,CAACC,UAAU,IAAI,KAAK;IAAED,UAAU,CAACE,YAAY,GAAG,IAAI;IAAE,IAAI,OAAO,IAAIF,UAAU,EAAEA,UAAU,CAACG,QAAQ,GAAG,IAAI;IAAEtC,MAAM,CAACuC,cAAc,CAACN,MAAM,EAAEE,UAAU,CAACK,GAAG,EAAEL,UAAU,CAAC;EAAE;AAAE;AAE5T,SAASM,YAAYA,CAACV,WAAW,EAAEW,UAAU,EAAEC,WAAW,EAAE;EAAE,IAAID,UAAU,EAAEV,iBAAiB,CAACD,WAAW,CAAC9B,SAAS,EAAEyC,UAAU,CAAC;EAAE,IAAIC,WAAW,EAAEX,iBAAiB,CAACD,WAAW,EAAEY,WAAW,CAAC;EAAE3C,MAAM,CAACuC,cAAc,CAACR,WAAW,EAAE,WAAW,EAAE;IAAEO,QAAQ,EAAE;EAAM,CAAC,CAAC;EAAE,OAAOP,WAAW;AAAE;AAE5R,SAASa,QAAQ,EAAEC,QAAQ,QAAQ,oCAAoC;AACvE,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,UAAU,MAAM,mBAAmB;AAC1C,OAAOC,SAAS,MAAM,kBAAkB;AACxC;AACA;AACA;;AAEA,IAAIC,SAAS,GAAG,aAAa,YAAY;EACvC;AACF;AACA;AACA;EACE,SAASA,SAASA,CAACC,QAAQ,EAAEC,SAAS,EAAE;IACtCtB,eAAe,CAAC,IAAI,EAAEoB,SAAS,CAAC;IAEhC,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,SAAS,GAAGA,SAAS,IAAI,IAAI;IAClC,IAAI,CAACC,eAAe,GAAG,CAAC,CAAC;IACzB,IAAI,CAACC,UAAU,GAAG,CAAC,IAAI,CAACH,QAAQ,CAACI,SAAS,CAAC;IAC3C,IAAI,CAACC,kBAAkB,GAAG,IAAI,CAACC,wBAAwB,CAAC,IAAI,CAACN,QAAQ,CAACI,SAAS,EAAE,IAAI,CAACJ,QAAQ,CAACO,UAAU,CAAC;EAC5G;EACA;AACF;AACA;AACA;AACA;AACA;AACA;;EAGEhB,YAAY,CAACQ,SAAS,EAAE,CAAC;IACvBT,GAAG,EAAE,WAAW;IAChBhB,KAAK,EAAE,SAASkC,SAASA,CAACC,WAAW,EAAE;MACrC,IAAI,CAAC,IAAI,CAACP,eAAe,CAACO,WAAW,CAACC,IAAI,CAAC,EAAE;QAC3C,IAAI,CAACR,eAAe,CAACO,WAAW,CAACC,IAAI,CAAC,GAAG,IAAId,MAAM,CAACa,WAAW,EAAE,IAAI,CAACT,QAAQ,CAAC;MACjF;MAEA,OAAO,IAAI,CAACE,eAAe,CAACO,WAAW,CAACC,IAAI,CAAC;IAC/C;IACA;AACJ;AACA;AACA;AACA;EAEE,CAAC,EAAE;IACDpB,GAAG,EAAE,SAAS;IACdhB,KAAK,EAAE,SAASqC,OAAOA,CAAA,EAAG;MACxB,OAAO,IAAI,CAACV,SAAS,KAAK,IAAI;IAChC;IACA;AACJ;AACA;AACA;AACA;AACA;EAEE,CAAC,EAAE;IACDX,GAAG,EAAE,KAAK;IACVhB,KAAK,EAAE,SAASsC,GAAGA,CAACC,MAAM,EAAE;MAC1B,IAAI,IAAI,CAACF,OAAO,CAAC,CAAC,EAAE;QAClB,IAAI,CAACV,SAAS,GAAG,IAAIH,SAAS,CAACe,MAAM,CAAC;MACxC,CAAC,MAAM;QACL,IAAI,CAACZ,SAAS,CAACa,MAAM,CAACD,MAAM,CAAC;MAC/B;MAEA,OAAO,IAAI;IACb;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EAEE,CAAC,EAAE;IACDvB,GAAG,EAAE,SAAS;IACdhB,KAAK,EAAE,SAASyC,OAAOA,CAACC,SAAS,EAAEC,SAAS,EAAE;MAC5C,IAAI,CAAC,IAAI,CAACN,OAAO,CAAC,CAAC,EAAE;QACnB,IAAI,IAAI,CAACV,SAAS,CAAC3C,IAAI,CAAC4D,OAAO,CAACF,SAAS,CAAC,EAAE;UAC1C,IAAI,CAACf,SAAS,CAAC3C,IAAI,GAAG2D,SAAS;UAC/B,OAAO,IAAI;QACb;QAEA,IAAI,IAAI,CAAChB,SAAS,CAACkB,EAAE,CAACD,OAAO,CAACF,SAAS,CAAC,EAAE;UACxC,IAAI,CAACf,SAAS,CAACkB,EAAE,GAAGF,SAAS;UAC7B,OAAO,IAAI;QACb;MACF;MAEA,OAAO,KAAK;IACd;IACA;AACJ;AACA;AACA;AACA;EAEE,CAAC,EAAE;IACD3B,GAAG,EAAE,OAAO;IACZhB,KAAK,EAAE,SAAS8C,KAAKA,CAAA,EAAG;MACtB,IAAI,CAACnB,SAAS,GAAG,IAAI;MACrB,OAAO,IAAI;IACb;IACA;AACJ;AACA;AACA;AACA;EAEE,CAAC,EAAE;IACDX,GAAG,EAAE,YAAY;IACjBhB,KAAK,EAAE,SAAS+C,UAAUA,CAAA,EAAG;MAC3B,IAAIC,OAAO,GAAG,IAAI,CAACrB,SAAS,CAACsB,qBAAqB,CAAC,CAAC;MACpD,IAAIC,WAAW,GAAG,IAAI,CAACvB,SAAS,CAACwB,yBAAyB,CAAC,CAAC;MAC5D,OAAO,CAACH,OAAO,CAACI,GAAG,EAAEJ,OAAO,CAACK,GAAG,EAAEH,WAAW,CAACE,GAAG,EAAEF,WAAW,CAACG,GAAG,CAAC;IACrE;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAEE,CAAC,EAAE;IACDrC,GAAG,EAAE,kBAAkB;IACvBhB,KAAK,EAAE,SAASsD,gBAAgBA,CAACnB,WAAW,EAAEoB,SAAS,EAAEC,YAAY,EAAE1B,SAAS,EAAE;MAChF,IAAI2B,iBAAiB,GAAGC,SAAS,CAACvE,MAAM,GAAG,CAAC,IAAIuE,SAAS,CAAC,CAAC,CAAC,KAAKC,SAAS,GAAGD,SAAS,CAAC,CAAC,CAAC,GAAG,KAAK;MACjG,IAAIE,EAAE,GAAGzB,WAAW,CAAC0B,OAAO,CAACC,OAAO,CAAC,IAAIvC,UAAU,CAACgC,SAAS,EAAEC,YAAY,CAAC,CAAC;MAE7E,IAAIrD,OAAO,CAACyD,EAAE,CAAC,KAAK,QAAQ,EAAE;QAC5B,IAAIG,aAAa,GAAGjC,SAAS;QAE7B,IAAI2B,iBAAiB,EAAE;UACrBM,aAAa,GAAG,IAAI,CAAChC,kBAAkB,CAAC6B,EAAE,CAAC;UAE3C,IAAI,CAAC,IAAI,CAAC/B,UAAU,CAACmC,QAAQ,CAACD,aAAa,CAAC,EAAE;YAC5C,IAAI,CAAClC,UAAU,CAAC9B,IAAI,CAACgE,aAAa,CAAC;UACrC;QACF;QAEA3C,QAAQ,CAACwC,EAAE,EAAEG,aAAa,CAAC;MAC7B;MAEA,OAAO,IAAI;IACb;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAEE,CAAC,EAAE;IACD/C,GAAG,EAAE,0BAA0B;IAC/BhB,KAAK,EAAE,SAASgC,wBAAwBA,CAACiC,aAAa,EAAEC,eAAe,EAAE;MACvE;MACA,OAAO,SAASC,aAAaA,CAACC,OAAO,EAAE;QACrC,IAAIC,aAAa,GAAGX,SAAS,CAACvE,MAAM,GAAG,CAAC,IAAIuE,SAAS,CAAC,CAAC,CAAC,KAAKC,SAAS,GAAGD,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QAE1F,IAAIQ,eAAe,KAAK,CAAC,IAAIG,aAAa,KAAK,CAAC,EAAE;UAChD,OAAOJ,aAAa;QACtB;QAEA,IAAIK,KAAK,GAAGD,aAAa,IAAI,CAAC,GAAGA,aAAa,GAAGH,eAAe;QAChE,IAAIpC,SAAS,GAAGmC,aAAa;QAC7BK,KAAK,IAAI,CAAC;QACV,IAAIC,iBAAiB,GAAGD,KAAK,KAAK,CAAC,GAAGL,aAAa,GAAG,EAAE,CAACO,MAAM,CAACP,aAAa,EAAE,GAAG,CAAC,CAACO,MAAM,CAACF,KAAK,CAAC;QAEjG,IAAIjD,QAAQ,CAAC+C,OAAO,EAAEG,iBAAiB,CAAC,EAAE;UACxC,IAAIE,YAAY,GAAGH,KAAK,GAAG,CAAC;UAC5BxC,SAAS,GAAG,EAAE,CAAC0C,MAAM,CAACP,aAAa,EAAE,GAAG,CAAC,CAACO,MAAM,CAACC,YAAY,CAAC;QAChE,CAAC,MAAM;UACL3C,SAAS,GAAGqC,aAAa,CAACC,OAAO,EAAEE,KAAK,CAAC;QAC3C;QAEA,OAAOxC,SAAS;MAClB,CAAC;IACH;IACA;AACJ;AACA;EAEE,CAAC,EAAE;IACDd,GAAG,EAAE,MAAM;IACXhB,KAAK,EAAE,SAAS0E,IAAIA,CAACvC,WAAW,EAAE;MAChC,IAAI,IAAI,CAACE,OAAO,CAAC,CAAC,EAAE;QAClB,IAAI,IAAI,CAACX,QAAQ,CAACiD,MAAM,EAAE;UACxB,IAAI,CAACzC,SAAS,CAACC,WAAW,CAAC,CAACyC,SAAS,CAAC,CAAC;QACzC;QAEA;MACF;MAEA,IAAIC,YAAY,GAAG1C,WAAW,CAAC0B,OAAO,CAACiB,oBAAoB,CAAC,CAAC;MAC7D,IAAIC,eAAe,GAAG5C,WAAW,CAAC0B,OAAO,CAACmB,uBAAuB,CAAC,CAAC;MACnE,IAAIC,OAAO,GAAG,IAAI,CAAClC,UAAU,CAAC,CAAC;MAE/B,IAAImC,QAAQ,GAAGtH,cAAc,CAACqH,OAAO,EAAE,CAAC,CAAC;QACrCE,MAAM,GAAGD,QAAQ,CAAC,CAAC,CAAC;QACpBE,SAAS,GAAGF,QAAQ,CAAC,CAAC,CAAC;QACvBG,SAAS,GAAGH,QAAQ,CAAC,CAAC,CAAC;QACvBI,YAAY,GAAGJ,QAAQ,CAAC,CAAC,CAAC;MAE9B,IAAIK,cAAc,GAAG,IAAI,CAAC7D,QAAQ;QAC9B8D,wBAAwB,GAAGD,cAAc,CAACC,wBAAwB;QAClEC,wBAAwB,GAAGF,cAAc,CAACE,wBAAwB;QAClEC,qBAAqB,GAAGH,cAAc,CAACG,qBAAqB;QAC5DC,0BAA0B,GAAGJ,cAAc,CAACI,0BAA0B;QACtEC,aAAa,GAAGL,cAAc,CAACK,aAAa;MAChD,IAAIC,qBAAqB,GAAGD,aAAa,KAAK,KAAK,CAAC,IAAI,CAAC,eAAe,EAAE,QAAQ,CAAC,CAAC5B,QAAQ,CAAC4B,aAAa,CAAC;MAE3G,IAAIC,qBAAqB,IAAIT,SAAS,KAAK,IAAI,IAAIE,YAAY,KAAK,IAAI,EAAE;QACxE,IAAIQ,qBAAqB,GAAG,CAAC;QAE7B,KAAK,IAAIC,MAAM,GAAG,CAAC,EAAEA,MAAM,GAAGhB,eAAe,EAAEgB,MAAM,IAAI,CAAC,EAAE;UAC1D,IAAIC,SAAS,GAAG7D,WAAW,CAAC0B,OAAO,CAACoC,YAAY,CAACC,gBAAgB,CAACH,MAAM,CAAC;UAEzE,IAAIC,SAAS,IAAIZ,SAAS,IAAIY,SAAS,IAAIV,YAAY,EAAE;YACvD,IAAIa,GAAG,GAAGhE,WAAW,CAAC0B,OAAO,CAACuC,gBAAgB,CAACJ,SAAS,CAAC;YACzD,IAAIK,kBAAkB,GAAGF,GAAG,CAAChH,MAAM,GAAG,CAAC;YAEvC,IAAIwG,0BAA0B,IAAIQ,GAAG,CAAChH,MAAM,GAAG,CAAC,EAAE;cAChDgH,GAAG,GAAG,CAACA,GAAG,CAACE,kBAAkB,CAAC,CAAC;YACjC;YAEA,KAAK,IAAIC,WAAW,GAAG,CAAC,EAAEA,WAAW,GAAGH,GAAG,CAAChH,MAAM,EAAEmH,WAAW,IAAI,CAAC,EAAE;cACpE,IAAIC,UAAU,GAAG,EAAE;cACnB,IAAIC,EAAE,GAAGL,GAAG,CAACG,WAAW,CAAC;cAEzB,IAAId,wBAAwB,EAAE;gBAC5Be,UAAU,CAACxG,IAAI,CAACyF,wBAAwB,CAAC;cAC3C;cAEA,IAAIC,wBAAwB,EAAE;gBAC5Bc,UAAU,CAACxG,IAAI,CAAC0F,wBAAwB,CAAC;cAC3C;cAEAa,WAAW,GAAGX,0BAA0B,GAAGU,kBAAkB,GAAGC,WAAW;cAC3E,IAAIG,YAAY,GAAGtE,WAAW,CAACuE,UAAU,CAAC,kCAAkC,EAAEV,SAAS,EAAEM,WAAW,EAAE;gBACpGV,aAAa,EAAEA,aAAa;gBAC5Be,YAAY,EAAEb,qBAAqB;gBACnCc,cAAc,EAAEtB,YAAY,GAAGF,SAAS,GAAG,CAAC;gBAC5CvD,UAAU,EAAE0E;cACd,CAAC,CAAC;cAEF,IAAIE,YAAY,KAAKT,SAAS,EAAE;gBAC9BQ,EAAE,GAAGrE,WAAW,CAAC0B,OAAO,CAACgD,eAAe,CAACJ,YAAY,EAAEH,WAAW,CAAC;cACrE;cAEAlF,QAAQ,CAACoF,EAAE,EAAED,UAAU,CAAC;YAC1B;YAEAT,qBAAqB,IAAI,CAAC;UAC5B;QACF;MACF;MAEA,IAAIX,MAAM,KAAK,IAAI,IAAIE,SAAS,KAAK,IAAI,EAAE;QACzC,IAAIyB,kBAAkB,GAAG,CAAC;QAE1B,KAAK,IAAI1D,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGyB,YAAY,EAAEzB,GAAG,IAAI,CAAC,EAAE;UAC9C,IAAIG,SAAS,GAAGpB,WAAW,CAAC0B,OAAO,CAACkD,SAAS,CAACb,gBAAgB,CAAC9C,GAAG,CAAC;UAEnE,IAAIyC,qBAAqB,IAAItC,SAAS,IAAI4B,MAAM,IAAI5B,SAAS,IAAI8B,SAAS,EAAE;YAC1E,IAAI2B,IAAI,GAAG7E,WAAW,CAAC0B,OAAO,CAACoD,aAAa,CAAC1D,SAAS,CAAC;YAEvD,IAAI2D,mBAAmB,GAAGF,IAAI,CAAC7H,MAAM,GAAG,CAAC;YAEzC,IAAIwG,0BAA0B,IAAIqB,IAAI,CAAC7H,MAAM,GAAG,CAAC,EAAE;cACjD6H,IAAI,GAAG,CAACA,IAAI,CAACE,mBAAmB,CAAC,CAAC;YACpC;YAEA,KAAK,IAAIC,YAAY,GAAG,CAAC,EAAEA,YAAY,GAAGH,IAAI,CAAC7H,MAAM,EAAEgI,YAAY,IAAI,CAAC,EAAE;cACxE,IAAIC,WAAW,GAAG,EAAE;cACpB,IAAIC,GAAG,GAAGL,IAAI,CAACG,YAAY,CAAC;cAE5B,IAAI3B,wBAAwB,EAAE;gBAC5B4B,WAAW,CAACrH,IAAI,CAACyF,wBAAwB,CAAC;cAC5C;cAEA,IAAIE,qBAAqB,EAAE;gBACzB0B,WAAW,CAACrH,IAAI,CAAC2F,qBAAqB,CAAC;cACzC;cAEAyB,YAAY,GAAGxB,0BAA0B,GAAGuB,mBAAmB,GAAGC,YAAY;cAC9E,IAAIG,YAAY,GAAGnF,WAAW,CAACuE,UAAU,CAAC,+BAA+B,EAAEnD,SAAS,EAAE4D,YAAY,EAAE;gBAClGvB,aAAa,EAAEA,aAAa;gBAC5B2B,SAAS,EAAET,kBAAkB;gBAC7BU,eAAe,EAAEnC,SAAS,GAAGF,MAAM,GAAG,CAAC;gBACvCtD,UAAU,EAAEuF;cACd,CAAC,CAAC;cAEF,IAAIE,YAAY,KAAK/D,SAAS,EAAE;gBAC9B8D,GAAG,GAAGlF,WAAW,CAAC0B,OAAO,CAAC4D,YAAY,CAACH,YAAY,EAAEH,YAAY,CAAC;cACpE;cAEA/F,QAAQ,CAACiG,GAAG,EAAED,WAAW,CAAC;YAC5B;YAEAN,kBAAkB,IAAI,CAAC;UACzB;UAEA,IAAI1B,SAAS,KAAK,IAAI,IAAIE,YAAY,KAAK,IAAI,EAAE;YAC/C,KAAK,IAAIoC,OAAO,GAAG,CAAC,EAAEA,OAAO,GAAG3C,eAAe,EAAE2C,OAAO,IAAI,CAAC,EAAE;cAC7D,IAAIC,UAAU,GAAGxF,WAAW,CAAC0B,OAAO,CAACoC,YAAY,CAACC,gBAAgB,CAACwB,OAAO,CAAC;cAE3E,IAAInE,SAAS,IAAI4B,MAAM,IAAI5B,SAAS,IAAI8B,SAAS,IAAIsC,UAAU,IAAIvC,SAAS,IAAIuC,UAAU,IAAIrC,YAAY,EAAE;gBAC1G;gBACA,IAAI,IAAI,CAAC5D,QAAQ,CAACI,SAAS,EAAE;kBAC3B,IAAI,CAACwB,gBAAgB,CAACnB,WAAW,EAAEoB,SAAS,EAAEoE,UAAU,EAAE,IAAI,CAACjG,QAAQ,CAACI,SAAS,EAAE,IAAI,CAACJ,QAAQ,CAAC+B,iBAAiB,CAAC;gBACrH;cACF,CAAC,MAAM,IAAIF,SAAS,IAAI4B,MAAM,IAAI5B,SAAS,IAAI8B,SAAS,EAAE;gBACxD;gBACA,IAAIK,qBAAqB,EAAE;kBACzB,IAAI,CAACpC,gBAAgB,CAACnB,WAAW,EAAEoB,SAAS,EAAEoE,UAAU,EAAEjC,qBAAqB,CAAC;gBAClF;cACF,CAAC,MAAM,IAAIiC,UAAU,IAAIvC,SAAS,IAAIuC,UAAU,IAAIrC,YAAY,EAAE;gBAChE;gBACA,IAAIG,wBAAwB,EAAE;kBAC5B,IAAI,CAACnC,gBAAgB,CAACnB,WAAW,EAAEoB,SAAS,EAAEoE,UAAU,EAAElC,wBAAwB,CAAC;gBACrF;cACF;cAEA,IAAImC,wBAAwB,GAAGzF,WAAW,CAACuE,UAAU,CAAC,sBAAsB,EAAEnD,SAAS,EAAEoE,UAAU,EAAE,IAAI,CAACjG,QAAQ,CAACO,UAAU,CAAC;cAE9H,IAAI,OAAO2F,wBAAwB,KAAK,QAAQ,EAAE;gBAChD,IAAI,CAACtE,gBAAgB,CAACnB,WAAW,EAAEoB,SAAS,EAAEoE,UAAU,EAAEC,wBAAwB,CAAC;cACrF;YACF;UACF;QACF;MACF;MAEAzF,WAAW,CAACuE,UAAU,CAAC,qBAAqB,EAAEzB,OAAO,EAAE,IAAI,CAACvD,QAAQ,CAACI,SAAS,CAAC;MAE/E,IAAI,IAAI,CAACJ,QAAQ,CAACiD,MAAM,EAAE;QACxB;QACA,IAAI,CAACzC,SAAS,CAACC,WAAW,CAAC,CAAC0F,MAAM,CAAC5C,OAAO,CAAC;MAC7C;IACF;IACA;AACJ;AACA;EAEE,CAAC,EAAE;IACDjE,GAAG,EAAE,SAAS;IACdhB,KAAK,EAAE,SAAS8H,OAAOA,CAAA,EAAG;MACxBtJ,MAAM,CAACuJ,MAAM,CAAC,IAAI,CAACnG,eAAe,CAAC,CAACoG,OAAO,CAAC,UAAUrD,MAAM,EAAE;QAC5D,OAAOA,MAAM,CAACmD,OAAO,CAAC,CAAC;MACzB,CAAC,CAAC;IACJ;EACF,CAAC,CAAC,CAAC;EAEH,OAAOrG,SAAS;AAClB,CAAC,CAAC,CAAC;AAEH,eAAeA,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
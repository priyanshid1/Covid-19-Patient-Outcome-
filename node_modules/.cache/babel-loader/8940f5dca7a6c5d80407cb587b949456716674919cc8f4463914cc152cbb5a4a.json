{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nimport NodesPool from \"./../utils/nodesPool.mjs\";\n/**\n * Base renderer class, abstract logic for specialized renderers.\n *\n * @class BaseRenderer\n */\n\nvar BaseRenderer = /*#__PURE__*/function () {\n  function BaseRenderer(nodeType, rootNode) {\n    _classCallCheck(this, BaseRenderer);\n\n    /**\n     * Factory for newly created DOM elements.\n     *\n     * NodePool should be used for each renderer. For the first stage of the refactoring\n     * process, only some of the renderers are implemented a new approach.\n     *\n     * @type {NodesPool|null}\n     */\n    this.nodesPool = typeof nodeType === 'string' ? new NodesPool(nodeType) : null;\n    /**\n     * Node type which the renderer will manage while building the table (eg. 'TD', 'TR', 'TH').\n     *\n     * @type {string}\n     */\n\n    this.nodeType = nodeType;\n    /**\n     * The root node to which newly created elements will be inserted.\n     *\n     * @type {HTMLElement}\n     */\n\n    this.rootNode = rootNode;\n    /**\n     * The instance of the Table class, a wrapper for all renderers and holder for properties describe table state.\n     *\n     * @type {TableRenderer}\n     */\n\n    this.table = null;\n    /**\n     * Counter of nodes already added.\n     *\n     * @type {number}\n     */\n\n    this.renderedNodes = 0;\n  }\n  /**\n   * Sets the table renderer instance to the current renderer.\n   *\n   * @param {TableRenderer} table The TableRenderer instance.\n   */\n\n  _createClass(BaseRenderer, [{\n    key: \"setTable\",\n    value: function setTable(table) {\n      if (this.nodesPool) {\n        this.nodesPool.setRootDocument(table.rootDocument);\n      }\n      this.table = table;\n    }\n    /**\n     * Adjusts the number of rendered nodes.\n     */\n  }, {\n    key: \"adjust\",\n    value: function adjust() {}\n    /**\n     * Renders the contents to the elements.\n     */\n  }, {\n    key: \"render\",\n    value: function render() {}\n  }]);\n  return BaseRenderer;\n}();\nexport { BaseRenderer as default };","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","NodesPool","BaseRenderer","nodeType","rootNode","nodesPool","table","renderedNodes","value","setTable","setRootDocument","rootDocument","adjust","render","default"],"sources":["/Users/priyadeliwala/Desktop/sales-dashboard/node_modules/handsontable/3rdparty/walkontable/src/renderer/_base.mjs"],"sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nimport NodesPool from \"./../utils/nodesPool.mjs\";\n/**\n * Base renderer class, abstract logic for specialized renderers.\n *\n * @class BaseRenderer\n */\n\nvar BaseRenderer = /*#__PURE__*/function () {\n  function BaseRenderer(nodeType, rootNode) {\n    _classCallCheck(this, BaseRenderer);\n\n    /**\n     * Factory for newly created DOM elements.\n     *\n     * NodePool should be used for each renderer. For the first stage of the refactoring\n     * process, only some of the renderers are implemented a new approach.\n     *\n     * @type {NodesPool|null}\n     */\n    this.nodesPool = typeof nodeType === 'string' ? new NodesPool(nodeType) : null;\n    /**\n     * Node type which the renderer will manage while building the table (eg. 'TD', 'TR', 'TH').\n     *\n     * @type {string}\n     */\n\n    this.nodeType = nodeType;\n    /**\n     * The root node to which newly created elements will be inserted.\n     *\n     * @type {HTMLElement}\n     */\n\n    this.rootNode = rootNode;\n    /**\n     * The instance of the Table class, a wrapper for all renderers and holder for properties describe table state.\n     *\n     * @type {TableRenderer}\n     */\n\n    this.table = null;\n    /**\n     * Counter of nodes already added.\n     *\n     * @type {number}\n     */\n\n    this.renderedNodes = 0;\n  }\n  /**\n   * Sets the table renderer instance to the current renderer.\n   *\n   * @param {TableRenderer} table The TableRenderer instance.\n   */\n\n\n  _createClass(BaseRenderer, [{\n    key: \"setTable\",\n    value: function setTable(table) {\n      if (this.nodesPool) {\n        this.nodesPool.setRootDocument(table.rootDocument);\n      }\n\n      this.table = table;\n    }\n    /**\n     * Adjusts the number of rendered nodes.\n     */\n\n  }, {\n    key: \"adjust\",\n    value: function adjust() {}\n    /**\n     * Renders the contents to the elements.\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {}\n  }]);\n\n  return BaseRenderer;\n}();\n\nexport { BaseRenderer as default };"],"mappings":"AAAA,SAASA,eAAeA,CAACC,QAAQ,EAAEC,WAAW,EAAE;EAAE,IAAI,EAAED,QAAQ,YAAYC,WAAW,CAAC,EAAE;IAAE,MAAM,IAAIC,SAAS,CAAC,mCAAmC,CAAC;EAAE;AAAE;AAExJ,SAASC,iBAAiBA,CAACC,MAAM,EAAEC,KAAK,EAAE;EAAE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,KAAK,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;IAAE,IAAIE,UAAU,GAAGH,KAAK,CAACC,CAAC,CAAC;IAAEE,UAAU,CAACC,UAAU,GAAGD,UAAU,CAACC,UAAU,IAAI,KAAK;IAAED,UAAU,CAACE,YAAY,GAAG,IAAI;IAAE,IAAI,OAAO,IAAIF,UAAU,EAAEA,UAAU,CAACG,QAAQ,GAAG,IAAI;IAAEC,MAAM,CAACC,cAAc,CAACT,MAAM,EAAEI,UAAU,CAACM,GAAG,EAAEN,UAAU,CAAC;EAAE;AAAE;AAE5T,SAASO,YAAYA,CAACd,WAAW,EAAEe,UAAU,EAAEC,WAAW,EAAE;EAAE,IAAID,UAAU,EAAEb,iBAAiB,CAACF,WAAW,CAACiB,SAAS,EAAEF,UAAU,CAAC;EAAE,IAAIC,WAAW,EAAEd,iBAAiB,CAACF,WAAW,EAAEgB,WAAW,CAAC;EAAEL,MAAM,CAACC,cAAc,CAACZ,WAAW,EAAE,WAAW,EAAE;IAAEU,QAAQ,EAAE;EAAM,CAAC,CAAC;EAAE,OAAOV,WAAW;AAAE;AAE5R,OAAOkB,SAAS,MAAM,0BAA0B;AAChD;AACA;AACA;AACA;AACA;;AAEA,IAAIC,YAAY,GAAG,aAAa,YAAY;EAC1C,SAASA,YAAYA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;IACxCvB,eAAe,CAAC,IAAI,EAAEqB,YAAY,CAAC;;IAEnC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;IACI,IAAI,CAACG,SAAS,GAAG,OAAOF,QAAQ,KAAK,QAAQ,GAAG,IAAIF,SAAS,CAACE,QAAQ,CAAC,GAAG,IAAI;IAC9E;AACJ;AACA;AACA;AACA;;IAEI,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IACxB;AACJ;AACA;AACA;AACA;;IAEI,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB;AACJ;AACA;AACA;AACA;;IAEI,IAAI,CAACE,KAAK,GAAG,IAAI;IACjB;AACJ;AACA;AACA;AACA;;IAEI,IAAI,CAACC,aAAa,GAAG,CAAC;EACxB;EACA;AACF;AACA;AACA;AACA;;EAGEV,YAAY,CAACK,YAAY,EAAE,CAAC;IAC1BN,GAAG,EAAE,UAAU;IACfY,KAAK,EAAE,SAASC,QAAQA,CAACH,KAAK,EAAE;MAC9B,IAAI,IAAI,CAACD,SAAS,EAAE;QAClB,IAAI,CAACA,SAAS,CAACK,eAAe,CAACJ,KAAK,CAACK,YAAY,CAAC;MACpD;MAEA,IAAI,CAACL,KAAK,GAAGA,KAAK;IACpB;IACA;AACJ;AACA;EAEE,CAAC,EAAE;IACDV,GAAG,EAAE,QAAQ;IACbY,KAAK,EAAE,SAASI,MAAMA,CAAA,EAAG,CAAC;IAC1B;AACJ;AACA;EAEE,CAAC,EAAE;IACDhB,GAAG,EAAE,QAAQ;IACbY,KAAK,EAAE,SAASK,MAAMA,CAAA,EAAG,CAAC;EAC5B,CAAC,CAAC,CAAC;EAEH,OAAOX,YAAY;AACrB,CAAC,CAAC,CAAC;AAEH,SAASA,YAAY,IAAIY,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
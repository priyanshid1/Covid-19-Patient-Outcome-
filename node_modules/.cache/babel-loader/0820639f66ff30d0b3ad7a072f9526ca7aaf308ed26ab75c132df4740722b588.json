{"ast":null,"code":"export var conditions = {};\n/**\n * Get condition closure with pre-bound arguments.\n *\n * @param {string} name Condition name.\n * @param {Array} args Condition arguments.\n * @returns {Function}\n */\n\nexport function getCondition(name, args) {\n  if (!conditions[name]) {\n    throw Error(\"Filter condition \\\"\".concat(name, \"\\\" does not exist.\"));\n  }\n  var _conditions$name = conditions[name],\n    condition = _conditions$name.condition,\n    descriptor = _conditions$name.descriptor;\n  var conditionArguments = args;\n  if (descriptor.inputValuesDecorator) {\n    conditionArguments = descriptor.inputValuesDecorator(conditionArguments);\n  }\n  return function (dataRow) {\n    return condition.apply(dataRow.meta.instance, [].concat([dataRow], [conditionArguments]));\n  };\n}\n/**\n * Get condition object descriptor which defines some additional informations about this condition.\n *\n * @param {string} name Condition name.\n * @returns {object}\n */\n\nexport function getConditionDescriptor(name) {\n  if (!conditions[name]) {\n    throw Error(\"Filter condition \\\"\".concat(name, \"\\\" does not exist.\"));\n  }\n  return conditions[name].descriptor;\n}\n/**\n * Condition registerer.\n *\n * @param {string} name Condition name.\n * @param {Function} condition Condition function.\n * @param {object} descriptor Condition descriptor.\n */\n\nexport function registerCondition(name, condition, descriptor) {\n  descriptor.key = name;\n  conditions[name] = {\n    condition: condition,\n    descriptor: descriptor\n  };\n}","map":{"version":3,"names":["conditions","getCondition","name","args","Error","concat","_conditions$name","condition","descriptor","conditionArguments","inputValuesDecorator","dataRow","apply","meta","instance","getConditionDescriptor","registerCondition","key"],"sources":["/Users/priyadeliwala/Desktop/sales-dashboard/node_modules/handsontable/plugins/filters/conditionRegisterer.mjs"],"sourcesContent":["import \"core-js/modules/es.array.concat.js\";\nexport var conditions = {};\n/**\n * Get condition closure with pre-bound arguments.\n *\n * @param {string} name Condition name.\n * @param {Array} args Condition arguments.\n * @returns {Function}\n */\n\nexport function getCondition(name, args) {\n  if (!conditions[name]) {\n    throw Error(\"Filter condition \\\"\".concat(name, \"\\\" does not exist.\"));\n  }\n\n  var _conditions$name = conditions[name],\n      condition = _conditions$name.condition,\n      descriptor = _conditions$name.descriptor;\n  var conditionArguments = args;\n\n  if (descriptor.inputValuesDecorator) {\n    conditionArguments = descriptor.inputValuesDecorator(conditionArguments);\n  }\n\n  return function (dataRow) {\n    return condition.apply(dataRow.meta.instance, [].concat([dataRow], [conditionArguments]));\n  };\n}\n/**\n * Get condition object descriptor which defines some additional informations about this condition.\n *\n * @param {string} name Condition name.\n * @returns {object}\n */\n\nexport function getConditionDescriptor(name) {\n  if (!conditions[name]) {\n    throw Error(\"Filter condition \\\"\".concat(name, \"\\\" does not exist.\"));\n  }\n\n  return conditions[name].descriptor;\n}\n/**\n * Condition registerer.\n *\n * @param {string} name Condition name.\n * @param {Function} condition Condition function.\n * @param {object} descriptor Condition descriptor.\n */\n\nexport function registerCondition(name, condition, descriptor) {\n  descriptor.key = name;\n  conditions[name] = {\n    condition: condition,\n    descriptor: descriptor\n  };\n}"],"mappings":"AACA,OAAO,IAAIA,UAAU,GAAG,CAAC,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,YAAYA,CAACC,IAAI,EAAEC,IAAI,EAAE;EACvC,IAAI,CAACH,UAAU,CAACE,IAAI,CAAC,EAAE;IACrB,MAAME,KAAK,CAAC,qBAAqB,CAACC,MAAM,CAACH,IAAI,EAAE,oBAAoB,CAAC,CAAC;EACvE;EAEA,IAAII,gBAAgB,GAAGN,UAAU,CAACE,IAAI,CAAC;IACnCK,SAAS,GAAGD,gBAAgB,CAACC,SAAS;IACtCC,UAAU,GAAGF,gBAAgB,CAACE,UAAU;EAC5C,IAAIC,kBAAkB,GAAGN,IAAI;EAE7B,IAAIK,UAAU,CAACE,oBAAoB,EAAE;IACnCD,kBAAkB,GAAGD,UAAU,CAACE,oBAAoB,CAACD,kBAAkB,CAAC;EAC1E;EAEA,OAAO,UAAUE,OAAO,EAAE;IACxB,OAAOJ,SAAS,CAACK,KAAK,CAACD,OAAO,CAACE,IAAI,CAACC,QAAQ,EAAE,EAAE,CAACT,MAAM,CAAC,CAACM,OAAO,CAAC,EAAE,CAACF,kBAAkB,CAAC,CAAC,CAAC;EAC3F,CAAC;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASM,sBAAsBA,CAACb,IAAI,EAAE;EAC3C,IAAI,CAACF,UAAU,CAACE,IAAI,CAAC,EAAE;IACrB,MAAME,KAAK,CAAC,qBAAqB,CAACC,MAAM,CAACH,IAAI,EAAE,oBAAoB,CAAC,CAAC;EACvE;EAEA,OAAOF,UAAU,CAACE,IAAI,CAAC,CAACM,UAAU;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASQ,iBAAiBA,CAACd,IAAI,EAAEK,SAAS,EAAEC,UAAU,EAAE;EAC7DA,UAAU,CAACS,GAAG,GAAGf,IAAI;EACrBF,UAAU,CAACE,IAAI,CAAC,GAAG;IACjBK,SAAS,EAAEA,SAAS;IACpBC,UAAU,EAAEA;EACd,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}